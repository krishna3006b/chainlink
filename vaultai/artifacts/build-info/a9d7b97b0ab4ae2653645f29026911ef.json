{"id":"a9d7b97b0ab4ae2653645f29026911ef","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract AutomationBase {\n  error OnlySimulatedBackend();\n\n  /**\n   * @notice method that allows it to be simulated via eth_call by checking that\n   * the sender is the zero address.\n   */\n  function _preventExecution() internal view {\n    // solhint-disable-next-line avoid-tx-origin\n    if (tx.origin != address(0) && tx.origin != address(0x1111111111111111111111111111111111111111)) {\n      revert OnlySimulatedBackend();\n    }\n  }\n\n  /**\n   * @notice modifier that allows it to be simulated via eth_call by checking\n   * that the sender is the zero address.\n   */\n  modifier cannotExecute() {\n    _preventExecution();\n    _;\n  }\n}\n"},"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {AutomationBase} from \"./AutomationBase.sol\";\nimport {AutomationCompatibleInterface} from \"./interfaces/AutomationCompatibleInterface.sol\";\n\nabstract contract AutomationCompatible is AutomationBase, AutomationCompatibleInterface {}\n"},"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// solhint-disable-next-line interface-starts-with-i\ninterface AutomationCompatibleInterface {\n  /**\n   * @notice method that is simulated by the keepers to see if any work actually\n   * needs to be performed. This method does does not actually need to be\n   * executable, and since it is only ever simulated it can consume lots of gas.\n   * @dev To ensure that it is never called, you may want to add the\n   * cannotExecute modifier from KeeperBase to your implementation of this\n   * method.\n   * @param checkData specified in the upkeep registration so it is always the\n   * same for a registered upkeep. This can easily be broken down into specific\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\n   * same contract and easily differentiated by the contract.\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\n   * performUpkeep or not.\n   * @return performData bytes that the keeper should call performUpkeep with, if\n   * upkeep is needed. If you would like to encode data to decode later, try\n   * `abi.encode`.\n   */\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\n\n  /**\n   * @notice method that is actually executed by the keepers, via the registry.\n   * The data returned by the checkUpkeep simulation will be passed into\n   * this method to actually be executed.\n   * @dev The input to this method should not be trusted, and the caller of the\n   * method should not even be restricted to any single registry. Anyone should\n   * be able call it, and the input should be validated, there is no guarantee\n   * that the data passed in is the performData returned from checkUpkeep. This\n   * could happen due to malicious keepers, racing keepers, or simply a state\n   * change while the performUpkeep transaction is waiting for confirmation.\n   * Always validate the data passed in.\n   * @param performData is the data which was passed back from the checkData\n   * simulation. If it is encoded, it can easily be decoded into other types by\n   * calling `abi.decode`. This data should not be trusted, and should be\n   * validated against the contract's current state.\n   */\n  function performUpkeep(bytes calldata performData) external;\n}\n"},"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// solhint-disable-next-line interface-starts-with-i\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(\n    uint80 _roundId\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n\n  function latestRoundData()\n    external\n    view\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n}\n"},"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// solhint-disable-next-line interface-starts-with-i\ninterface VRFCoordinatorV2Interface {\n  /**\n   * @notice Get configuration relevant for making requests\n   * @return minimumRequestConfirmations global min for request confirmations\n   * @return maxGasLimit global max for request gas limit\n   * @return s_provingKeyHashes list of registered key hashes\n   */\n  function getRequestConfig() external view returns (uint16, uint32, bytes32[] memory);\n\n  /**\n   * @notice Request a set of random words.\n   * @param keyHash - Corresponds to a particular oracle job which uses\n   * that key for generating the VRF proof. Different keyHash's have different gas price\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\n   * @param subId  - The ID of the VRF subscription. Must be funded\n   * with the minimum subscription balance required for the selected keyHash.\n   * @param minimumRequestConfirmations - How many blocks you'd like the\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n   * for why you may want to request more. The acceptable range is\n   * [minimumRequestBlockConfirmations, 200].\n   * @param callbackGasLimit - How much gas you'd like to receive in your\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n   * may be slightly less than this amount because of gas used calling the function\n   * (argument decoding etc.), so you may need to request slightly more than you expect\n   * to have inside fulfillRandomWords. The acceptable range is\n   * [0, maxGasLimit]\n   * @param numWords - The number of uint256 random values you'd like to receive\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\n   * @return requestId - A unique identifier of the request. Can be used to match\n   * a request to a response in fulfillRandomWords.\n   */\n  function requestRandomWords(\n    bytes32 keyHash,\n    uint64 subId,\n    uint16 minimumRequestConfirmations,\n    uint32 callbackGasLimit,\n    uint32 numWords\n  ) external returns (uint256 requestId);\n\n  /**\n   * @notice Create a VRF subscription.\n   * @return subId - A unique subscription id.\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n   * @dev Note to fund the subscription, use transferAndCall. For example\n   * @dev  LINKTOKEN.transferAndCall(\n   * @dev    address(COORDINATOR),\n   * @dev    amount,\n   * @dev    abi.encode(subId));\n   */\n  function createSubscription() external returns (uint64 subId);\n\n  /**\n   * @notice Get a VRF subscription.\n   * @param subId - ID of the subscription\n   * @return balance - LINK balance of the subscription in juels.\n   * @return reqCount - number of requests for this subscription, determines fee tier.\n   * @return owner - owner of the subscription.\n   * @return consumers - list of consumer address which are able to use this subscription.\n   */\n  function getSubscription(\n    uint64 subId\n  ) external view returns (uint96 balance, uint64 reqCount, address owner, address[] memory consumers);\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @param newOwner - proposed new owner of the subscription\n   */\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @dev will revert if original owner of subId has\n   * not requested that msg.sender become the new owner.\n   */\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\n\n  /**\n   * @notice Add a consumer to a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - New consumer which can use the subscription\n   */\n  function addConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Remove a consumer from a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - Consumer to remove from the subscription\n   */\n  function removeConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Cancel a subscription\n   * @param subId - ID of the subscription\n   * @param to - Where to send the remaining LINK to\n   */\n  function cancelSubscription(uint64 subId, address to) external;\n\n  /*\n   * @notice Check to see if there exists a request commitment consumers\n   * for all consumers and keyhashes for a given sub.\n   * @param subId - ID of the subscription\n   * @return true if there exists at least one unfulfilled request for the subscription, false\n   * otherwise.\n   */\n  function pendingRequestExists(uint64 subId) external view returns (bool);\n}\n"},"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n/** ****************************************************************************\n * @notice Interface for contracts using VRF randomness\n * *****************************************************************************\n * @dev PURPOSE\n *\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\n * @dev making his output up to suit himself. Reggie provides Vera a public key\n * @dev to which he knows the secret key. Each time Vera provides a seed to\n * @dev Reggie, he gives back a value which is computed completely\n * @dev deterministically from the seed and the secret key.\n *\n * @dev Reggie provides a proof by which Vera can verify that the output was\n * @dev correctly computed once Reggie tells it to her, but without that proof,\n * @dev the output is indistinguishable to her from a uniform random sample\n * @dev from the output space.\n *\n * @dev The purpose of this contract is to make it easy for unrelated contracts\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\n * @dev 1. The fulfillment came from the VRFCoordinator\n * @dev 2. The consumer contract implements fulfillRandomWords.\n * *****************************************************************************\n * @dev USAGE\n *\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\n * @dev initialize VRFConsumerBase's attributes in their constructor as\n * @dev shown:\n *\n * @dev   contract VRFConsumer {\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\n * @dev         <initialization with other arguments goes here>\n * @dev       }\n * @dev   }\n *\n * @dev The oracle will have given you an ID for the VRF keypair they have\n * @dev committed to (let's call it keyHash). Create subscription, fund it\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n * @dev subscription management functions).\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n * @dev callbackGasLimit, numWords),\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\n *\n * @dev Once the VRFCoordinator has received and validated the oracle's response\n * @dev to your request, it will call your contract's fulfillRandomWords method.\n *\n * @dev The randomness argument to fulfillRandomWords is a set of random words\n * @dev generated from your requestId and the blockHash of the request.\n *\n * @dev If your contract could have concurrent requests open, you can use the\n * @dev requestId returned from requestRandomWords to track which response is associated\n * @dev with which randomness request.\n * @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n * @dev if your contract could have multiple requests in flight simultaneously.\n *\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n * @dev differ.\n *\n * *****************************************************************************\n * @dev SECURITY CONSIDERATIONS\n *\n * @dev A method with the ability to call your fulfillRandomness method directly\n * @dev could spoof a VRF response with any random value, so it's critical that\n * @dev it cannot be directly called by anything other than this base contract\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n *\n * @dev For your users to trust that your contract's random behavior is free\n * @dev from malicious interference, it's best if you can write it so that all\n * @dev behaviors implied by a VRF response are executed *during* your\n * @dev fulfillRandomness method. If your contract must store the response (or\n * @dev anything derived from it) and use it later, you must ensure that any\n * @dev user-significant behavior which depends on that stored value cannot be\n * @dev manipulated by a subsequent VRF request.\n *\n * @dev Similarly, both miners and the VRF oracle itself have some influence\n * @dev over the order in which VRF responses appear on the blockchain, so if\n * @dev your contract could have multiple VRF requests in flight simultaneously,\n * @dev you must ensure that the order in which the VRF responses arrive cannot\n * @dev be used to manipulate your contract's user-significant behavior.\n *\n * @dev Since the block hash of the block which contains the requestRandomness\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n * @dev miner could, in principle, fork the blockchain to evict the block\n * @dev containing the request, forcing the request to be included in a\n * @dev different block with a different hash, and therefore a different input\n * @dev to the VRF. However, such an attack would incur a substantial economic\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\n * @dev until it calls responds to a request. It is for this reason that\n * @dev that you can signal to an oracle you'd like them to wait longer before\n * @dev responding to the request (however this is not enforced in the contract\n * @dev and so remains effective only in the case of unmodified oracle software).\n */\nabstract contract VRFConsumerBaseV2 {\n  error OnlyCoordinatorCanFulfill(address have, address want);\n  // solhint-disable-next-line chainlink-solidity/prefix-immutable-variables-with-i\n  address private immutable vrfCoordinator;\n\n  /**\n   * @param _vrfCoordinator address of VRFCoordinator contract\n   */\n  constructor(address _vrfCoordinator) {\n    vrfCoordinator = _vrfCoordinator;\n  }\n\n  /**\n   * @notice fulfillRandomness handles the VRF response. Your contract must\n   * @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n   * @notice principles to keep in mind when implementing your fulfillRandomness\n   * @notice method.\n   *\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n   * @dev signature, and will call it once it has verified the proof\n   * @dev associated with the randomness. (It is triggered via a call to\n   * @dev rawFulfillRandomness, below.)\n   *\n   * @param requestId The Id initially returned by requestRandomness\n   * @param randomWords the VRF output expanded to the requested number of words\n   */\n  // solhint-disable-next-line chainlink-solidity/prefix-internal-functions-with-underscore\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\n\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\n  // the origin of the call\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\n    if (msg.sender != vrfCoordinator) {\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\n    }\n    fulfillRandomWords(requestId, randomWords);\n  }\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {ERC721Utils} from \"./utils/ERC721Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if:\n     * - `spender` does not have approval from `owner` for `tokenId`.\n     * - `spender` does not have approval to manage all of `owner`'s assets.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC-721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC-721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC-721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC721/utils/ERC721Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721Receiver} from \"../IERC721Receiver.sol\";\nimport {IERC721Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-721 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n *\n * _Available since v5.1._\n */\nlibrary ERC721Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC721Receiver-onERC721Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC721Received(\n        address operator,\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    // Token rejected\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC721Receiver implementer\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(buffer, add(0x20, offset)))\n        }\n    }\n}\n"},"contracts/AIRiskManager.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.19;\r\n\r\ncontract AIRiskManager {\r\n    enum RiskTier { NONE, C, B, A }\r\n    mapping(address => RiskTier) public riskScores;\r\n    event RiskScored(address indexed user, RiskTier tier);\r\n\r\n    // Called by Chainlink Functions or off-chain oracle\r\n    function setRiskScore(address user, uint8 score) external {\r\n        require(score <= uint8(RiskTier.A), \"Invalid score\");\r\n        riskScores[user] = RiskTier(score);\r\n        emit RiskScored(user, RiskTier(score));\r\n    }\r\n\r\n    function getRiskScore(address user) external view returns (RiskTier) {\r\n        return riskScores[user];\r\n    }\r\n}\r\n\r\n"},"contracts/CCIPRouter.sol":{"content":"// contracts/CCIPRouter.sol\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.19;\r\n\r\ncontract CCIPRouter {\r\n    event MessageReceived(address from, string data);\r\n    event MessageSent(address to, string data);\r\n\r\n    function receiveMessage(string calldata data) external {\r\n        emit MessageReceived(msg.sender, data);\r\n        // In production, parse and route to VaultCore or other contracts\r\n    }\r\n\r\n    function sendMessage(address to, string calldata data) external {\r\n        emit MessageSent(to, data);\r\n        // In production, would trigger CCIP cross-chain send\r\n    }\r\n}\r\n"},"contracts/MockRealEstate.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract MockRealEstate is ERC721, Ownable {\r\n    uint256 public nextTokenId;\r\n\r\n    constructor(address initialOwner) \r\n        ERC721(\"MockRealEstate\", \"MRE\") \r\n        Ownable(initialOwner) \r\n    {}\r\n\r\n    function mint(address to) external onlyOwner returns (uint256) {\r\n        uint256 tokenId = nextTokenId;\r\n        _mint(to, tokenId);\r\n        nextTokenId++;\r\n        return tokenId;\r\n    }\r\n}\r\n"},"contracts/RWARegistry.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.19;\r\n\r\ncontract RWARegistry {\r\n    struct Asset {\r\n        uint256 id;\r\n        address owner;\r\n        string metadataURI;\r\n        uint256 valuationUSD;\r\n    }\r\n\r\n    mapping(uint256 => Asset) public assets;\r\n    uint256 public assetCounter;\r\n\r\n    event AssetRegistered(uint256 indexed id, address indexed owner, string metadataURI, uint256 valuationUSD);\r\n\r\n    function registerAsset(string calldata metadataURI, uint256 valuationUSD) external returns (uint256) {\r\n        assetCounter++;\r\n        assets[assetCounter] = Asset({\r\n            id: assetCounter,\r\n            owner: msg.sender,\r\n            metadataURI: metadataURI,\r\n            valuationUSD: valuationUSD\r\n        });\r\n\r\n        emit AssetRegistered(assetCounter, msg.sender, metadataURI, valuationUSD);\r\n        return assetCounter;\r\n    }\r\n\r\n    function getAsset(uint256 assetId) external view returns (Asset memory) {\r\n        return assets[assetId];\r\n    }\r\n}\r\n"},"contracts/VaultCore.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.19;\r\n\r\nimport \"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol\";\r\nimport \"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\";\r\nimport \"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\";\r\nimport \"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\";\r\n\r\ninterface ICCIPRouter {\r\n    function receiveMessage(string calldata data) external;\r\n}\r\n\r\ninterface IAIRiskManager {\r\n    function getRiskScore(address user) external view returns (uint8);\r\n}\r\n\r\ncontract VaultCore is AutomationCompatibleInterface, VRFConsumerBaseV2 {\r\n    AggregatorV3Interface internal priceFeed;\r\n    IAIRiskManager public riskManager;\r\n    address public ccipRouter;\r\n\r\n    // Chainlink VRF\r\n    VRFCoordinatorV2Interface COORDINATOR;\r\n    bytes32 public keyHash;\r\n    uint64 public subscriptionId;\r\n    uint32 public callbackGasLimit = 100000;\r\n    uint16 public requestConfirmations = 3;\r\n    uint32 public numWords = 1;\r\n\r\n    // Loan structure\r\n    struct Loan {\r\n        address borrower;\r\n        uint256 amount;\r\n        bool repaid;\r\n        uint8 riskTier;\r\n    }\r\n\r\n    mapping(uint256 => Loan) public loans;\r\n    uint256 public loanId;\r\n\r\n    // Events\r\n    event LoanIssued(address borrower, uint256 amount, uint256 loanId, uint8 riskTier);\r\n    event LoanLiquidated(uint256 loanId);\r\n    event CrossChainLoanApproval(uint256 assetId, uint256 amount, address borrower);\r\n    event RandomLoanSelected(uint256 selectedLoanId);\r\n\r\n    constructor(\r\n        address _priceFeed,\r\n        address _riskManager,\r\n        address _ccipRouter,\r\n        address _vrfCoordinator,\r\n        bytes32 _keyHash,\r\n        uint64 _subscriptionId\r\n    ) VRFConsumerBaseV2(_vrfCoordinator) {\r\n        priceFeed = AggregatorV3Interface(_priceFeed);\r\n        riskManager = IAIRiskManager(_riskManager);\r\n        ccipRouter = _ccipRouter;\r\n\r\n        COORDINATOR = VRFCoordinatorV2Interface(_vrfCoordinator);\r\n        keyHash = _keyHash;\r\n        subscriptionId = _subscriptionId;\r\n    }\r\n\r\n    // ---- Core Loan Logic ----\r\n\r\n    function borrow(uint256 amount) internal {\r\n        uint8 riskTier = riskManager.getRiskScore(msg.sender);\r\n        require(riskTier >= 2, \"Risk too high\"); // B or A only\r\n        loans[loanId] = Loan(msg.sender, amount, false, riskTier);\r\n        emit LoanIssued(msg.sender, amount, loanId, riskTier);\r\n        loanId++;\r\n    }\r\n\r\n    function receiveLoanApproval(uint256 assetId, uint256 amount) external {\r\n        uint8 riskTier = riskManager.getRiskScore(msg.sender);\r\n        require(riskTier >= 2, \"Risk too high (approval)\");\r\n        borrow(amount);\r\n        emit CrossChainLoanApproval(assetId, amount, msg.sender);\r\n    }\r\n\r\n    function receiveCrossChainMessage(string calldata data) external {\r\n        require(msg.sender == ccipRouter, \"Only CCIPRouter\");\r\n        // Handle CCIP message if needed\r\n    }\r\n\r\n    // ---- Health Check ----\r\n\r\n    function checkHealth() external view returns (bool) {\r\n        return true; // Placeholder for external price-based logic\r\n    }\r\n\r\n    function getLatestETHPrice() public view returns (int) {\r\n        (, int price,,,) = priceFeed.latestRoundData();\r\n        return price;\r\n    }\r\n\r\n    // ---- Chainlink Automation ----\r\n\r\n    function checkUpkeep(bytes calldata) external view override returns (bool upkeepNeeded, bytes memory performData) {\r\n        for (uint256 i = 0; i < loanId; i++) {\r\n            if (!loans[i].repaid && _isUnhealthy(loans[i])) {\r\n                return (true, abi.encode(i));\r\n            }\r\n        }\r\n        return (false, \"\");\r\n    }\r\n\r\n    function performUpkeep(bytes calldata performData) external override {\r\n        uint256 badLoanId = abi.decode(performData, (uint256));\r\n        liquidateLoan(badLoanId);\r\n    }\r\n\r\n    function _isUnhealthy(Loan memory loan) internal view returns (bool) {\r\n        return loan.amount > 1 ether;\r\n    }\r\n\r\n    function liquidateLoan(uint256 _loanId) public {\r\n        require(!loans[_loanId].repaid, \"Already repaid\");\r\n        loans[_loanId].repaid = true;\r\n        emit LoanLiquidated(_loanId);\r\n    }\r\n\r\n    // ---- Chainlink VRF Audit ----\r\n\r\n    function requestAudit() external {\r\n        require(loanId > 0, \"No loans exist\");\r\n        COORDINATOR.requestRandomWords(\r\n            keyHash,\r\n            subscriptionId,\r\n            requestConfirmations,\r\n            callbackGasLimit,\r\n            numWords\r\n        );\r\n    }\r\n\r\n    function fulfillRandomWords(uint256, uint256[] memory randomWords) internal override {\r\n        uint256 selected = randomWords[0] % loanId;\r\n        emit RandomLoanSelected(selected);\r\n        // Optional: auditLoan(selected); here\r\n    }\r\n}\r\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/VaultCore.sol:81:39:\n   |\n81 |     function receiveCrossChainMessage(string calldata data) external {\n   |                                       ^^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":2813,"file":"contracts/VaultCore.sol","start":2793},"type":"Warning"},{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to view\n  --> contracts/VaultCore.sol:81:5:\n   |\n81 |     function receiveCrossChainMessage(string calldata data) external {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Function state mutability can be restricted to view","severity":"warning","sourceLocation":{"end":2937,"file":"contracts/VaultCore.sol","start":2759},"type":"Warning"},{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to pure\n  --> contracts/VaultCore.sol:88:5:\n   |\n88 |     function checkHealth() external view returns (bool) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Function state mutability can be restricted to pure","severity":"warning","sourceLocation":{"end":3106,"file":"contracts/VaultCore.sol","start":2978},"type":"Warning"},{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to pure\n   --> contracts/VaultCore.sol:113:5:\n    |\n113 |     function _isUnhealthy(Loan memory loan) internal view returns (bool) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Function state mutability can be restricted to pure","severity":"warning","sourceLocation":{"end":3950,"file":"contracts/VaultCore.sol","start":3834},"type":"Warning"}],"sources":{"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol","exportedSymbols":{"AutomationBase":[37]},"id":38,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:0"},{"abstract":false,"baseContracts":[],"canonicalName":"AutomationBase","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":37,"linearizedBaseContracts":[37],"name":"AutomationBase","nameLocation":"66:14:0","nodeType":"ContractDefinition","nodes":[{"errorSelector":"b60ac5db","id":3,"name":"OnlySimulatedBackend","nameLocation":"91:20:0","nodeType":"ErrorDefinition","parameters":{"id":2,"nodeType":"ParameterList","parameters":[],"src":"111:2:0"},"src":"85:29:0"},{"body":{"id":27,"nodeType":"Block","src":"291:200:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":21,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":13,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7,"name":"tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-26,"src":"350:2:0","typeDescriptions":{"typeIdentifier":"t_magic_transaction","typeString":"tx"}},"id":8,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"353:6:0","memberName":"origin","nodeType":"MemberAccess","src":"350:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":11,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"371:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"363:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9,"name":"address","nodeType":"ElementaryTypeName","src":"363:7:0","typeDescriptions":{}}},"id":12,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"363:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"350:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":14,"name":"tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-26,"src":"377:2:0","typeDescriptions":{"typeIdentifier":"t_magic_transaction","typeString":"tx"}},"id":15,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"380:6:0","memberName":"origin","nodeType":"MemberAccess","src":"377:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"307831313131313131313131313131313131313131313131313131313131313131313131313131313131","id":18,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"398:42:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x1111111111111111111111111111111111111111"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"390:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":16,"name":"address","nodeType":"ElementaryTypeName","src":"390:7:0","typeDescriptions":{}}},"id":19,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"390:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"377:64:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"350:91:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":26,"nodeType":"IfStatement","src":"346:141:0","trueBody":{"id":25,"nodeType":"Block","src":"443:44:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":22,"name":"OnlySimulatedBackend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3,"src":"458:20:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":23,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"458:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":24,"nodeType":"RevertStatement","src":"451:29:0"}]}}]},"documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"118:127:0","text":" @notice method that allows it to be simulated via eth_call by checking that\n the sender is the zero address."},"id":28,"implemented":true,"kind":"function","modifiers":[],"name":"_preventExecution","nameLocation":"257:17:0","nodeType":"FunctionDefinition","parameters":{"id":5,"nodeType":"ParameterList","parameters":[],"src":"274:2:0"},"returnParameters":{"id":6,"nodeType":"ParameterList","parameters":[],"src":"291:0:0"},"scope":37,"src":"248:243:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":35,"nodeType":"Block","src":"652:37:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":31,"name":"_preventExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"658:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":32,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"658:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":33,"nodeType":"ExpressionStatement","src":"658:19:0"},{"id":34,"nodeType":"PlaceholderStatement","src":"683:1:0"}]},"documentation":{"id":29,"nodeType":"StructuredDocumentation","src":"495:129:0","text":" @notice modifier that allows it to be simulated via eth_call by checking\n that the sender is the zero address."},"id":36,"name":"cannotExecute","nameLocation":"636:13:0","nodeType":"ModifierDefinition","parameters":{"id":30,"nodeType":"ParameterList","parameters":[],"src":"649:2:0"},"src":"627:62:0","virtual":false,"visibility":"internal"}],"scope":38,"src":"57:634:0","usedErrors":[3],"usedEvents":[]}],"src":"32:660:0"},"id":0},"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol","exportedSymbols":{"AutomationBase":[37],"AutomationCompatible":[48],"AutomationCompatibleInterface":[67]},"id":49,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":39,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:1"},{"absolutePath":"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol","file":"./AutomationBase.sol","id":41,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":49,"sourceUnit":38,"src":"57:52:1","symbolAliases":[{"foreign":{"id":40,"name":"AutomationBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":37,"src":"65:14:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol","file":"./interfaces/AutomationCompatibleInterface.sol","id":43,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":49,"sourceUnit":68,"src":"110:93:1","symbolAliases":[{"foreign":{"id":42,"name":"AutomationCompatibleInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"118:29:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":44,"name":"AutomationBase","nameLocations":["247:14:1"],"nodeType":"IdentifierPath","referencedDeclaration":37,"src":"247:14:1"},"id":45,"nodeType":"InheritanceSpecifier","src":"247:14:1"},{"baseName":{"id":46,"name":"AutomationCompatibleInterface","nameLocations":["263:29:1"],"nodeType":"IdentifierPath","referencedDeclaration":67,"src":"263:29:1"},"id":47,"nodeType":"InheritanceSpecifier","src":"263:29:1"}],"canonicalName":"AutomationCompatible","contractDependencies":[],"contractKind":"contract","fullyImplemented":false,"id":48,"linearizedBaseContracts":[48,67,37],"name":"AutomationCompatible","nameLocation":"223:20:1","nodeType":"ContractDefinition","nodes":[],"scope":49,"src":"205:90:1","usedErrors":[3],"usedEvents":[]}],"src":"32:264:1"},"id":1},"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol","exportedSymbols":{"AutomationCompatibleInterface":[67]},"id":68,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":50,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"AutomationCompatibleInterface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":67,"linearizedBaseContracts":[67],"name":"AutomationCompatibleInterface","nameLocation":"120:29:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"154:985:2","text":" @notice method that is simulated by the keepers to see if any work actually\n needs to be performed. This method does does not actually need to be\n executable, and since it is only ever simulated it can consume lots of gas.\n @dev To ensure that it is never called, you may want to add the\n cannotExecute modifier from KeeperBase to your implementation of this\n method.\n @param checkData specified in the upkeep registration so it is always the\n same for a registered upkeep. This can easily be broken down into specific\n arguments using `abi.decode`, so multiple upkeeps can be registered on the\n same contract and easily differentiated by the contract.\n @return upkeepNeeded boolean to indicate whether the keeper should call\n performUpkeep or not.\n @return performData bytes that the keeper should call performUpkeep with, if\n upkeep is needed. If you would like to encode data to decode later, try\n `abi.encode`."},"functionSelector":"6e04ff0d","id":60,"implemented":false,"kind":"function","modifiers":[],"name":"checkUpkeep","nameLocation":"1151:11:2","nodeType":"FunctionDefinition","parameters":{"id":54,"nodeType":"ParameterList","parameters":[{"constant":false,"id":53,"mutability":"mutable","name":"checkData","nameLocation":"1178:9:2","nodeType":"VariableDeclaration","scope":60,"src":"1163:24:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":52,"name":"bytes","nodeType":"ElementaryTypeName","src":"1163:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1162:26:2"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"upkeepNeeded","nameLocation":"1212:12:2","nodeType":"VariableDeclaration","scope":60,"src":"1207:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":55,"name":"bool","nodeType":"ElementaryTypeName","src":"1207:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":58,"mutability":"mutable","name":"performData","nameLocation":"1239:11:2","nodeType":"VariableDeclaration","scope":60,"src":"1226:24:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":57,"name":"bytes","nodeType":"ElementaryTypeName","src":"1226:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1206:45:2"},"scope":67,"src":"1142:110:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":61,"nodeType":"StructuredDocumentation","src":"1256:1003:2","text":" @notice method that is actually executed by the keepers, via the registry.\n The data returned by the checkUpkeep simulation will be passed into\n this method to actually be executed.\n @dev The input to this method should not be trusted, and the caller of the\n method should not even be restricted to any single registry. Anyone should\n be able call it, and the input should be validated, there is no guarantee\n that the data passed in is the performData returned from checkUpkeep. This\n could happen due to malicious keepers, racing keepers, or simply a state\n change while the performUpkeep transaction is waiting for confirmation.\n Always validate the data passed in.\n @param performData is the data which was passed back from the checkData\n simulation. If it is encoded, it can easily be decoded into other types by\n calling `abi.decode`. This data should not be trusted, and should be\n validated against the contract's current state."},"functionSelector":"4585e33b","id":66,"implemented":false,"kind":"function","modifiers":[],"name":"performUpkeep","nameLocation":"2271:13:2","nodeType":"FunctionDefinition","parameters":{"id":64,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"mutability":"mutable","name":"performData","nameLocation":"2300:11:2","nodeType":"VariableDeclaration","scope":66,"src":"2285:26:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":62,"name":"bytes","nodeType":"ElementaryTypeName","src":"2285:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2284:28:2"},"returnParameters":{"id":65,"nodeType":"ParameterList","parameters":[],"src":"2321:0:2"},"scope":67,"src":"2262:60:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":68,"src":"110:2214:2","usedErrors":[],"usedEvents":[]}],"src":"32:2293:2"},"id":2},"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol","exportedSymbols":{"AggregatorV3Interface":[113]},"id":114,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":69,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"AggregatorV3Interface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":113,"linearizedBaseContracts":[113],"name":"AggregatorV3Interface","nameLocation":"120:21:3","nodeType":"ContractDefinition","nodes":[{"functionSelector":"313ce567","id":74,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"155:8:3","nodeType":"FunctionDefinition","parameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"163:2:3"},"returnParameters":{"id":73,"nodeType":"ParameterList","parameters":[{"constant":false,"id":72,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":74,"src":"189:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":71,"name":"uint8","nodeType":"ElementaryTypeName","src":"189:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"188:7:3"},"scope":113,"src":"146:50:3","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7284e416","id":79,"implemented":false,"kind":"function","modifiers":[],"name":"description","nameLocation":"209:11:3","nodeType":"FunctionDefinition","parameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"220:2:3"},"returnParameters":{"id":78,"nodeType":"ParameterList","parameters":[{"constant":false,"id":77,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":79,"src":"246:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":76,"name":"string","nodeType":"ElementaryTypeName","src":"246:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"245:15:3"},"scope":113,"src":"200:61:3","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"54fd4d50","id":84,"implemented":false,"kind":"function","modifiers":[],"name":"version","nameLocation":"274:7:3","nodeType":"FunctionDefinition","parameters":{"id":80,"nodeType":"ParameterList","parameters":[],"src":"281:2:3"},"returnParameters":{"id":83,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":84,"src":"307:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":81,"name":"uint256","nodeType":"ElementaryTypeName","src":"307:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"306:9:3"},"scope":113,"src":"265:51:3","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9a6fc8f5","id":99,"implemented":false,"kind":"function","modifiers":[],"name":"getRoundData","nameLocation":"329:12:3","nodeType":"FunctionDefinition","parameters":{"id":87,"nodeType":"ParameterList","parameters":[{"constant":false,"id":86,"mutability":"mutable","name":"_roundId","nameLocation":"354:8:3","nodeType":"VariableDeclaration","scope":99,"src":"347:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":85,"name":"uint80","nodeType":"ElementaryTypeName","src":"347:6:3","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"341:25:3"},"returnParameters":{"id":98,"nodeType":"ParameterList","parameters":[{"constant":false,"id":89,"mutability":"mutable","name":"roundId","nameLocation":"397:7:3","nodeType":"VariableDeclaration","scope":99,"src":"390:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":88,"name":"uint80","nodeType":"ElementaryTypeName","src":"390:6:3","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":91,"mutability":"mutable","name":"answer","nameLocation":"413:6:3","nodeType":"VariableDeclaration","scope":99,"src":"406:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":90,"name":"int256","nodeType":"ElementaryTypeName","src":"406:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":93,"mutability":"mutable","name":"startedAt","nameLocation":"429:9:3","nodeType":"VariableDeclaration","scope":99,"src":"421:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":92,"name":"uint256","nodeType":"ElementaryTypeName","src":"421:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":95,"mutability":"mutable","name":"updatedAt","nameLocation":"448:9:3","nodeType":"VariableDeclaration","scope":99,"src":"440:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":94,"name":"uint256","nodeType":"ElementaryTypeName","src":"440:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":97,"mutability":"mutable","name":"answeredInRound","nameLocation":"466:15:3","nodeType":"VariableDeclaration","scope":99,"src":"459:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":96,"name":"uint80","nodeType":"ElementaryTypeName","src":"459:6:3","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"389:93:3"},"scope":113,"src":"320:163:3","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"feaf968c","id":112,"implemented":false,"kind":"function","modifiers":[],"name":"latestRoundData","nameLocation":"496:15:3","nodeType":"FunctionDefinition","parameters":{"id":100,"nodeType":"ParameterList","parameters":[],"src":"511:2:3"},"returnParameters":{"id":111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102,"mutability":"mutable","name":"roundId","nameLocation":"556:7:3","nodeType":"VariableDeclaration","scope":112,"src":"549:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":101,"name":"uint80","nodeType":"ElementaryTypeName","src":"549:6:3","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":104,"mutability":"mutable","name":"answer","nameLocation":"572:6:3","nodeType":"VariableDeclaration","scope":112,"src":"565:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":103,"name":"int256","nodeType":"ElementaryTypeName","src":"565:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":106,"mutability":"mutable","name":"startedAt","nameLocation":"588:9:3","nodeType":"VariableDeclaration","scope":112,"src":"580:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":105,"name":"uint256","nodeType":"ElementaryTypeName","src":"580:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":108,"mutability":"mutable","name":"updatedAt","nameLocation":"607:9:3","nodeType":"VariableDeclaration","scope":112,"src":"599:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":107,"name":"uint256","nodeType":"ElementaryTypeName","src":"599:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":110,"mutability":"mutable","name":"answeredInRound","nameLocation":"625:15:3","nodeType":"VariableDeclaration","scope":112,"src":"618:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":109,"name":"uint80","nodeType":"ElementaryTypeName","src":"618:6:3","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"548:93:3"},"scope":113,"src":"487:155:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":114,"src":"110:534:3","usedErrors":[],"usedEvents":[]}],"src":"32:613:3"},"id":3},"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol","exportedSymbols":{"VRFConsumerBaseV2":[171]},"id":172,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":115,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:4"},{"abstract":true,"baseContracts":[],"canonicalName":"VRFConsumerBaseV2","contractDependencies":[],"contractKind":"contract","documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"57:5275:4","text":"****************************************************************************\n @notice Interface for contracts using VRF randomness\n *****************************************************************************\n @dev PURPOSE\n @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n @dev to Vera the verifier in such a way that Vera can be sure he's not\n @dev making his output up to suit himself. Reggie provides Vera a public key\n @dev to which he knows the secret key. Each time Vera provides a seed to\n @dev Reggie, he gives back a value which is computed completely\n @dev deterministically from the seed and the secret key.\n @dev Reggie provides a proof by which Vera can verify that the output was\n @dev correctly computed once Reggie tells it to her, but without that proof,\n @dev the output is indistinguishable to her from a uniform random sample\n @dev from the output space.\n @dev The purpose of this contract is to make it easy for unrelated contracts\n @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n @dev simple access to a verifiable source of randomness. It ensures 2 things:\n @dev 1. The fulfillment came from the VRFCoordinator\n @dev 2. The consumer contract implements fulfillRandomWords.\n *****************************************************************************\n @dev USAGE\n @dev Calling contracts must inherit from VRFConsumerBase, and can\n @dev initialize VRFConsumerBase's attributes in their constructor as\n @dev shown:\n @dev   contract VRFConsumer {\n @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n @dev       VRFConsumerBase(_vrfCoordinator) public {\n @dev         <initialization with other arguments goes here>\n @dev       }\n @dev   }\n @dev The oracle will have given you an ID for the VRF keypair they have\n @dev committed to (let's call it keyHash). Create subscription, fund it\n @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n @dev subscription management functions).\n @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n @dev callbackGasLimit, numWords),\n @dev see (VRFCoordinatorInterface for a description of the arguments).\n @dev Once the VRFCoordinator has received and validated the oracle's response\n @dev to your request, it will call your contract's fulfillRandomWords method.\n @dev The randomness argument to fulfillRandomWords is a set of random words\n @dev generated from your requestId and the blockHash of the request.\n @dev If your contract could have concurrent requests open, you can use the\n @dev requestId returned from requestRandomWords to track which response is associated\n @dev with which randomness request.\n @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n @dev if your contract could have multiple requests in flight simultaneously.\n @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n @dev differ.\n *****************************************************************************\n @dev SECURITY CONSIDERATIONS\n @dev A method with the ability to call your fulfillRandomness method directly\n @dev could spoof a VRF response with any random value, so it's critical that\n @dev it cannot be directly called by anything other than this base contract\n @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n @dev For your users to trust that your contract's random behavior is free\n @dev from malicious interference, it's best if you can write it so that all\n @dev behaviors implied by a VRF response are executed *during* your\n @dev fulfillRandomness method. If your contract must store the response (or\n @dev anything derived from it) and use it later, you must ensure that any\n @dev user-significant behavior which depends on that stored value cannot be\n @dev manipulated by a subsequent VRF request.\n @dev Similarly, both miners and the VRF oracle itself have some influence\n @dev over the order in which VRF responses appear on the blockchain, so if\n @dev your contract could have multiple VRF requests in flight simultaneously,\n @dev you must ensure that the order in which the VRF responses arrive cannot\n @dev be used to manipulate your contract's user-significant behavior.\n @dev Since the block hash of the block which contains the requestRandomness\n @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n @dev miner could, in principle, fork the blockchain to evict the block\n @dev containing the request, forcing the request to be included in a\n @dev different block with a different hash, and therefore a different input\n @dev to the VRF. However, such an attack would incur a substantial economic\n @dev cost. This cost scales with the number of blocks the VRF oracle waits\n @dev until it calls responds to a request. It is for this reason that\n @dev that you can signal to an oracle you'd like them to wait longer before\n @dev responding to the request (however this is not enforced in the contract\n @dev and so remains effective only in the case of unmodified oracle software)."},"fullyImplemented":false,"id":171,"linearizedBaseContracts":[171],"name":"VRFConsumerBaseV2","nameLocation":"5351:17:4","nodeType":"ContractDefinition","nodes":[{"errorSelector":"1cf993f4","id":122,"name":"OnlyCoordinatorCanFulfill","nameLocation":"5379:25:4","nodeType":"ErrorDefinition","parameters":{"id":121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"mutability":"mutable","name":"have","nameLocation":"5413:4:4","nodeType":"VariableDeclaration","scope":122,"src":"5405:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":117,"name":"address","nodeType":"ElementaryTypeName","src":"5405:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":120,"mutability":"mutable","name":"want","nameLocation":"5427:4:4","nodeType":"VariableDeclaration","scope":122,"src":"5419:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":119,"name":"address","nodeType":"ElementaryTypeName","src":"5419:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5404:28:4"},"src":"5373:60:4"},{"constant":false,"id":124,"mutability":"immutable","name":"vrfCoordinator","nameLocation":"5546:14:4","nodeType":"VariableDeclaration","scope":171,"src":"5520:40:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":123,"name":"address","nodeType":"ElementaryTypeName","src":"5520:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":134,"nodeType":"Block","src":"5677:43:4","statements":[{"expression":{"id":132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":130,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"5683:14:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":131,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":127,"src":"5700:15:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5683:32:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":133,"nodeType":"ExpressionStatement","src":"5683:32:4"}]},"documentation":{"id":125,"nodeType":"StructuredDocumentation","src":"5565:72:4","text":" @param _vrfCoordinator address of VRFCoordinator contract"},"id":135,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":127,"mutability":"mutable","name":"_vrfCoordinator","nameLocation":"5660:15:4","nodeType":"VariableDeclaration","scope":135,"src":"5652:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":126,"name":"address","nodeType":"ElementaryTypeName","src":"5652:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5651:25:4"},"returnParameters":{"id":129,"nodeType":"ParameterList","parameters":[],"src":"5677:0:4"},"scope":171,"src":"5640:80:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"documentation":{"id":136,"nodeType":"StructuredDocumentation","src":"5724:686:4","text":" @notice fulfillRandomness handles the VRF response. Your contract must\n @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n @notice principles to keep in mind when implementing your fulfillRandomness\n @notice method.\n @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n @dev signature, and will call it once it has verified the proof\n @dev associated with the randomness. (It is triggered via a call to\n @dev rawFulfillRandomness, below.)\n @param requestId The Id initially returned by requestRandomness\n @param randomWords the VRF output expanded to the requested number of words"},"id":144,"implemented":false,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"6514:18:4","nodeType":"FunctionDefinition","parameters":{"id":142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":138,"mutability":"mutable","name":"requestId","nameLocation":"6541:9:4","nodeType":"VariableDeclaration","scope":144,"src":"6533:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":137,"name":"uint256","nodeType":"ElementaryTypeName","src":"6533:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":141,"mutability":"mutable","name":"randomWords","nameLocation":"6569:11:4","nodeType":"VariableDeclaration","scope":144,"src":"6552:28:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":139,"name":"uint256","nodeType":"ElementaryTypeName","src":"6552:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":140,"nodeType":"ArrayTypeName","src":"6552:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6532:49:4"},"returnParameters":{"id":143,"nodeType":"ParameterList","parameters":[],"src":"6598:0:4"},"scope":171,"src":"6505:94:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":169,"nodeType":"Block","src":"6883:167:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":152,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6893:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6897:6:4","memberName":"sender","nodeType":"MemberAccess","src":"6893:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":154,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"6907:14:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6893:28:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":163,"nodeType":"IfStatement","src":"6889:109:4","trueBody":{"id":162,"nodeType":"Block","src":"6923:75:4","statements":[{"errorCall":{"arguments":[{"expression":{"id":157,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6964:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6968:6:4","memberName":"sender","nodeType":"MemberAccess","src":"6964:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":159,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"6976:14:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":156,"name":"OnlyCoordinatorCanFulfill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"6938:25:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6938:53:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":161,"nodeType":"RevertStatement","src":"6931:60:4"}]}},{"expression":{"arguments":[{"id":165,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"7022:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":166,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"7033:11:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":164,"name":"fulfillRandomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"7003:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,uint256[] memory)"}},"id":167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7003:42:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":168,"nodeType":"ExpressionStatement","src":"7003:42:4"}]},"functionSelector":"1fe543e3","id":170,"implemented":true,"kind":"function","modifiers":[],"name":"rawFulfillRandomWords","nameLocation":"6803:21:4","nodeType":"FunctionDefinition","parameters":{"id":150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":146,"mutability":"mutable","name":"requestId","nameLocation":"6833:9:4","nodeType":"VariableDeclaration","scope":170,"src":"6825:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":145,"name":"uint256","nodeType":"ElementaryTypeName","src":"6825:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":149,"mutability":"mutable","name":"randomWords","nameLocation":"6861:11:4","nodeType":"VariableDeclaration","scope":170,"src":"6844:28:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":147,"name":"uint256","nodeType":"ElementaryTypeName","src":"6844:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":148,"nodeType":"ArrayTypeName","src":"6844:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6824:49:4"},"returnParameters":{"id":151,"nodeType":"ParameterList","parameters":[],"src":"6883:0:4"},"scope":171,"src":"6794:256:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":172,"src":"5333:1719:4","usedErrors":[122],"usedEvents":[]}],"src":"32:7021:4"},"id":4},"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol","exportedSymbols":{"VRFCoordinatorV2Interface":[267]},"id":268,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":173,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"VRFCoordinatorV2Interface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":267,"linearizedBaseContracts":[267],"name":"VRFCoordinatorV2Interface","nameLocation":"120:25:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":174,"nodeType":"StructuredDocumentation","src":"150:267:5","text":" @notice Get configuration relevant for making requests\n @return minimumRequestConfirmations global min for request confirmations\n @return maxGasLimit global max for request gas limit\n @return s_provingKeyHashes list of registered key hashes"},"functionSelector":"00012291","id":184,"implemented":false,"kind":"function","modifiers":[],"name":"getRequestConfig","nameLocation":"429:16:5","nodeType":"FunctionDefinition","parameters":{"id":175,"nodeType":"ParameterList","parameters":[],"src":"445:2:5"},"returnParameters":{"id":183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":184,"src":"471:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":176,"name":"uint16","nodeType":"ElementaryTypeName","src":"471:6:5","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":179,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":184,"src":"479:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":178,"name":"uint32","nodeType":"ElementaryTypeName","src":"479:6:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":182,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":184,"src":"487:16:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":180,"name":"bytes32","nodeType":"ElementaryTypeName","src":"487:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":181,"nodeType":"ArrayTypeName","src":"487:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"470:34:5"},"scope":267,"src":"420:85:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":185,"nodeType":"StructuredDocumentation","src":"509:1511:5","text":" @notice Request a set of random words.\n @param keyHash - Corresponds to a particular oracle job which uses\n that key for generating the VRF proof. Different keyHash's have different gas price\n ceilings, so you can select a specific one to bound your maximum per request cost.\n @param subId  - The ID of the VRF subscription. Must be funded\n with the minimum subscription balance required for the selected keyHash.\n @param minimumRequestConfirmations - How many blocks you'd like the\n oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n for why you may want to request more. The acceptable range is\n [minimumRequestBlockConfirmations, 200].\n @param callbackGasLimit - How much gas you'd like to receive in your\n fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n may be slightly less than this amount because of gas used calling the function\n (argument decoding etc.), so you may need to request slightly more than you expect\n to have inside fulfillRandomWords. The acceptable range is\n [0, maxGasLimit]\n @param numWords - The number of uint256 random values you'd like to receive\n in your fulfillRandomWords callback. Note these numbers are expanded in a\n secure way by the VRFCoordinator from a single random value supplied by the oracle.\n @return requestId - A unique identifier of the request. Can be used to match\n a request to a response in fulfillRandomWords."},"functionSelector":"5d3b1d30","id":200,"implemented":false,"kind":"function","modifiers":[],"name":"requestRandomWords","nameLocation":"2032:18:5","nodeType":"FunctionDefinition","parameters":{"id":196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":187,"mutability":"mutable","name":"keyHash","nameLocation":"2064:7:5","nodeType":"VariableDeclaration","scope":200,"src":"2056:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":186,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2056:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":189,"mutability":"mutable","name":"subId","nameLocation":"2084:5:5","nodeType":"VariableDeclaration","scope":200,"src":"2077:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":188,"name":"uint64","nodeType":"ElementaryTypeName","src":"2077:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":191,"mutability":"mutable","name":"minimumRequestConfirmations","nameLocation":"2102:27:5","nodeType":"VariableDeclaration","scope":200,"src":"2095:34:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":190,"name":"uint16","nodeType":"ElementaryTypeName","src":"2095:6:5","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":193,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"2142:16:5","nodeType":"VariableDeclaration","scope":200,"src":"2135:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":192,"name":"uint32","nodeType":"ElementaryTypeName","src":"2135:6:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":195,"mutability":"mutable","name":"numWords","nameLocation":"2171:8:5","nodeType":"VariableDeclaration","scope":200,"src":"2164:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":194,"name":"uint32","nodeType":"ElementaryTypeName","src":"2164:6:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2050:133:5"},"returnParameters":{"id":199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":198,"mutability":"mutable","name":"requestId","nameLocation":"2210:9:5","nodeType":"VariableDeclaration","scope":200,"src":"2202:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":197,"name":"uint256","nodeType":"ElementaryTypeName","src":"2202:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2201:19:5"},"scope":267,"src":"2023:198:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":201,"nodeType":"StructuredDocumentation","src":"2225:384:5","text":" @notice Create a VRF subscription.\n @return subId - A unique subscription id.\n @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n @dev Note to fund the subscription, use transferAndCall. For example\n @dev  LINKTOKEN.transferAndCall(\n @dev    address(COORDINATOR),\n @dev    amount,\n @dev    abi.encode(subId));"},"functionSelector":"a21a23e4","id":206,"implemented":false,"kind":"function","modifiers":[],"name":"createSubscription","nameLocation":"2621:18:5","nodeType":"FunctionDefinition","parameters":{"id":202,"nodeType":"ParameterList","parameters":[],"src":"2639:2:5"},"returnParameters":{"id":205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":204,"mutability":"mutable","name":"subId","nameLocation":"2667:5:5","nodeType":"VariableDeclaration","scope":206,"src":"2660:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":203,"name":"uint64","nodeType":"ElementaryTypeName","src":"2660:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2659:14:5"},"scope":267,"src":"2612:62:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":207,"nodeType":"StructuredDocumentation","src":"2678:381:5","text":" @notice Get a VRF subscription.\n @param subId - ID of the subscription\n @return balance - LINK balance of the subscription in juels.\n @return reqCount - number of requests for this subscription, determines fee tier.\n @return owner - owner of the subscription.\n @return consumers - list of consumer address which are able to use this subscription."},"functionSelector":"a47c7696","id":221,"implemented":false,"kind":"function","modifiers":[],"name":"getSubscription","nameLocation":"3071:15:5","nodeType":"FunctionDefinition","parameters":{"id":210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":209,"mutability":"mutable","name":"subId","nameLocation":"3099:5:5","nodeType":"VariableDeclaration","scope":221,"src":"3092:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":208,"name":"uint64","nodeType":"ElementaryTypeName","src":"3092:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3086:22:5"},"returnParameters":{"id":220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"balance","nameLocation":"3139:7:5","nodeType":"VariableDeclaration","scope":221,"src":"3132:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":211,"name":"uint96","nodeType":"ElementaryTypeName","src":"3132:6:5","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":214,"mutability":"mutable","name":"reqCount","nameLocation":"3155:8:5","nodeType":"VariableDeclaration","scope":221,"src":"3148:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":213,"name":"uint64","nodeType":"ElementaryTypeName","src":"3148:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":216,"mutability":"mutable","name":"owner","nameLocation":"3173:5:5","nodeType":"VariableDeclaration","scope":221,"src":"3165:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":215,"name":"address","nodeType":"ElementaryTypeName","src":"3165:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":219,"mutability":"mutable","name":"consumers","nameLocation":"3197:9:5","nodeType":"VariableDeclaration","scope":221,"src":"3180:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":217,"name":"address","nodeType":"ElementaryTypeName","src":"3180:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":218,"nodeType":"ArrayTypeName","src":"3180:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3131:76:5"},"scope":267,"src":"3062:146:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":222,"nodeType":"StructuredDocumentation","src":"3212:164:5","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @param newOwner - proposed new owner of the subscription"},"functionSelector":"04c357cb","id":229,"implemented":false,"kind":"function","modifiers":[],"name":"requestSubscriptionOwnerTransfer","nameLocation":"3388:32:5","nodeType":"FunctionDefinition","parameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":224,"mutability":"mutable","name":"subId","nameLocation":"3428:5:5","nodeType":"VariableDeclaration","scope":229,"src":"3421:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":223,"name":"uint64","nodeType":"ElementaryTypeName","src":"3421:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":226,"mutability":"mutable","name":"newOwner","nameLocation":"3443:8:5","nodeType":"VariableDeclaration","scope":229,"src":"3435:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":225,"name":"address","nodeType":"ElementaryTypeName","src":"3435:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3420:32:5"},"returnParameters":{"id":228,"nodeType":"ParameterList","parameters":[],"src":"3461:0:5"},"scope":267,"src":"3379:83:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":230,"nodeType":"StructuredDocumentation","src":"3466:212:5","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @dev will revert if original owner of subId has\n not requested that msg.sender become the new owner."},"functionSelector":"82359740","id":235,"implemented":false,"kind":"function","modifiers":[],"name":"acceptSubscriptionOwnerTransfer","nameLocation":"3690:31:5","nodeType":"FunctionDefinition","parameters":{"id":233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":232,"mutability":"mutable","name":"subId","nameLocation":"3729:5:5","nodeType":"VariableDeclaration","scope":235,"src":"3722:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":231,"name":"uint64","nodeType":"ElementaryTypeName","src":"3722:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3721:14:5"},"returnParameters":{"id":234,"nodeType":"ParameterList","parameters":[],"src":"3744:0:5"},"scope":267,"src":"3681:64:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":236,"nodeType":"StructuredDocumentation","src":"3749:170:5","text":" @notice Add a consumer to a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - New consumer which can use the subscription"},"functionSelector":"7341c10c","id":243,"implemented":false,"kind":"function","modifiers":[],"name":"addConsumer","nameLocation":"3931:11:5","nodeType":"FunctionDefinition","parameters":{"id":241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":238,"mutability":"mutable","name":"subId","nameLocation":"3950:5:5","nodeType":"VariableDeclaration","scope":243,"src":"3943:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":237,"name":"uint64","nodeType":"ElementaryTypeName","src":"3943:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":240,"mutability":"mutable","name":"consumer","nameLocation":"3965:8:5","nodeType":"VariableDeclaration","scope":243,"src":"3957:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":239,"name":"address","nodeType":"ElementaryTypeName","src":"3957:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3942:32:5"},"returnParameters":{"id":242,"nodeType":"ParameterList","parameters":[],"src":"3983:0:5"},"scope":267,"src":"3922:62:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":244,"nodeType":"StructuredDocumentation","src":"3988:172:5","text":" @notice Remove a consumer from a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - Consumer to remove from the subscription"},"functionSelector":"9f87fad7","id":251,"implemented":false,"kind":"function","modifiers":[],"name":"removeConsumer","nameLocation":"4172:14:5","nodeType":"FunctionDefinition","parameters":{"id":249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":246,"mutability":"mutable","name":"subId","nameLocation":"4194:5:5","nodeType":"VariableDeclaration","scope":251,"src":"4187:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":245,"name":"uint64","nodeType":"ElementaryTypeName","src":"4187:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":248,"mutability":"mutable","name":"consumer","nameLocation":"4209:8:5","nodeType":"VariableDeclaration","scope":251,"src":"4201:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":247,"name":"address","nodeType":"ElementaryTypeName","src":"4201:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4186:32:5"},"returnParameters":{"id":250,"nodeType":"ParameterList","parameters":[],"src":"4227:0:5"},"scope":267,"src":"4163:65:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":252,"nodeType":"StructuredDocumentation","src":"4232:140:5","text":" @notice Cancel a subscription\n @param subId - ID of the subscription\n @param to - Where to send the remaining LINK to"},"functionSelector":"d7ae1d30","id":259,"implemented":false,"kind":"function","modifiers":[],"name":"cancelSubscription","nameLocation":"4384:18:5","nodeType":"FunctionDefinition","parameters":{"id":257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"mutability":"mutable","name":"subId","nameLocation":"4410:5:5","nodeType":"VariableDeclaration","scope":259,"src":"4403:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":253,"name":"uint64","nodeType":"ElementaryTypeName","src":"4403:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":256,"mutability":"mutable","name":"to","nameLocation":"4425:2:5","nodeType":"VariableDeclaration","scope":259,"src":"4417:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":255,"name":"address","nodeType":"ElementaryTypeName","src":"4417:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4402:26:5"},"returnParameters":{"id":258,"nodeType":"ParameterList","parameters":[],"src":"4437:0:5"},"scope":267,"src":"4375:63:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"e82ad7d4","id":266,"implemented":false,"kind":"function","modifiers":[],"name":"pendingRequestExists","nameLocation":"4743:20:5","nodeType":"FunctionDefinition","parameters":{"id":262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":261,"mutability":"mutable","name":"subId","nameLocation":"4771:5:5","nodeType":"VariableDeclaration","scope":266,"src":"4764:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":260,"name":"uint64","nodeType":"ElementaryTypeName","src":"4764:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"4763:14:5"},"returnParameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":266,"src":"4801:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":263,"name":"bool","nodeType":"ElementaryTypeName","src":"4801:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4800:6:5"},"scope":267,"src":"4734:73:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":268,"src":"110:4699:5","usedErrors":[],"usedEvents":[]}],"src":"32:4778:5"},"id":5},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1779],"Ownable":[415]},"id":416,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":269,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:6"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":271,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":416,"sourceUnit":1780,"src":"128:45:6","symbolAliases":[{"foreign":{"id":270,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"136:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":273,"name":"Context","nameLocations":["692:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":1779,"src":"692:7:6"},"id":274,"nodeType":"InheritanceSpecifier","src":"692:7:6"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":272,"nodeType":"StructuredDocumentation","src":"175:487:6","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":415,"linearizedBaseContracts":[415,1779],"name":"Ownable","nameLocation":"681:7:6","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":276,"mutability":"mutable","name":"_owner","nameLocation":"722:6:6","nodeType":"VariableDeclaration","scope":415,"src":"706:22:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":275,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":277,"nodeType":"StructuredDocumentation","src":"735:85:6","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":281,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:6","nodeType":"ErrorDefinition","parameters":{"id":280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"account","nameLocation":"866:7:6","nodeType":"VariableDeclaration","scope":281,"src":"858:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":278,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:6"},"src":"825:50:6"},{"documentation":{"id":282,"nodeType":"StructuredDocumentation","src":"881:82:6","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":286,"name":"OwnableInvalidOwner","nameLocation":"974:19:6","nodeType":"ErrorDefinition","parameters":{"id":285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":284,"mutability":"mutable","name":"owner","nameLocation":"1002:5:6","nodeType":"VariableDeclaration","scope":286,"src":"994:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":283,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:6"},"src":"968:41:6"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":292,"name":"OwnershipTransferred","nameLocation":"1021:20:6","nodeType":"EventDefinition","parameters":{"id":291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":288,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:6","nodeType":"VariableDeclaration","scope":292,"src":"1042:29:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":287,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":290,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:6","nodeType":"VariableDeclaration","scope":292,"src":"1073:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":289,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:6"},"src":"1015:84:6"},{"body":{"id":317,"nodeType":"Block","src":"1259:153:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":298,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"1273:12:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":299,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:6","typeDescriptions":{}}},"id":302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":312,"nodeType":"IfStatement","src":"1269:95:6","trueBody":{"id":311,"nodeType":"Block","src":"1301:63:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":305,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:6","typeDescriptions":{}}},"id":308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":304,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"1322:19:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":310,"nodeType":"RevertStatement","src":"1315:38:6"}]}},{"expression":{"arguments":[{"id":314,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"1392:12:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":313,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"1373:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":316,"nodeType":"ExpressionStatement","src":"1373:32:6"}]},"documentation":{"id":293,"nodeType":"StructuredDocumentation","src":"1105:115:6","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":318,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":295,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:6","nodeType":"VariableDeclaration","scope":318,"src":"1237:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":294,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:6"},"returnParameters":{"id":297,"nodeType":"ParameterList","parameters":[],"src":"1259:0:6"},"scope":415,"src":"1225:187:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":325,"nodeType":"Block","src":"1521:41:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":321,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"1531:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":323,"nodeType":"ExpressionStatement","src":"1531:13:6"},{"id":324,"nodeType":"PlaceholderStatement","src":"1554:1:6"}]},"documentation":{"id":319,"nodeType":"StructuredDocumentation","src":"1418:77:6","text":" @dev Throws if called by any account other than the owner."},"id":326,"name":"onlyOwner","nameLocation":"1509:9:6","nodeType":"ModifierDefinition","parameters":{"id":320,"nodeType":"ParameterList","parameters":[],"src":"1518:2:6"},"src":"1500:62:6","virtual":false,"visibility":"internal"},{"body":{"id":334,"nodeType":"Block","src":"1693:30:6","statements":[{"expression":{"id":332,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"1710:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":331,"id":333,"nodeType":"Return","src":"1703:13:6"}]},"documentation":{"id":327,"nodeType":"StructuredDocumentation","src":"1568:65:6","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":335,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:6","nodeType":"FunctionDefinition","parameters":{"id":328,"nodeType":"ParameterList","parameters":[],"src":"1652:2:6"},"returnParameters":{"id":331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":330,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":335,"src":"1684:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":329,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:6"},"scope":415,"src":"1638:85:6","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":351,"nodeType":"Block","src":"1841:117:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":339,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"1855:5:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":341,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"1866:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":350,"nodeType":"IfStatement","src":"1851:101:6","trueBody":{"id":349,"nodeType":"Block","src":"1880:72:6","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":345,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"1928:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":344,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"1901:26:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":348,"nodeType":"RevertStatement","src":"1894:47:6"}]}}]},"documentation":{"id":336,"nodeType":"StructuredDocumentation","src":"1729:62:6","text":" @dev Throws if the sender is not the owner."},"id":352,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:6","nodeType":"FunctionDefinition","parameters":{"id":337,"nodeType":"ParameterList","parameters":[],"src":"1816:2:6"},"returnParameters":{"id":338,"nodeType":"ParameterList","parameters":[],"src":"1841:0:6"},"scope":415,"src":"1796:162:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":365,"nodeType":"Block","src":"2347:47:6","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":359,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:6","typeDescriptions":{}}},"id":362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":358,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"2357:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":364,"nodeType":"ExpressionStatement","src":"2357:30:6"}]},"documentation":{"id":353,"nodeType":"StructuredDocumentation","src":"1964:324:6","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":366,"implemented":true,"kind":"function","modifiers":[{"id":356,"kind":"modifierInvocation","modifierName":{"id":355,"name":"onlyOwner","nameLocations":["2337:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":326,"src":"2337:9:6"},"nodeType":"ModifierInvocation","src":"2337:9:6"}],"name":"renounceOwnership","nameLocation":"2302:17:6","nodeType":"FunctionDefinition","parameters":{"id":354,"nodeType":"ParameterList","parameters":[],"src":"2319:2:6"},"returnParameters":{"id":357,"nodeType":"ParameterList","parameters":[],"src":"2347:0:6"},"scope":415,"src":"2293:101:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":393,"nodeType":"Block","src":"2613:145:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":374,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":369,"src":"2627:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":376,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":375,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:6","typeDescriptions":{}}},"id":378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":388,"nodeType":"IfStatement","src":"2623:91:6","trueBody":{"id":387,"nodeType":"Block","src":"2651:63:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":381,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:6","typeDescriptions":{}}},"id":384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":380,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"2672:19:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":386,"nodeType":"RevertStatement","src":"2665:38:6"}]}},{"expression":{"arguments":[{"id":390,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":369,"src":"2742:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":389,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"2723:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":392,"nodeType":"ExpressionStatement","src":"2723:28:6"}]},"documentation":{"id":367,"nodeType":"StructuredDocumentation","src":"2400:138:6","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":394,"implemented":true,"kind":"function","modifiers":[{"id":372,"kind":"modifierInvocation","modifierName":{"id":371,"name":"onlyOwner","nameLocations":["2603:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":326,"src":"2603:9:6"},"nodeType":"ModifierInvocation","src":"2603:9:6"}],"name":"transferOwnership","nameLocation":"2552:17:6","nodeType":"FunctionDefinition","parameters":{"id":370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":369,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:6","nodeType":"VariableDeclaration","scope":394,"src":"2570:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":368,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:6"},"returnParameters":{"id":373,"nodeType":"ParameterList","parameters":[],"src":"2613:0:6"},"scope":415,"src":"2543:215:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":413,"nodeType":"Block","src":"2975:124:6","statements":[{"assignments":[401],"declarations":[{"constant":false,"id":401,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:6","nodeType":"VariableDeclaration","scope":413,"src":"2985:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":400,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":403,"initialValue":{"id":402,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"3004:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:6"},{"expression":{"id":406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":404,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"3020:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":405,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"3029:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":407,"nodeType":"ExpressionStatement","src":"3020:17:6"},{"eventCall":{"arguments":[{"id":409,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"3073:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":410,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"3083:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":408,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"3052:20:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":412,"nodeType":"EmitStatement","src":"3047:45:6"}]},"documentation":{"id":395,"nodeType":"StructuredDocumentation","src":"2764:143:6","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":414,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:6","nodeType":"FunctionDefinition","parameters":{"id":398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":397,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:6","nodeType":"VariableDeclaration","scope":414,"src":"2940:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":396,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:6"},"returnParameters":{"id":399,"nodeType":"ParameterList","parameters":[],"src":"2975:0:6"},"scope":415,"src":"2912:187:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":416,"src":"663:2438:6","usedErrors":[281,286],"usedEvents":[292]}],"src":"102:3000:6"},"id":6},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[552],"IERC20Errors":[457],"IERC721Errors":[505]},"id":553,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":417,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":418,"nodeType":"StructuredDocumentation","src":"138:141:7","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":457,"linearizedBaseContracts":[457],"name":"IERC20Errors","nameLocation":"290:12:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":419,"nodeType":"StructuredDocumentation","src":"309:309:7","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":427,"name":"ERC20InsufficientBalance","nameLocation":"629:24:7","nodeType":"ErrorDefinition","parameters":{"id":426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":421,"mutability":"mutable","name":"sender","nameLocation":"662:6:7","nodeType":"VariableDeclaration","scope":427,"src":"654:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":420,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":423,"mutability":"mutable","name":"balance","nameLocation":"678:7:7","nodeType":"VariableDeclaration","scope":427,"src":"670:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":422,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":425,"mutability":"mutable","name":"needed","nameLocation":"695:6:7","nodeType":"VariableDeclaration","scope":427,"src":"687:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":424,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:7"},"src":"623:80:7"},{"documentation":{"id":428,"nodeType":"StructuredDocumentation","src":"709:152:7","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":432,"name":"ERC20InvalidSender","nameLocation":"872:18:7","nodeType":"ErrorDefinition","parameters":{"id":431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":430,"mutability":"mutable","name":"sender","nameLocation":"899:6:7","nodeType":"VariableDeclaration","scope":432,"src":"891:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":429,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:7"},"src":"866:41:7"},{"documentation":{"id":433,"nodeType":"StructuredDocumentation","src":"913:159:7","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":437,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:7","nodeType":"ErrorDefinition","parameters":{"id":436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":435,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:7","nodeType":"VariableDeclaration","scope":437,"src":"1104:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":434,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:7"},"src":"1077:45:7"},{"documentation":{"id":438,"nodeType":"StructuredDocumentation","src":"1128:345:7","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":446,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:7","nodeType":"ErrorDefinition","parameters":{"id":445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":440,"mutability":"mutable","name":"spender","nameLocation":"1519:7:7","nodeType":"VariableDeclaration","scope":446,"src":"1511:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":439,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":442,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:7","nodeType":"VariableDeclaration","scope":446,"src":"1528:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":441,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":444,"mutability":"mutable","name":"needed","nameLocation":"1555:6:7","nodeType":"VariableDeclaration","scope":446,"src":"1547:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":443,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:7"},"src":"1478:85:7"},{"documentation":{"id":447,"nodeType":"StructuredDocumentation","src":"1569:174:7","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":451,"name":"ERC20InvalidApprover","nameLocation":"1754:20:7","nodeType":"ErrorDefinition","parameters":{"id":450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":449,"mutability":"mutable","name":"approver","nameLocation":"1783:8:7","nodeType":"VariableDeclaration","scope":451,"src":"1775:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":448,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:7"},"src":"1748:45:7"},{"documentation":{"id":452,"nodeType":"StructuredDocumentation","src":"1799:195:7","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":456,"name":"ERC20InvalidSpender","nameLocation":"2005:19:7","nodeType":"ErrorDefinition","parameters":{"id":455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":454,"mutability":"mutable","name":"spender","nameLocation":"2033:7:7","nodeType":"VariableDeclaration","scope":456,"src":"2025:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":453,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:7"},"src":"1999:43:7"}],"scope":553,"src":"280:1764:7","usedErrors":[427,432,437,446,451,456],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":458,"nodeType":"StructuredDocumentation","src":"2046:143:7","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":505,"linearizedBaseContracts":[505],"name":"IERC721Errors","nameLocation":"2200:13:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":459,"nodeType":"StructuredDocumentation","src":"2220:219:7","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":463,"name":"ERC721InvalidOwner","nameLocation":"2450:18:7","nodeType":"ErrorDefinition","parameters":{"id":462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":461,"mutability":"mutable","name":"owner","nameLocation":"2477:5:7","nodeType":"VariableDeclaration","scope":463,"src":"2469:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":460,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:7"},"src":"2444:40:7"},{"documentation":{"id":464,"nodeType":"StructuredDocumentation","src":"2490:132:7","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":468,"name":"ERC721NonexistentToken","nameLocation":"2633:22:7","nodeType":"ErrorDefinition","parameters":{"id":467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":466,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:7","nodeType":"VariableDeclaration","scope":468,"src":"2656:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":465,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:7"},"src":"2627:46:7"},{"documentation":{"id":469,"nodeType":"StructuredDocumentation","src":"2679:289:7","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":477,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:7","nodeType":"ErrorDefinition","parameters":{"id":476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":471,"mutability":"mutable","name":"sender","nameLocation":"3008:6:7","nodeType":"VariableDeclaration","scope":477,"src":"3000:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":470,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":473,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:7","nodeType":"VariableDeclaration","scope":477,"src":"3016:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":472,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":475,"mutability":"mutable","name":"owner","nameLocation":"3041:5:7","nodeType":"VariableDeclaration","scope":477,"src":"3033:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":474,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:7"},"src":"2973:75:7"},{"documentation":{"id":478,"nodeType":"StructuredDocumentation","src":"3054:152:7","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":482,"name":"ERC721InvalidSender","nameLocation":"3217:19:7","nodeType":"ErrorDefinition","parameters":{"id":481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":480,"mutability":"mutable","name":"sender","nameLocation":"3245:6:7","nodeType":"VariableDeclaration","scope":482,"src":"3237:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":479,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:7"},"src":"3211:42:7"},{"documentation":{"id":483,"nodeType":"StructuredDocumentation","src":"3259:159:7","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":487,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:7","nodeType":"ErrorDefinition","parameters":{"id":486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":485,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:7","nodeType":"VariableDeclaration","scope":487,"src":"3451:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":484,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:7"},"src":"3423:46:7"},{"documentation":{"id":488,"nodeType":"StructuredDocumentation","src":"3475:247:7","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":494,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:7","nodeType":"ErrorDefinition","parameters":{"id":493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":490,"mutability":"mutable","name":"operator","nameLocation":"3768:8:7","nodeType":"VariableDeclaration","scope":494,"src":"3760:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":489,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":492,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:7","nodeType":"VariableDeclaration","scope":494,"src":"3778:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":491,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:7"},"src":"3727:68:7"},{"documentation":{"id":495,"nodeType":"StructuredDocumentation","src":"3801:174:7","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":499,"name":"ERC721InvalidApprover","nameLocation":"3986:21:7","nodeType":"ErrorDefinition","parameters":{"id":498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":497,"mutability":"mutable","name":"approver","nameLocation":"4016:8:7","nodeType":"VariableDeclaration","scope":499,"src":"4008:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":496,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:7"},"src":"3980:46:7"},{"documentation":{"id":500,"nodeType":"StructuredDocumentation","src":"4032:197:7","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":504,"name":"ERC721InvalidOperator","nameLocation":"4240:21:7","nodeType":"ErrorDefinition","parameters":{"id":503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":502,"mutability":"mutable","name":"operator","nameLocation":"4270:8:7","nodeType":"VariableDeclaration","scope":504,"src":"4262:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":501,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:7"},"src":"4234:46:7"}],"scope":553,"src":"2190:2092:7","usedErrors":[463,468,477,482,487,494,499,504],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":506,"nodeType":"StructuredDocumentation","src":"4284:145:7","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":552,"linearizedBaseContracts":[552],"name":"IERC1155Errors","nameLocation":"4440:14:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":507,"nodeType":"StructuredDocumentation","src":"4461:361:7","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":517,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:7","nodeType":"ErrorDefinition","parameters":{"id":516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":509,"mutability":"mutable","name":"sender","nameLocation":"4868:6:7","nodeType":"VariableDeclaration","scope":517,"src":"4860:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":508,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":511,"mutability":"mutable","name":"balance","nameLocation":"4884:7:7","nodeType":"VariableDeclaration","scope":517,"src":"4876:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":510,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":513,"mutability":"mutable","name":"needed","nameLocation":"4901:6:7","nodeType":"VariableDeclaration","scope":517,"src":"4893:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":512,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":515,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:7","nodeType":"VariableDeclaration","scope":517,"src":"4909:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":514,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:7"},"src":"4827:99:7"},{"documentation":{"id":518,"nodeType":"StructuredDocumentation","src":"4932:152:7","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":522,"name":"ERC1155InvalidSender","nameLocation":"5095:20:7","nodeType":"ErrorDefinition","parameters":{"id":521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":520,"mutability":"mutable","name":"sender","nameLocation":"5124:6:7","nodeType":"VariableDeclaration","scope":522,"src":"5116:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":519,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:7"},"src":"5089:43:7"},{"documentation":{"id":523,"nodeType":"StructuredDocumentation","src":"5138:159:7","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":527,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:7","nodeType":"ErrorDefinition","parameters":{"id":526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":525,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:7","nodeType":"VariableDeclaration","scope":527,"src":"5331:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":524,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:7"},"src":"5302:47:7"},{"documentation":{"id":528,"nodeType":"StructuredDocumentation","src":"5355:256:7","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":534,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:7","nodeType":"ErrorDefinition","parameters":{"id":533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":530,"mutability":"mutable","name":"operator","nameLocation":"5659:8:7","nodeType":"VariableDeclaration","scope":534,"src":"5651:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":529,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":532,"mutability":"mutable","name":"owner","nameLocation":"5677:5:7","nodeType":"VariableDeclaration","scope":534,"src":"5669:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":531,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:7"},"src":"5616:68:7"},{"documentation":{"id":535,"nodeType":"StructuredDocumentation","src":"5690:174:7","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":539,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:7","nodeType":"ErrorDefinition","parameters":{"id":538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":537,"mutability":"mutable","name":"approver","nameLocation":"5906:8:7","nodeType":"VariableDeclaration","scope":539,"src":"5898:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":536,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:7"},"src":"5869:47:7"},{"documentation":{"id":540,"nodeType":"StructuredDocumentation","src":"5922:197:7","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":544,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:7","nodeType":"ErrorDefinition","parameters":{"id":543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":542,"mutability":"mutable","name":"operator","nameLocation":"6161:8:7","nodeType":"VariableDeclaration","scope":544,"src":"6153:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":541,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:7"},"src":"6124:47:7"},{"documentation":{"id":545,"nodeType":"StructuredDocumentation","src":"6177:280:7","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":551,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:7","nodeType":"ErrorDefinition","parameters":{"id":550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":547,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:7","nodeType":"VariableDeclaration","scope":551,"src":"6494:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":546,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":549,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:7","nodeType":"VariableDeclaration","scope":551,"src":"6513:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":548,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:7"},"src":"6462:73:7"}],"scope":553,"src":"4430:2107:7","usedErrors":[517,522,527,534,539,544,551],"usedEvents":[]}],"src":"112:6426:7"},"id":7},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Context":[1779],"ERC165":[3257],"ERC721":[1509],"ERC721Utils":[1749],"IERC165":[3269],"IERC721":[1626],"IERC721Errors":[505],"IERC721Metadata":[1672],"Strings":[3233]},"id":1510,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":554,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":556,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1510,"sourceUnit":1627,"src":"133:38:8","symbolAliases":[{"foreign":{"id":555,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"141:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":558,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1510,"sourceUnit":1673,"src":"172:65:8","symbolAliases":[{"foreign":{"id":557,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"180:15:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","file":"./utils/ERC721Utils.sol","id":560,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1510,"sourceUnit":1750,"src":"238:52:8","symbolAliases":[{"foreign":{"id":559,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"246:11:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":562,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1510,"sourceUnit":1780,"src":"291:48:8","symbolAliases":[{"foreign":{"id":561,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"299:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":564,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1510,"sourceUnit":3234,"src":"340:48:8","symbolAliases":[{"foreign":{"id":563,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"348:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":567,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1510,"sourceUnit":3258,"src":"389:69:8","symbolAliases":[{"foreign":{"id":565,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"397:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":566,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3257,"src":"406:6:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":569,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1510,"sourceUnit":553,"src":"459:66:8","symbolAliases":[{"foreign":{"id":568,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"467:13:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":571,"name":"Context","nameLocations":["803:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":1779,"src":"803:7:8"},"id":572,"nodeType":"InheritanceSpecifier","src":"803:7:8"},{"baseName":{"id":573,"name":"ERC165","nameLocations":["812:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":3257,"src":"812:6:8"},"id":574,"nodeType":"InheritanceSpecifier","src":"812:6:8"},{"baseName":{"id":575,"name":"IERC721","nameLocations":["820:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":1626,"src":"820:7:8"},"id":576,"nodeType":"InheritanceSpecifier","src":"820:7:8"},{"baseName":{"id":577,"name":"IERC721Metadata","nameLocations":["829:15:8"],"nodeType":"IdentifierPath","referencedDeclaration":1672,"src":"829:15:8"},"id":578,"nodeType":"InheritanceSpecifier","src":"829:15:8"},{"baseName":{"id":579,"name":"IERC721Errors","nameLocations":["846:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":505,"src":"846:13:8"},"id":580,"nodeType":"InheritanceSpecifier","src":"846:13:8"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":570,"nodeType":"StructuredDocumentation","src":"527:247:8","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":1509,"linearizedBaseContracts":[1509,505,1672,1626,3257,3269,1779],"name":"ERC721","nameLocation":"793:6:8","nodeType":"ContractDefinition","nodes":[{"global":false,"id":583,"libraryName":{"id":581,"name":"Strings","nameLocations":["872:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":3233,"src":"872:7:8"},"nodeType":"UsingForDirective","src":"866:26:8","typeName":{"id":582,"name":"uint256","nodeType":"ElementaryTypeName","src":"884:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":585,"mutability":"mutable","name":"_name","nameLocation":"931:5:8","nodeType":"VariableDeclaration","scope":1509,"src":"916:20:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":584,"name":"string","nodeType":"ElementaryTypeName","src":"916:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":587,"mutability":"mutable","name":"_symbol","nameLocation":"978:7:8","nodeType":"VariableDeclaration","scope":1509,"src":"963:22:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":586,"name":"string","nodeType":"ElementaryTypeName","src":"963:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":591,"mutability":"mutable","name":"_owners","nameLocation":"1036:7:8","nodeType":"VariableDeclaration","scope":1509,"src":"992:51:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":590,"keyName":"tokenId","keyNameLocation":"1008:7:8","keyType":{"id":588,"name":"uint256","nodeType":"ElementaryTypeName","src":"1000:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"992:35:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":589,"name":"address","nodeType":"ElementaryTypeName","src":"1019:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":595,"mutability":"mutable","name":"_balances","nameLocation":"1092:9:8","nodeType":"VariableDeclaration","scope":1509,"src":"1050:51:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":594,"keyName":"owner","keyNameLocation":"1066:5:8","keyType":{"id":592,"name":"address","nodeType":"ElementaryTypeName","src":"1058:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1050:33:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":593,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":599,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1152:15:8","nodeType":"VariableDeclaration","scope":1509,"src":"1108:59:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":598,"keyName":"tokenId","keyNameLocation":"1124:7:8","keyType":{"id":596,"name":"uint256","nodeType":"ElementaryTypeName","src":"1116:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1108:35:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":597,"name":"address","nodeType":"ElementaryTypeName","src":"1135:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":605,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1242:18:8","nodeType":"VariableDeclaration","scope":1509,"src":"1174:86:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":604,"keyName":"owner","keyNameLocation":"1190:5:8","keyType":{"id":600,"name":"address","nodeType":"ElementaryTypeName","src":"1182:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1174:59:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":603,"keyName":"operator","keyNameLocation":"1215:8:8","keyType":{"id":601,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:33:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":602,"name":"bool","nodeType":"ElementaryTypeName","src":"1227:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":621,"nodeType":"Block","src":"1436:57:8","statements":[{"expression":{"id":615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":613,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"1446:5:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":614,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"1454:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1446:13:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":616,"nodeType":"ExpressionStatement","src":"1446:13:8"},{"expression":{"id":619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":617,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"1469:7:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":618,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"1479:7:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1469:17:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":620,"nodeType":"ExpressionStatement","src":"1469:17:8"}]},"documentation":{"id":606,"nodeType":"StructuredDocumentation","src":"1267:108:8","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":622,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":608,"mutability":"mutable","name":"name_","nameLocation":"1406:5:8","nodeType":"VariableDeclaration","scope":622,"src":"1392:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":607,"name":"string","nodeType":"ElementaryTypeName","src":"1392:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":610,"mutability":"mutable","name":"symbol_","nameLocation":"1427:7:8","nodeType":"VariableDeclaration","scope":622,"src":"1413:21:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":609,"name":"string","nodeType":"ElementaryTypeName","src":"1413:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1391:44:8"},"returnParameters":{"id":612,"nodeType":"ParameterList","parameters":[],"src":"1436:0:8"},"scope":1509,"src":"1380:113:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[3256,3268],"body":{"id":652,"nodeType":"Block","src":"1668:192:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":633,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"1697:11:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":635,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"1717:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1626_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$1626_$","typeString":"type(contract IERC721)"}],"id":634,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1712:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1712:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$1626","typeString":"type(contract IERC721)"}},"id":637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1726:11:8","memberName":"interfaceId","nodeType":"MemberAccess","src":"1712:25:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1697:40:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":639,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"1753:11:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":641,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"1773:15:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1672_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1672_$","typeString":"type(contract IERC721Metadata)"}],"id":640,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1768:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1768:21:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$1672","typeString":"type(contract IERC721Metadata)"}},"id":643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1790:11:8","memberName":"interfaceId","nodeType":"MemberAccess","src":"1768:33:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1753:48:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1697:104:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":648,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"1841:11:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":646,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1817:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$1509_$","typeString":"type(contract super ERC721)"}},"id":647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1823:17:8","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3256,"src":"1817:23:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1817:36:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1697:156:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":632,"id":651,"nodeType":"Return","src":"1678:175:8"}]},"documentation":{"id":623,"nodeType":"StructuredDocumentation","src":"1499:56:8","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":653,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1569:17:8","nodeType":"FunctionDefinition","overrides":{"id":629,"nodeType":"OverrideSpecifier","overrides":[{"id":627,"name":"ERC165","nameLocations":["1636:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":3257,"src":"1636:6:8"},{"id":628,"name":"IERC165","nameLocations":["1644:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":3269,"src":"1644:7:8"}],"src":"1627:25:8"},"parameters":{"id":626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":625,"mutability":"mutable","name":"interfaceId","nameLocation":"1594:11:8","nodeType":"VariableDeclaration","scope":653,"src":"1587:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":624,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1587:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1586:20:8"},"returnParameters":{"id":632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":631,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":653,"src":"1662:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":630,"name":"bool","nodeType":"ElementaryTypeName","src":"1662:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1661:6:8"},"scope":1509,"src":"1560:300:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1551],"body":{"id":680,"nodeType":"Block","src":"1991:136:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":661,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"2005:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2022:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2014:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":662,"name":"address","nodeType":"ElementaryTypeName","src":"2014:7:8","typeDescriptions":{}}},"id":665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2014:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2005:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":675,"nodeType":"IfStatement","src":"2001:87:8","trueBody":{"id":674,"nodeType":"Block","src":"2026:62:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2074:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2066:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":668,"name":"address","nodeType":"ElementaryTypeName","src":"2066:7:8","typeDescriptions":{}}},"id":671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2066:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":667,"name":"ERC721InvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"2047:18:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2047:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":673,"nodeType":"RevertStatement","src":"2040:37:8"}]}},{"expression":{"baseExpression":{"id":676,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"2104:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":678,"indexExpression":{"id":677,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"2114:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2104:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":660,"id":679,"nodeType":"Return","src":"2097:23:8"}]},"documentation":{"id":654,"nodeType":"StructuredDocumentation","src":"1866:48:8","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":681,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1928:9:8","nodeType":"FunctionDefinition","parameters":{"id":657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":656,"mutability":"mutable","name":"owner","nameLocation":"1946:5:8","nodeType":"VariableDeclaration","scope":681,"src":"1938:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":655,"name":"address","nodeType":"ElementaryTypeName","src":"1938:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1937:15:8"},"returnParameters":{"id":660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":659,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":681,"src":"1982:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":658,"name":"uint256","nodeType":"ElementaryTypeName","src":"1982:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1981:9:8"},"scope":1509,"src":"1919:208:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1559],"body":{"id":693,"nodeType":"Block","src":"2256:46:8","statements":[{"expression":{"arguments":[{"id":690,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"2287:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":689,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"2273:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":688,"id":692,"nodeType":"Return","src":"2266:29:8"}]},"documentation":{"id":682,"nodeType":"StructuredDocumentation","src":"2133:46:8","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":694,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2193:7:8","nodeType":"FunctionDefinition","parameters":{"id":685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":684,"mutability":"mutable","name":"tokenId","nameLocation":"2209:7:8","nodeType":"VariableDeclaration","scope":694,"src":"2201:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":683,"name":"uint256","nodeType":"ElementaryTypeName","src":"2201:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2200:17:8"},"returnParameters":{"id":688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":687,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":694,"src":"2247:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":686,"name":"address","nodeType":"ElementaryTypeName","src":"2247:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2246:9:8"},"scope":1509,"src":"2184:118:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1657],"body":{"id":702,"nodeType":"Block","src":"2424:29:8","statements":[{"expression":{"id":700,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"2441:5:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":699,"id":701,"nodeType":"Return","src":"2434:12:8"}]},"documentation":{"id":695,"nodeType":"StructuredDocumentation","src":"2308:51:8","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":703,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2373:4:8","nodeType":"FunctionDefinition","parameters":{"id":696,"nodeType":"ParameterList","parameters":[],"src":"2377:2:8"},"returnParameters":{"id":699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":698,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":703,"src":"2409:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":697,"name":"string","nodeType":"ElementaryTypeName","src":"2409:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2408:15:8"},"scope":1509,"src":"2364:89:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1663],"body":{"id":711,"nodeType":"Block","src":"2579:31:8","statements":[{"expression":{"id":709,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"2596:7:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":708,"id":710,"nodeType":"Return","src":"2589:14:8"}]},"documentation":{"id":704,"nodeType":"StructuredDocumentation","src":"2459:53:8","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":712,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2526:6:8","nodeType":"FunctionDefinition","parameters":{"id":705,"nodeType":"ParameterList","parameters":[],"src":"2532:2:8"},"returnParameters":{"id":708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":707,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":712,"src":"2564:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":706,"name":"string","nodeType":"ElementaryTypeName","src":"2564:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2563:15:8"},"scope":1509,"src":"2517:93:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1671],"body":{"id":747,"nodeType":"Block","src":"2755:176:8","statements":[{"expression":{"arguments":[{"id":721,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"2779:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":720,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"2765:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2765:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":723,"nodeType":"ExpressionStatement","src":"2765:22:8"},{"assignments":[725],"declarations":[{"constant":false,"id":725,"mutability":"mutable","name":"baseURI","nameLocation":"2812:7:8","nodeType":"VariableDeclaration","scope":747,"src":"2798:21:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":724,"name":"string","nodeType":"ElementaryTypeName","src":"2798:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":728,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":726,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"2822:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2822:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2798:34:8"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":731,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"2855:7:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2849:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":729,"name":"bytes","nodeType":"ElementaryTypeName","src":"2849:5:8","typeDescriptions":{}}},"id":732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2849:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:8","memberName":"length","nodeType":"MemberAccess","src":"2849:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2873:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2849:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2922:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2849:75:8","trueExpression":{"arguments":[{"id":739,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"2891:7:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":740,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"2900:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2908:8:8","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1945,"src":"2900:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2900:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2877:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":736,"name":"string","nodeType":"ElementaryTypeName","src":"2877:6:8","typeDescriptions":{}}},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2884:6:8","memberName":"concat","nodeType":"MemberAccess","src":"2877:13:8","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2877:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":719,"id":746,"nodeType":"Return","src":"2842:82:8"}]},"documentation":{"id":713,"nodeType":"StructuredDocumentation","src":"2616:55:8","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":748,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2685:8:8","nodeType":"FunctionDefinition","parameters":{"id":716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":715,"mutability":"mutable","name":"tokenId","nameLocation":"2702:7:8","nodeType":"VariableDeclaration","scope":748,"src":"2694:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":714,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2693:17:8"},"returnParameters":{"id":719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":718,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":748,"src":"2740:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":717,"name":"string","nodeType":"ElementaryTypeName","src":"2740:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2739:15:8"},"scope":1509,"src":"2676:255:8","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":756,"nodeType":"Block","src":"3239:26:8","statements":[{"expression":{"hexValue":"","id":754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3256:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":753,"id":755,"nodeType":"Return","src":"3249:9:8"}]},"documentation":{"id":749,"nodeType":"StructuredDocumentation","src":"2937:231:8","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":757,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3182:8:8","nodeType":"FunctionDefinition","parameters":{"id":750,"nodeType":"ParameterList","parameters":[],"src":"3190:2:8"},"returnParameters":{"id":753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":757,"src":"3224:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":751,"name":"string","nodeType":"ElementaryTypeName","src":"3224:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3223:15:8"},"scope":1509,"src":"3173:92:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1599],"body":{"id":772,"nodeType":"Block","src":"3383:52:8","statements":[{"expression":{"arguments":[{"id":766,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"3402:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":767,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"3406:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":768,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"3415:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3415:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":765,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1376,1442],"referencedDeclaration":1376,"src":"3393:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3393:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":771,"nodeType":"ExpressionStatement","src":"3393:35:8"}]},"documentation":{"id":758,"nodeType":"StructuredDocumentation","src":"3271:46:8","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":773,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3331:7:8","nodeType":"FunctionDefinition","parameters":{"id":763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":760,"mutability":"mutable","name":"to","nameLocation":"3347:2:8","nodeType":"VariableDeclaration","scope":773,"src":"3339:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":759,"name":"address","nodeType":"ElementaryTypeName","src":"3339:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":762,"mutability":"mutable","name":"tokenId","nameLocation":"3359:7:8","nodeType":"VariableDeclaration","scope":773,"src":"3351:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":761,"name":"uint256","nodeType":"ElementaryTypeName","src":"3351:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3338:29:8"},"returnParameters":{"id":764,"nodeType":"ParameterList","parameters":[],"src":"3383:0:8"},"scope":1509,"src":"3322:113:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1615],"body":{"id":789,"nodeType":"Block","src":"3572:78:8","statements":[{"expression":{"arguments":[{"id":782,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"3596:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":781,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"3582:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3582:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":784,"nodeType":"ExpressionStatement","src":"3582:22:8"},{"expression":{"arguments":[{"id":786,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"3635:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":785,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"3622:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3622:21:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":780,"id":788,"nodeType":"Return","src":"3615:28:8"}]},"documentation":{"id":774,"nodeType":"StructuredDocumentation","src":"3441:50:8","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":790,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3505:11:8","nodeType":"FunctionDefinition","parameters":{"id":777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":776,"mutability":"mutable","name":"tokenId","nameLocation":"3525:7:8","nodeType":"VariableDeclaration","scope":790,"src":"3517:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":775,"name":"uint256","nodeType":"ElementaryTypeName","src":"3517:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3516:17:8"},"returnParameters":{"id":780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":779,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":790,"src":"3563:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":778,"name":"address","nodeType":"ElementaryTypeName","src":"3563:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3562:9:8"},"scope":1509,"src":"3496:154:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1607],"body":{"id":805,"nodeType":"Block","src":"3792:69:8","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":799,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"3821:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3821:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":801,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"3835:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":802,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"3845:8:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":798,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"3802:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3802:52:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":804,"nodeType":"ExpressionStatement","src":"3802:52:8"}]},"documentation":{"id":791,"nodeType":"StructuredDocumentation","src":"3656:56:8","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":806,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3726:17:8","nodeType":"FunctionDefinition","parameters":{"id":796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":793,"mutability":"mutable","name":"operator","nameLocation":"3752:8:8","nodeType":"VariableDeclaration","scope":806,"src":"3744:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":792,"name":"address","nodeType":"ElementaryTypeName","src":"3744:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":795,"mutability":"mutable","name":"approved","nameLocation":"3767:8:8","nodeType":"VariableDeclaration","scope":806,"src":"3762:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":794,"name":"bool","nodeType":"ElementaryTypeName","src":"3762:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3743:33:8"},"returnParameters":{"id":797,"nodeType":"ParameterList","parameters":[],"src":"3792:0:8"},"scope":1509,"src":"3717:144:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1625],"body":{"id":822,"nodeType":"Block","src":"4021:59:8","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":816,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"4038:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":818,"indexExpression":{"id":817,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"4057:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4038:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":820,"indexExpression":{"id":819,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"4064:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4038:35:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":815,"id":821,"nodeType":"Return","src":"4031:42:8"}]},"documentation":{"id":807,"nodeType":"StructuredDocumentation","src":"3867:55:8","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":823,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3936:16:8","nodeType":"FunctionDefinition","parameters":{"id":812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":809,"mutability":"mutable","name":"owner","nameLocation":"3961:5:8","nodeType":"VariableDeclaration","scope":823,"src":"3953:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":808,"name":"address","nodeType":"ElementaryTypeName","src":"3953:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":811,"mutability":"mutable","name":"operator","nameLocation":"3976:8:8","nodeType":"VariableDeclaration","scope":823,"src":"3968:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":810,"name":"address","nodeType":"ElementaryTypeName","src":"3968:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3952:33:8"},"returnParameters":{"id":815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":814,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":823,"src":"4015:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":813,"name":"bool","nodeType":"ElementaryTypeName","src":"4015:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4014:6:8"},"scope":1509,"src":"3927:153:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1591],"body":{"id":868,"nodeType":"Block","src":"4222:498:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":833,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"4236:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4250:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4242:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":834,"name":"address","nodeType":"ElementaryTypeName","src":"4242:7:8","typeDescriptions":{}}},"id":837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4242:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4236:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":847,"nodeType":"IfStatement","src":"4232:87:8","trueBody":{"id":846,"nodeType":"Block","src":"4254:65:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4305:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4297:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":840,"name":"address","nodeType":"ElementaryTypeName","src":"4297:7:8","typeDescriptions":{}}},"id":843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":839,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"4275:21:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4275:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":845,"nodeType":"RevertStatement","src":"4268:40:8"}]}},{"assignments":[849],"declarations":[{"constant":false,"id":849,"mutability":"mutable","name":"previousOwner","nameLocation":"4545:13:8","nodeType":"VariableDeclaration","scope":868,"src":"4537:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":848,"name":"address","nodeType":"ElementaryTypeName","src":"4537:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":856,"initialValue":{"arguments":[{"id":851,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"4569:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":852,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"4573:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":853,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"4582:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4582:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":850,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"4561:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4561:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4537:58:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":857,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"4609:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":858,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"4626:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4609:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":867,"nodeType":"IfStatement","src":"4605:109:8","trueBody":{"id":866,"nodeType":"Block","src":"4632:82:8","statements":[{"errorCall":{"arguments":[{"id":861,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"4674:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":862,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"4680:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":863,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"4689:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":860,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"4653:20:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4653:50:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":865,"nodeType":"RevertStatement","src":"4646:57:8"}]}}]},"documentation":{"id":824,"nodeType":"StructuredDocumentation","src":"4086:51:8","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":869,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4151:12:8","nodeType":"FunctionDefinition","parameters":{"id":831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":826,"mutability":"mutable","name":"from","nameLocation":"4172:4:8","nodeType":"VariableDeclaration","scope":869,"src":"4164:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":825,"name":"address","nodeType":"ElementaryTypeName","src":"4164:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":828,"mutability":"mutable","name":"to","nameLocation":"4186:2:8","nodeType":"VariableDeclaration","scope":869,"src":"4178:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":827,"name":"address","nodeType":"ElementaryTypeName","src":"4178:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":830,"mutability":"mutable","name":"tokenId","nameLocation":"4198:7:8","nodeType":"VariableDeclaration","scope":869,"src":"4190:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":829,"name":"uint256","nodeType":"ElementaryTypeName","src":"4190:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4163:43:8"},"returnParameters":{"id":832,"nodeType":"ParameterList","parameters":[],"src":"4222:0:8"},"scope":1509,"src":"4142:578:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1581],"body":{"id":886,"nodeType":"Block","src":"4862:56:8","statements":[{"expression":{"arguments":[{"id":880,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"4889:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":881,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"4895:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":882,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"4899:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4908:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":879,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[887,917],"referencedDeclaration":917,"src":"4872:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4872:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":885,"nodeType":"ExpressionStatement","src":"4872:39:8"}]},"documentation":{"id":870,"nodeType":"StructuredDocumentation","src":"4726:55:8","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":887,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4795:16:8","nodeType":"FunctionDefinition","parameters":{"id":877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":872,"mutability":"mutable","name":"from","nameLocation":"4820:4:8","nodeType":"VariableDeclaration","scope":887,"src":"4812:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":871,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":874,"mutability":"mutable","name":"to","nameLocation":"4834:2:8","nodeType":"VariableDeclaration","scope":887,"src":"4826:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":873,"name":"address","nodeType":"ElementaryTypeName","src":"4826:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":876,"mutability":"mutable","name":"tokenId","nameLocation":"4846:7:8","nodeType":"VariableDeclaration","scope":887,"src":"4838:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":875,"name":"uint256","nodeType":"ElementaryTypeName","src":"4838:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4811:43:8"},"returnParameters":{"id":878,"nodeType":"ParameterList","parameters":[],"src":"4862:0:8"},"scope":1509,"src":"4786:132:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1571],"body":{"id":916,"nodeType":"Block","src":"5087:130:8","statements":[{"expression":{"arguments":[{"id":900,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"5110:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":901,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":892,"src":"5116:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":902,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"5120:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":899,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"5097:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5097:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":904,"nodeType":"ExpressionStatement","src":"5097:31:8"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":908,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"5172:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5172:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":910,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"5186:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":911,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":892,"src":"5192:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":912,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"5196:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":913,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"5205:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":905,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"5138:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$1749_$","typeString":"type(library ERC721Utils)"}},"id":907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5150:21:8","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":1748,"src":"5138:33:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5138:72:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":915,"nodeType":"ExpressionStatement","src":"5138:72:8"}]},"documentation":{"id":888,"nodeType":"StructuredDocumentation","src":"4924:55:8","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":917,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4993:16:8","nodeType":"FunctionDefinition","parameters":{"id":897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":890,"mutability":"mutable","name":"from","nameLocation":"5018:4:8","nodeType":"VariableDeclaration","scope":917,"src":"5010:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":889,"name":"address","nodeType":"ElementaryTypeName","src":"5010:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":892,"mutability":"mutable","name":"to","nameLocation":"5032:2:8","nodeType":"VariableDeclaration","scope":917,"src":"5024:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":891,"name":"address","nodeType":"ElementaryTypeName","src":"5024:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":894,"mutability":"mutable","name":"tokenId","nameLocation":"5044:7:8","nodeType":"VariableDeclaration","scope":917,"src":"5036:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":893,"name":"uint256","nodeType":"ElementaryTypeName","src":"5036:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":896,"mutability":"mutable","name":"data","nameLocation":"5066:4:8","nodeType":"VariableDeclaration","scope":917,"src":"5053:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":895,"name":"bytes","nodeType":"ElementaryTypeName","src":"5053:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5009:62:8"},"returnParameters":{"id":898,"nodeType":"ParameterList","parameters":[],"src":"5087:0:8"},"scope":1509,"src":"4984:233:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":929,"nodeType":"Block","src":"5807:40:8","statements":[{"expression":{"baseExpression":{"id":925,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"5824:7:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":927,"indexExpression":{"id":926,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"5832:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5824:16:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":924,"id":928,"nodeType":"Return","src":"5817:23:8"}]},"documentation":{"id":918,"nodeType":"StructuredDocumentation","src":"5223:504:8","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."},"id":930,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"5741:8:8","nodeType":"FunctionDefinition","parameters":{"id":921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":920,"mutability":"mutable","name":"tokenId","nameLocation":"5758:7:8","nodeType":"VariableDeclaration","scope":930,"src":"5750:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":919,"name":"uint256","nodeType":"ElementaryTypeName","src":"5750:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5749:17:8"},"returnParameters":{"id":924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":923,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":930,"src":"5798:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":922,"name":"address","nodeType":"ElementaryTypeName","src":"5798:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5797:9:8"},"scope":1509,"src":"5732:115:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":942,"nodeType":"Block","src":"6042:48:8","statements":[{"expression":{"baseExpression":{"id":938,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"6059:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":940,"indexExpression":{"id":939,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"6075:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6059:24:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":937,"id":941,"nodeType":"Return","src":"6052:31:8"}]},"documentation":{"id":931,"nodeType":"StructuredDocumentation","src":"5853:105:8","text":" @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."},"id":943,"implemented":true,"kind":"function","modifiers":[],"name":"_getApproved","nameLocation":"5972:12:8","nodeType":"FunctionDefinition","parameters":{"id":934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":933,"mutability":"mutable","name":"tokenId","nameLocation":"5993:7:8","nodeType":"VariableDeclaration","scope":943,"src":"5985:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":932,"name":"uint256","nodeType":"ElementaryTypeName","src":"5985:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5984:17:8"},"returnParameters":{"id":937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":936,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":943,"src":"6033:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":935,"name":"address","nodeType":"ElementaryTypeName","src":"6033:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6032:9:8"},"scope":1509,"src":"5963:127:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":978,"nodeType":"Block","src":"6510:163:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":955,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"6539:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6558:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6550:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":956,"name":"address","nodeType":"ElementaryTypeName","src":"6550:7:8","typeDescriptions":{}}},"id":959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6550:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6539:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":961,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"6577:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":962,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"6586:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6577:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":965,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"6614:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":966,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"6621:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":964,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"6597:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6597:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6577:52:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":970,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"6646:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":969,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"6633:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6633:21:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":972,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"6658:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6633:32:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6577:88:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":975,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6576:90:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6539:127:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":954,"id":977,"nodeType":"Return","src":"6520:146:8"}]},"documentation":{"id":944,"nodeType":"StructuredDocumentation","src":"6096:300:8","text":" @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":979,"implemented":true,"kind":"function","modifiers":[],"name":"_isAuthorized","nameLocation":"6410:13:8","nodeType":"FunctionDefinition","parameters":{"id":951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":946,"mutability":"mutable","name":"owner","nameLocation":"6432:5:8","nodeType":"VariableDeclaration","scope":979,"src":"6424:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":945,"name":"address","nodeType":"ElementaryTypeName","src":"6424:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":948,"mutability":"mutable","name":"spender","nameLocation":"6447:7:8","nodeType":"VariableDeclaration","scope":979,"src":"6439:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":947,"name":"address","nodeType":"ElementaryTypeName","src":"6439:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":950,"mutability":"mutable","name":"tokenId","nameLocation":"6464:7:8","nodeType":"VariableDeclaration","scope":979,"src":"6456:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":949,"name":"uint256","nodeType":"ElementaryTypeName","src":"6456:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6423:49:8"},"returnParameters":{"id":954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":953,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":979,"src":"6504:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":952,"name":"bool","nodeType":"ElementaryTypeName","src":"6504:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6503:6:8"},"scope":1509,"src":"6401:272:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1015,"nodeType":"Block","src":"7202:271:8","statements":[{"condition":{"id":994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7216:39:8","subExpression":{"arguments":[{"id":990,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"7231:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":991,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"7238:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":992,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":986,"src":"7247:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":989,"name":"_isAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"7217:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) view returns (bool)"}},"id":993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7217:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1014,"nodeType":"IfStatement","src":"7212:255:8","trueBody":{"id":1013,"nodeType":"Block","src":"7257:210:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":995,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"7275:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7292:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7284:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":996,"name":"address","nodeType":"ElementaryTypeName","src":"7284:7:8","typeDescriptions":{}}},"id":999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7284:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7275:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1011,"nodeType":"Block","src":"7373:84:8","statements":[{"errorCall":{"arguments":[{"id":1007,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"7425:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1008,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":986,"src":"7434:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1006,"name":"ERC721InsufficientApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"7398:26:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7398:44:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1010,"nodeType":"RevertStatement","src":"7391:51:8"}]},"id":1012,"nodeType":"IfStatement","src":"7271:186:8","trueBody":{"id":1005,"nodeType":"Block","src":"7296:71:8","statements":[{"errorCall":{"arguments":[{"id":1002,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":986,"src":"7344:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1001,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"7321:22:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7321:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1004,"nodeType":"RevertStatement","src":"7314:38:8"}]}}]}}]},"documentation":{"id":980,"nodeType":"StructuredDocumentation","src":"6679:421:8","text":" @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if:\n - `spender` does not have approval from `owner` for `tokenId`.\n - `spender` does not have approval to manage all of `owner`'s assets.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":1016,"implemented":true,"kind":"function","modifiers":[],"name":"_checkAuthorized","nameLocation":"7114:16:8","nodeType":"FunctionDefinition","parameters":{"id":987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":982,"mutability":"mutable","name":"owner","nameLocation":"7139:5:8","nodeType":"VariableDeclaration","scope":1016,"src":"7131:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":981,"name":"address","nodeType":"ElementaryTypeName","src":"7131:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":984,"mutability":"mutable","name":"spender","nameLocation":"7154:7:8","nodeType":"VariableDeclaration","scope":1016,"src":"7146:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":983,"name":"address","nodeType":"ElementaryTypeName","src":"7146:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":986,"mutability":"mutable","name":"tokenId","nameLocation":"7171:7:8","nodeType":"VariableDeclaration","scope":1016,"src":"7163:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":985,"name":"uint256","nodeType":"ElementaryTypeName","src":"7163:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7130:49:8"},"returnParameters":{"id":988,"nodeType":"ParameterList","parameters":[],"src":"7202:0:8"},"scope":1509,"src":"7105:368:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1031,"nodeType":"Block","src":"8190:78:8","statements":[{"id":1030,"nodeType":"UncheckedBlock","src":"8200:62:8","statements":[{"expression":{"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1024,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"8224:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1026,"indexExpression":{"id":1025,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"8234:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8224:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"8246:5:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"8224:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1029,"nodeType":"ExpressionStatement","src":"8224:27:8"}]}]},"documentation":{"id":1017,"nodeType":"StructuredDocumentation","src":"7479:631:8","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."},"id":1032,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"8124:16:8","nodeType":"FunctionDefinition","parameters":{"id":1022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1019,"mutability":"mutable","name":"account","nameLocation":"8149:7:8","nodeType":"VariableDeclaration","scope":1032,"src":"8141:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1018,"name":"address","nodeType":"ElementaryTypeName","src":"8141:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1021,"mutability":"mutable","name":"value","nameLocation":"8166:5:8","nodeType":"VariableDeclaration","scope":1032,"src":"8158:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1020,"name":"uint128","nodeType":"ElementaryTypeName","src":"8158:7:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"8140:32:8"},"returnParameters":{"id":1023,"nodeType":"ParameterList","parameters":[],"src":"8190:0:8"},"scope":1509,"src":"8115:153:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1121,"nodeType":"Block","src":"8956:700:8","statements":[{"assignments":[1045],"declarations":[{"constant":false,"id":1045,"mutability":"mutable","name":"from","nameLocation":"8974:4:8","nodeType":"VariableDeclaration","scope":1121,"src":"8966:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1044,"name":"address","nodeType":"ElementaryTypeName","src":"8966:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1049,"initialValue":{"arguments":[{"id":1047,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"8990:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1046,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"8981:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8981:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8966:32:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1050,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"9058:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9074:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9066:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1051,"name":"address","nodeType":"ElementaryTypeName","src":"9066:7:8","typeDescriptions":{}}},"id":1054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9066:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9058:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1063,"nodeType":"IfStatement","src":"9054:86:8","trueBody":{"id":1062,"nodeType":"Block","src":"9078:62:8","statements":[{"expression":{"arguments":[{"id":1057,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"9109:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1058,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"9115:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1059,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"9121:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1056,"name":"_checkAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"9092:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) view"}},"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9092:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1061,"nodeType":"ExpressionStatement","src":"9092:37:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1064,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"9184:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9200:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9192:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1065,"name":"address","nodeType":"ElementaryTypeName","src":"9192:7:8","typeDescriptions":{}}},"id":1068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9192:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9184:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1091,"nodeType":"IfStatement","src":"9180:256:8","trueBody":{"id":1090,"nodeType":"Block","src":"9204:232:8","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9317:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9309:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1071,"name":"address","nodeType":"ElementaryTypeName","src":"9309:7:8","typeDescriptions":{}}},"id":1074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9309:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1075,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"9321:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9338:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9330:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1076,"name":"address","nodeType":"ElementaryTypeName","src":"9330:7:8","typeDescriptions":{}}},"id":1079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9330:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":1080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9342:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1070,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1376,1442],"referencedDeclaration":1442,"src":"9300:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9300:48:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1082,"nodeType":"ExpressionStatement","src":"9300:48:8"},{"id":1089,"nodeType":"UncheckedBlock","src":"9363:63:8","statements":[{"expression":{"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1083,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"9391:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1085,"indexExpression":{"id":1084,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"9401:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9391:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9410:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9391:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1088,"nodeType":"ExpressionStatement","src":"9391:20:8"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1092,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"9450:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9464:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9456:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1093,"name":"address","nodeType":"ElementaryTypeName","src":"9456:7:8","typeDescriptions":{}}},"id":1096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9456:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9450:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1106,"nodeType":"IfStatement","src":"9446:107:8","trueBody":{"id":1105,"nodeType":"Block","src":"9468:85:8","statements":[{"id":1104,"nodeType":"UncheckedBlock","src":"9482:61:8","statements":[{"expression":{"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1098,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"9510:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1100,"indexExpression":{"id":1099,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"9520:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9510:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9527:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9510:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1103,"nodeType":"ExpressionStatement","src":"9510:18:8"}]}]}},{"expression":{"id":1111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1107,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"9563:7:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1109,"indexExpression":{"id":1108,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"9571:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9563:16:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1110,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"9582:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9563:21:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1112,"nodeType":"ExpressionStatement","src":"9563:21:8"},{"eventCall":{"arguments":[{"id":1114,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"9609:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1115,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"9615:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1116,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"9619:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1113,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"9600:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9600:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1118,"nodeType":"EmitStatement","src":"9595:32:8"},{"expression":{"id":1119,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"9645:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1043,"id":1120,"nodeType":"Return","src":"9638:11:8"}]},"documentation":{"id":1033,"nodeType":"StructuredDocumentation","src":"8274:582:8","text":" @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."},"id":1122,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"8870:7:8","nodeType":"FunctionDefinition","parameters":{"id":1040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1035,"mutability":"mutable","name":"to","nameLocation":"8886:2:8","nodeType":"VariableDeclaration","scope":1122,"src":"8878:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1034,"name":"address","nodeType":"ElementaryTypeName","src":"8878:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1037,"mutability":"mutable","name":"tokenId","nameLocation":"8898:7:8","nodeType":"VariableDeclaration","scope":1122,"src":"8890:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1036,"name":"uint256","nodeType":"ElementaryTypeName","src":"8890:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1039,"mutability":"mutable","name":"auth","nameLocation":"8915:4:8","nodeType":"VariableDeclaration","scope":1122,"src":"8907:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1038,"name":"address","nodeType":"ElementaryTypeName","src":"8907:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8877:43:8"},"returnParameters":{"id":1043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1042,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1122,"src":"8947:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1041,"name":"address","nodeType":"ElementaryTypeName","src":"8947:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8946:9:8"},"scope":1509,"src":"8861:795:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1171,"nodeType":"Block","src":"10031:274:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1130,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"10045:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10059:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10051:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1131,"name":"address","nodeType":"ElementaryTypeName","src":"10051:7:8","typeDescriptions":{}}},"id":1134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10051:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10045:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1144,"nodeType":"IfStatement","src":"10041:87:8","trueBody":{"id":1143,"nodeType":"Block","src":"10063:65:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10114:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10106:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1137,"name":"address","nodeType":"ElementaryTypeName","src":"10106:7:8","typeDescriptions":{}}},"id":1140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10106:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1136,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"10084:21:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10084:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1142,"nodeType":"RevertStatement","src":"10077:40:8"}]}},{"assignments":[1146],"declarations":[{"constant":false,"id":1146,"mutability":"mutable","name":"previousOwner","nameLocation":"10145:13:8","nodeType":"VariableDeclaration","scope":1171,"src":"10137:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1145,"name":"address","nodeType":"ElementaryTypeName","src":"10137:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1155,"initialValue":{"arguments":[{"id":1148,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"10169:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1149,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"10173:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10190:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10182:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1150,"name":"address","nodeType":"ElementaryTypeName","src":"10182:7:8","typeDescriptions":{}}},"id":1153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10182:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1147,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"10161:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10161:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10137:56:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1156,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"10207:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10232:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10224:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1157,"name":"address","nodeType":"ElementaryTypeName","src":"10224:7:8","typeDescriptions":{}}},"id":1160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10224:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10207:27:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1170,"nodeType":"IfStatement","src":"10203:96:8","trueBody":{"id":1169,"nodeType":"Block","src":"10236:63:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10285:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10277:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1163,"name":"address","nodeType":"ElementaryTypeName","src":"10277:7:8","typeDescriptions":{}}},"id":1166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10277:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1162,"name":"ERC721InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"10257:19:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10257:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1168,"nodeType":"RevertStatement","src":"10250:38:8"}]}}]},"documentation":{"id":1123,"nodeType":"StructuredDocumentation","src":"9662:311:8","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":1172,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9987:5:8","nodeType":"FunctionDefinition","parameters":{"id":1128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1125,"mutability":"mutable","name":"to","nameLocation":"10001:2:8","nodeType":"VariableDeclaration","scope":1172,"src":"9993:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1124,"name":"address","nodeType":"ElementaryTypeName","src":"9993:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1127,"mutability":"mutable","name":"tokenId","nameLocation":"10013:7:8","nodeType":"VariableDeclaration","scope":1172,"src":"10005:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1126,"name":"uint256","nodeType":"ElementaryTypeName","src":"10005:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9992:29:8"},"returnParameters":{"id":1129,"nodeType":"ParameterList","parameters":[],"src":"10031:0:8"},"scope":1509,"src":"9978:327:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1186,"nodeType":"Block","src":"10713:43:8","statements":[{"expression":{"arguments":[{"id":1181,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"10733:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1182,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"10737:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10746:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1180,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1187,1217],"referencedDeclaration":1217,"src":"10723:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10723:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1185,"nodeType":"ExpressionStatement","src":"10723:26:8"}]},"documentation":{"id":1173,"nodeType":"StructuredDocumentation","src":"10311:340:8","text":" @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1187,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10665:9:8","nodeType":"FunctionDefinition","parameters":{"id":1178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1175,"mutability":"mutable","name":"to","nameLocation":"10683:2:8","nodeType":"VariableDeclaration","scope":1187,"src":"10675:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1174,"name":"address","nodeType":"ElementaryTypeName","src":"10675:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1177,"mutability":"mutable","name":"tokenId","nameLocation":"10695:7:8","nodeType":"VariableDeclaration","scope":1187,"src":"10687:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1176,"name":"uint256","nodeType":"ElementaryTypeName","src":"10687:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10674:29:8"},"returnParameters":{"id":1179,"nodeType":"ParameterList","parameters":[],"src":"10713:0:8"},"scope":1509,"src":"10656:100:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1216,"nodeType":"Block","src":"11061:123:8","statements":[{"expression":{"arguments":[{"id":1198,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"11077:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1199,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"11081:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1197,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"11071:5:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11071:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1201,"nodeType":"ExpressionStatement","src":"11071:18:8"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1205,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"11133:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11133:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11155:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11147:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1207,"name":"address","nodeType":"ElementaryTypeName","src":"11147:7:8","typeDescriptions":{}}},"id":1210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11147:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1211,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"11159:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1212,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"11163:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1213,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"11172:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1202,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"11099:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$1749_$","typeString":"type(library ERC721Utils)"}},"id":1204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11111:21:8","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":1748,"src":"11099:33:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11099:78:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1215,"nodeType":"ExpressionStatement","src":"11099:78:8"}]},"documentation":{"id":1188,"nodeType":"StructuredDocumentation","src":"10762:210:8","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1217,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10986:9:8","nodeType":"FunctionDefinition","parameters":{"id":1195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1190,"mutability":"mutable","name":"to","nameLocation":"11004:2:8","nodeType":"VariableDeclaration","scope":1217,"src":"10996:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1189,"name":"address","nodeType":"ElementaryTypeName","src":"10996:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1192,"mutability":"mutable","name":"tokenId","nameLocation":"11016:7:8","nodeType":"VariableDeclaration","scope":1217,"src":"11008:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1191,"name":"uint256","nodeType":"ElementaryTypeName","src":"11008:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1194,"mutability":"mutable","name":"data","nameLocation":"11038:4:8","nodeType":"VariableDeclaration","scope":1217,"src":"11025:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1193,"name":"bytes","nodeType":"ElementaryTypeName","src":"11025:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10995:48:8"},"returnParameters":{"id":1196,"nodeType":"ParameterList","parameters":[],"src":"11061:0:8"},"scope":1509,"src":"10977:207:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1249,"nodeType":"Block","src":"11551:186:8","statements":[{"assignments":[1224],"declarations":[{"constant":false,"id":1224,"mutability":"mutable","name":"previousOwner","nameLocation":"11569:13:8","nodeType":"VariableDeclaration","scope":1249,"src":"11561:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1223,"name":"address","nodeType":"ElementaryTypeName","src":"11561:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1236,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":1228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11601:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11593:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1226,"name":"address","nodeType":"ElementaryTypeName","src":"11593:7:8","typeDescriptions":{}}},"id":1229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11593:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1230,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"11605:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11622:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11614:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1231,"name":"address","nodeType":"ElementaryTypeName","src":"11614:7:8","typeDescriptions":{}}},"id":1234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11614:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1225,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"11585:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11585:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11561:64:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1237,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"11639:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11664:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11656:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1238,"name":"address","nodeType":"ElementaryTypeName","src":"11656:7:8","typeDescriptions":{}}},"id":1241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11656:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11639:27:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1248,"nodeType":"IfStatement","src":"11635:96:8","trueBody":{"id":1247,"nodeType":"Block","src":"11668:63:8","statements":[{"errorCall":{"arguments":[{"id":1244,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"11712:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1243,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"11689:22:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11689:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1246,"nodeType":"RevertStatement","src":"11682:38:8"}]}}]},"documentation":{"id":1218,"nodeType":"StructuredDocumentation","src":"11190:315:8","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":1250,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"11519:5:8","nodeType":"FunctionDefinition","parameters":{"id":1221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1220,"mutability":"mutable","name":"tokenId","nameLocation":"11533:7:8","nodeType":"VariableDeclaration","scope":1250,"src":"11525:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1219,"name":"uint256","nodeType":"ElementaryTypeName","src":"11525:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11524:17:8"},"returnParameters":{"id":1222,"nodeType":"ParameterList","parameters":[],"src":"11551:0:8"},"scope":1509,"src":"11510:227:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1309,"nodeType":"Block","src":"12132:389:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1260,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"12146:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12160:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12152:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1261,"name":"address","nodeType":"ElementaryTypeName","src":"12152:7:8","typeDescriptions":{}}},"id":1264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12152:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12146:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1274,"nodeType":"IfStatement","src":"12142:87:8","trueBody":{"id":1273,"nodeType":"Block","src":"12164:65:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12215:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12207:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1267,"name":"address","nodeType":"ElementaryTypeName","src":"12207:7:8","typeDescriptions":{}}},"id":1270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12207:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1266,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"12185:21:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12185:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1272,"nodeType":"RevertStatement","src":"12178:40:8"}]}},{"assignments":[1276],"declarations":[{"constant":false,"id":1276,"mutability":"mutable","name":"previousOwner","nameLocation":"12246:13:8","nodeType":"VariableDeclaration","scope":1309,"src":"12238:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1275,"name":"address","nodeType":"ElementaryTypeName","src":"12238:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1285,"initialValue":{"arguments":[{"id":1278,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"12270:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1279,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"12274:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12291:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12283:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1280,"name":"address","nodeType":"ElementaryTypeName","src":"12283:7:8","typeDescriptions":{}}},"id":1283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12283:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1277,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"12262:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12262:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12238:56:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1286,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"12308:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12333:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12325:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1287,"name":"address","nodeType":"ElementaryTypeName","src":"12325:7:8","typeDescriptions":{}}},"id":1290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12325:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12308:27:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1297,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"12410:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1298,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"12427:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12410:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1307,"nodeType":"IfStatement","src":"12406:109:8","trueBody":{"id":1306,"nodeType":"Block","src":"12433:82:8","statements":[{"errorCall":{"arguments":[{"id":1301,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"12475:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1302,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"12481:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1303,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"12490:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1300,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"12454:20:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":1304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12454:50:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1305,"nodeType":"RevertStatement","src":"12447:57:8"}]}},"id":1308,"nodeType":"IfStatement","src":"12304:211:8","trueBody":{"id":1296,"nodeType":"Block","src":"12337:63:8","statements":[{"errorCall":{"arguments":[{"id":1293,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"12381:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1292,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"12358:22:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12358:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1295,"nodeType":"RevertStatement","src":"12351:38:8"}]}}]},"documentation":{"id":1251,"nodeType":"StructuredDocumentation","src":"11743:313:8","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":1310,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"12070:9:8","nodeType":"FunctionDefinition","parameters":{"id":1258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1253,"mutability":"mutable","name":"from","nameLocation":"12088:4:8","nodeType":"VariableDeclaration","scope":1310,"src":"12080:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1252,"name":"address","nodeType":"ElementaryTypeName","src":"12080:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1255,"mutability":"mutable","name":"to","nameLocation":"12102:2:8","nodeType":"VariableDeclaration","scope":1310,"src":"12094:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1254,"name":"address","nodeType":"ElementaryTypeName","src":"12094:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1257,"mutability":"mutable","name":"tokenId","nameLocation":"12114:7:8","nodeType":"VariableDeclaration","scope":1310,"src":"12106:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1256,"name":"uint256","nodeType":"ElementaryTypeName","src":"12106:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12079:43:8"},"returnParameters":{"id":1259,"nodeType":"ParameterList","parameters":[],"src":"12132:0:8"},"scope":1509,"src":"12061:460:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1327,"nodeType":"Block","src":"13530:53:8","statements":[{"expression":{"arguments":[{"id":1321,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"13554:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1322,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"13560:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1323,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"13564:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13573:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1320,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[1328,1358],"referencedDeclaration":1358,"src":"13540:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13540:36:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1326,"nodeType":"ExpressionStatement","src":"13540:36:8"}]},"documentation":{"id":1311,"nodeType":"StructuredDocumentation","src":"12527:923:8","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC-721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1328,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13464:13:8","nodeType":"FunctionDefinition","parameters":{"id":1318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1313,"mutability":"mutable","name":"from","nameLocation":"13486:4:8","nodeType":"VariableDeclaration","scope":1328,"src":"13478:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1312,"name":"address","nodeType":"ElementaryTypeName","src":"13478:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1315,"mutability":"mutable","name":"to","nameLocation":"13500:2:8","nodeType":"VariableDeclaration","scope":1328,"src":"13492:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1314,"name":"address","nodeType":"ElementaryTypeName","src":"13492:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1317,"mutability":"mutable","name":"tokenId","nameLocation":"13512:7:8","nodeType":"VariableDeclaration","scope":1328,"src":"13504:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1316,"name":"uint256","nodeType":"ElementaryTypeName","src":"13504:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13477:43:8"},"returnParameters":{"id":1319,"nodeType":"ParameterList","parameters":[],"src":"13530:0:8"},"scope":1509,"src":"13455:128:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1357,"nodeType":"Block","src":"13922:127:8","statements":[{"expression":{"arguments":[{"id":1341,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"13942:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1342,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"13948:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1343,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"13952:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1340,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"13932:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13932:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1345,"nodeType":"ExpressionStatement","src":"13932:28:8"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1349,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"14004:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14004:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1351,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"14018:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1352,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"14024:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1353,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"14028:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1354,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"14037:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1346,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"13970:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$1749_$","typeString":"type(library ERC721Utils)"}},"id":1348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13982:21:8","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":1748,"src":"13970:33:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13970:72:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1356,"nodeType":"ExpressionStatement","src":"13970:72:8"}]},"documentation":{"id":1329,"nodeType":"StructuredDocumentation","src":"13589:226:8","text":" @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1358,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13829:13:8","nodeType":"FunctionDefinition","parameters":{"id":1338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1331,"mutability":"mutable","name":"from","nameLocation":"13851:4:8","nodeType":"VariableDeclaration","scope":1358,"src":"13843:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1330,"name":"address","nodeType":"ElementaryTypeName","src":"13843:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1333,"mutability":"mutable","name":"to","nameLocation":"13865:2:8","nodeType":"VariableDeclaration","scope":1358,"src":"13857:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1332,"name":"address","nodeType":"ElementaryTypeName","src":"13857:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1335,"mutability":"mutable","name":"tokenId","nameLocation":"13877:7:8","nodeType":"VariableDeclaration","scope":1358,"src":"13869:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1334,"name":"uint256","nodeType":"ElementaryTypeName","src":"13869:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1337,"mutability":"mutable","name":"data","nameLocation":"13899:4:8","nodeType":"VariableDeclaration","scope":1358,"src":"13886:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1336,"name":"bytes","nodeType":"ElementaryTypeName","src":"13886:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13842:62:8"},"returnParameters":{"id":1339,"nodeType":"ParameterList","parameters":[],"src":"13922:0:8"},"scope":1509,"src":"13820:229:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1375,"nodeType":"Block","src":"14562:50:8","statements":[{"expression":{"arguments":[{"id":1369,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"14581:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1370,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"14585:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1371,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1365,"src":"14594:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":1372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14600:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1368,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1376,1442],"referencedDeclaration":1442,"src":"14572:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":1373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14572:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1374,"nodeType":"ExpressionStatement","src":"14572:33:8"}]},"documentation":{"id":1359,"nodeType":"StructuredDocumentation","src":"14055:432:8","text":" @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1376,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14501:8:8","nodeType":"FunctionDefinition","parameters":{"id":1366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1361,"mutability":"mutable","name":"to","nameLocation":"14518:2:8","nodeType":"VariableDeclaration","scope":1376,"src":"14510:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1360,"name":"address","nodeType":"ElementaryTypeName","src":"14510:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1363,"mutability":"mutable","name":"tokenId","nameLocation":"14530:7:8","nodeType":"VariableDeclaration","scope":1376,"src":"14522:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1362,"name":"uint256","nodeType":"ElementaryTypeName","src":"14522:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1365,"mutability":"mutable","name":"auth","nameLocation":"14547:4:8","nodeType":"VariableDeclaration","scope":1376,"src":"14539:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1364,"name":"address","nodeType":"ElementaryTypeName","src":"14539:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14509:43:8"},"returnParameters":{"id":1367,"nodeType":"ParameterList","parameters":[],"src":"14562:0:8"},"scope":1509,"src":"14492:120:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1441,"nodeType":"Block","src":"14888:568:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1388,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"14954:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1389,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"14967:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14983:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14975:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1390,"name":"address","nodeType":"ElementaryTypeName","src":"14975:7:8","typeDescriptions":{}}},"id":1393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14975:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14967:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14954:31:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1434,"nodeType":"IfStatement","src":"14950:460:8","trueBody":{"id":1433,"nodeType":"Block","src":"14987:423:8","statements":[{"assignments":[1397],"declarations":[{"constant":false,"id":1397,"mutability":"mutable","name":"owner","nameLocation":"15009:5:8","nodeType":"VariableDeclaration","scope":1433,"src":"15001:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1396,"name":"address","nodeType":"ElementaryTypeName","src":"15001:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1401,"initialValue":{"arguments":[{"id":1399,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"15031:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1398,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"15017:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15017:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15001:38:8"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1402,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"15167:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15183:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1404,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15175:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1403,"name":"address","nodeType":"ElementaryTypeName","src":"15175:7:8","typeDescriptions":{}}},"id":1406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15175:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15167:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1408,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"15189:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1409,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"15198:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15189:13:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15167:35:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"15206:30:8","subExpression":{"arguments":[{"id":1413,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"15224:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1414,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"15231:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1412,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"15207:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15207:29:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15167:69:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1423,"nodeType":"IfStatement","src":"15163:142:8","trueBody":{"id":1422,"nodeType":"Block","src":"15238:67:8","statements":[{"errorCall":{"arguments":[{"id":1419,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"15285:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1418,"name":"ERC721InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":499,"src":"15263:21:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15263:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1421,"nodeType":"RevertStatement","src":"15256:34:8"}]}},{"condition":{"id":1424,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"15323:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1432,"nodeType":"IfStatement","src":"15319:81:8","trueBody":{"id":1431,"nodeType":"Block","src":"15334:66:8","statements":[{"eventCall":{"arguments":[{"id":1426,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"15366:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1427,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"15373:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1428,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"15377:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1425,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1534,"src":"15357:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15357:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1430,"nodeType":"EmitStatement","src":"15352:33:8"}]}}]}},{"expression":{"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1435,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"15420:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1437,"indexExpression":{"id":1436,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"15436:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15420:24:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1438,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"15447:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15420:29:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1440,"nodeType":"ExpressionStatement","src":"15420:29:8"}]},"documentation":{"id":1377,"nodeType":"StructuredDocumentation","src":"14618:171:8","text":" @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."},"id":1442,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14803:8:8","nodeType":"FunctionDefinition","parameters":{"id":1386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1379,"mutability":"mutable","name":"to","nameLocation":"14820:2:8","nodeType":"VariableDeclaration","scope":1442,"src":"14812:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1378,"name":"address","nodeType":"ElementaryTypeName","src":"14812:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1381,"mutability":"mutable","name":"tokenId","nameLocation":"14832:7:8","nodeType":"VariableDeclaration","scope":1442,"src":"14824:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1380,"name":"uint256","nodeType":"ElementaryTypeName","src":"14824:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1383,"mutability":"mutable","name":"auth","nameLocation":"14849:4:8","nodeType":"VariableDeclaration","scope":1442,"src":"14841:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1382,"name":"address","nodeType":"ElementaryTypeName","src":"14841:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1385,"mutability":"mutable","name":"emitEvent","nameLocation":"14860:9:8","nodeType":"VariableDeclaration","scope":1442,"src":"14855:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1384,"name":"bool","nodeType":"ElementaryTypeName","src":"14855:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14811:59:8"},"returnParameters":{"id":1387,"nodeType":"ParameterList","parameters":[],"src":"14888:0:8"},"scope":1509,"src":"14794:662:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1478,"nodeType":"Block","src":"15758:219:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1452,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"15772:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15792:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15784:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1453,"name":"address","nodeType":"ElementaryTypeName","src":"15784:7:8","typeDescriptions":{}}},"id":1456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15784:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15772:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1463,"nodeType":"IfStatement","src":"15768:91:8","trueBody":{"id":1462,"nodeType":"Block","src":"15796:63:8","statements":[{"errorCall":{"arguments":[{"id":1459,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"15839:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1458,"name":"ERC721InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":504,"src":"15817:21:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15817:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1461,"nodeType":"RevertStatement","src":"15810:38:8"}]}},{"expression":{"id":1470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1464,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"15868:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1467,"indexExpression":{"id":1465,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"15887:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15868:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1468,"indexExpression":{"id":1466,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"15894:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15868:35:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1469,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"15906:8:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15868:46:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1471,"nodeType":"ExpressionStatement","src":"15868:46:8"},{"eventCall":{"arguments":[{"id":1473,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"15944:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1474,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"15951:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1475,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"15961:8:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1472,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"15929:14:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15929:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1477,"nodeType":"EmitStatement","src":"15924:46:8"}]},"documentation":{"id":1443,"nodeType":"StructuredDocumentation","src":"15462:198:8","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."},"id":1479,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"15674:18:8","nodeType":"FunctionDefinition","parameters":{"id":1450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1445,"mutability":"mutable","name":"owner","nameLocation":"15701:5:8","nodeType":"VariableDeclaration","scope":1479,"src":"15693:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1444,"name":"address","nodeType":"ElementaryTypeName","src":"15693:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1447,"mutability":"mutable","name":"operator","nameLocation":"15716:8:8","nodeType":"VariableDeclaration","scope":1479,"src":"15708:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1446,"name":"address","nodeType":"ElementaryTypeName","src":"15708:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1449,"mutability":"mutable","name":"approved","nameLocation":"15731:8:8","nodeType":"VariableDeclaration","scope":1479,"src":"15726:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1448,"name":"bool","nodeType":"ElementaryTypeName","src":"15726:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15692:48:8"},"returnParameters":{"id":1451,"nodeType":"ParameterList","parameters":[],"src":"15758:0:8"},"scope":1509,"src":"15665:312:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1507,"nodeType":"Block","src":"16284:169:8","statements":[{"assignments":[1488],"declarations":[{"constant":false,"id":1488,"mutability":"mutable","name":"owner","nameLocation":"16302:5:8","nodeType":"VariableDeclaration","scope":1507,"src":"16294:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1487,"name":"address","nodeType":"ElementaryTypeName","src":"16294:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1492,"initialValue":{"arguments":[{"id":1490,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"16319:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1489,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"16310:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16310:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16294:33:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1493,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"16341:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16358:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16350:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1494,"name":"address","nodeType":"ElementaryTypeName","src":"16350:7:8","typeDescriptions":{}}},"id":1497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16350:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16341:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1504,"nodeType":"IfStatement","src":"16337:88:8","trueBody":{"id":1503,"nodeType":"Block","src":"16362:63:8","statements":[{"errorCall":{"arguments":[{"id":1500,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"16406:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1499,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"16383:22:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16383:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1502,"nodeType":"RevertStatement","src":"16376:38:8"}]}},{"expression":{"id":1505,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"16441:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1486,"id":1506,"nodeType":"Return","src":"16434:12:8"}]},"documentation":{"id":1480,"nodeType":"StructuredDocumentation","src":"15983:224:8","text":" @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."},"id":1508,"implemented":true,"kind":"function","modifiers":[],"name":"_requireOwned","nameLocation":"16221:13:8","nodeType":"FunctionDefinition","parameters":{"id":1483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1482,"mutability":"mutable","name":"tokenId","nameLocation":"16243:7:8","nodeType":"VariableDeclaration","scope":1508,"src":"16235:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1481,"name":"uint256","nodeType":"ElementaryTypeName","src":"16235:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16234:17:8"},"returnParameters":{"id":1486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1508,"src":"16275:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1484,"name":"address","nodeType":"ElementaryTypeName","src":"16275:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16274:9:8"},"scope":1509,"src":"16212:241:8","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1510,"src":"775:15680:8","usedErrors":[463,468,477,482,487,494,499,504],"usedEvents":[1525,1534,1543]}],"src":"107:16349:8"},"id":8},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[3269],"IERC721":[1626]},"id":1627,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1511,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:9"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1513,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1627,"sourceUnit":3270,"src":"134:62:9","symbolAliases":[{"foreign":{"id":1512,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"142:7:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1515,"name":"IERC165","nameLocations":["288:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":3269,"src":"288:7:9"},"id":1516,"nodeType":"InheritanceSpecifier","src":"288:7:9"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":1514,"nodeType":"StructuredDocumentation","src":"198:68:9","text":" @dev Required interface of an ERC-721 compliant contract."},"fullyImplemented":false,"id":1626,"linearizedBaseContracts":[1626,3269],"name":"IERC721","nameLocation":"277:7:9","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1517,"nodeType":"StructuredDocumentation","src":"302:88:9","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1525,"name":"Transfer","nameLocation":"401:8:9","nodeType":"EventDefinition","parameters":{"id":1524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1519,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"426:4:9","nodeType":"VariableDeclaration","scope":1525,"src":"410:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1518,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1521,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"448:2:9","nodeType":"VariableDeclaration","scope":1525,"src":"432:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1520,"name":"address","nodeType":"ElementaryTypeName","src":"432:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1523,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"468:7:9","nodeType":"VariableDeclaration","scope":1525,"src":"452:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1522,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:67:9"},"src":"395:82:9"},{"anonymous":false,"documentation":{"id":1526,"nodeType":"StructuredDocumentation","src":"483:94:9","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1534,"name":"Approval","nameLocation":"588:8:9","nodeType":"EventDefinition","parameters":{"id":1533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1528,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"613:5:9","nodeType":"VariableDeclaration","scope":1534,"src":"597:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1527,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1530,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"636:8:9","nodeType":"VariableDeclaration","scope":1534,"src":"620:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1529,"name":"address","nodeType":"ElementaryTypeName","src":"620:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1532,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"662:7:9","nodeType":"VariableDeclaration","scope":1534,"src":"646:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1531,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"596:74:9"},"src":"582:89:9"},{"anonymous":false,"documentation":{"id":1535,"nodeType":"StructuredDocumentation","src":"677:117:9","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1543,"name":"ApprovalForAll","nameLocation":"805:14:9","nodeType":"EventDefinition","parameters":{"id":1542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1537,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"836:5:9","nodeType":"VariableDeclaration","scope":1543,"src":"820:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1536,"name":"address","nodeType":"ElementaryTypeName","src":"820:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1539,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"859:8:9","nodeType":"VariableDeclaration","scope":1543,"src":"843:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1538,"name":"address","nodeType":"ElementaryTypeName","src":"843:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1541,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"874:8:9","nodeType":"VariableDeclaration","scope":1543,"src":"869:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1540,"name":"bool","nodeType":"ElementaryTypeName","src":"869:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"819:64:9"},"src":"799:85:9"},{"documentation":{"id":1544,"nodeType":"StructuredDocumentation","src":"890:76:9","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":1551,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"980:9:9","nodeType":"FunctionDefinition","parameters":{"id":1547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1546,"mutability":"mutable","name":"owner","nameLocation":"998:5:9","nodeType":"VariableDeclaration","scope":1551,"src":"990:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1545,"name":"address","nodeType":"ElementaryTypeName","src":"990:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"989:15:9"},"returnParameters":{"id":1550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1549,"mutability":"mutable","name":"balance","nameLocation":"1036:7:9","nodeType":"VariableDeclaration","scope":1551,"src":"1028:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1548,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1027:17:9"},"scope":1626,"src":"971:74:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1552,"nodeType":"StructuredDocumentation","src":"1051:131:9","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":1559,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1196:7:9","nodeType":"FunctionDefinition","parameters":{"id":1555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1554,"mutability":"mutable","name":"tokenId","nameLocation":"1212:7:9","nodeType":"VariableDeclaration","scope":1559,"src":"1204:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1553,"name":"uint256","nodeType":"ElementaryTypeName","src":"1204:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1203:17:9"},"returnParameters":{"id":1558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1557,"mutability":"mutable","name":"owner","nameLocation":"1252:5:9","nodeType":"VariableDeclaration","scope":1559,"src":"1244:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1556,"name":"address","nodeType":"ElementaryTypeName","src":"1244:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1243:15:9"},"scope":1626,"src":"1187:72:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1560,"nodeType":"StructuredDocumentation","src":"1265:565:9","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":1571,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1844:16:9","nodeType":"FunctionDefinition","parameters":{"id":1569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1562,"mutability":"mutable","name":"from","nameLocation":"1869:4:9","nodeType":"VariableDeclaration","scope":1571,"src":"1861:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1561,"name":"address","nodeType":"ElementaryTypeName","src":"1861:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1564,"mutability":"mutable","name":"to","nameLocation":"1883:2:9","nodeType":"VariableDeclaration","scope":1571,"src":"1875:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1563,"name":"address","nodeType":"ElementaryTypeName","src":"1875:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1566,"mutability":"mutable","name":"tokenId","nameLocation":"1895:7:9","nodeType":"VariableDeclaration","scope":1571,"src":"1887:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1565,"name":"uint256","nodeType":"ElementaryTypeName","src":"1887:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1568,"mutability":"mutable","name":"data","nameLocation":"1919:4:9","nodeType":"VariableDeclaration","scope":1571,"src":"1904:19:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1567,"name":"bytes","nodeType":"ElementaryTypeName","src":"1904:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1860:64:9"},"returnParameters":{"id":1570,"nodeType":"ParameterList","parameters":[],"src":"1933:0:9"},"scope":1626,"src":"1835:99:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1572,"nodeType":"StructuredDocumentation","src":"1940:706:9","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":1581,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2660:16:9","nodeType":"FunctionDefinition","parameters":{"id":1579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1574,"mutability":"mutable","name":"from","nameLocation":"2685:4:9","nodeType":"VariableDeclaration","scope":1581,"src":"2677:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1573,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1576,"mutability":"mutable","name":"to","nameLocation":"2699:2:9","nodeType":"VariableDeclaration","scope":1581,"src":"2691:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1575,"name":"address","nodeType":"ElementaryTypeName","src":"2691:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1578,"mutability":"mutable","name":"tokenId","nameLocation":"2711:7:9","nodeType":"VariableDeclaration","scope":1581,"src":"2703:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1577,"name":"uint256","nodeType":"ElementaryTypeName","src":"2703:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:9"},"returnParameters":{"id":1580,"nodeType":"ParameterList","parameters":[],"src":"2728:0:9"},"scope":1626,"src":"2651:78:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1582,"nodeType":"StructuredDocumentation","src":"2735:733:9","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1591,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3482:12:9","nodeType":"FunctionDefinition","parameters":{"id":1589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1584,"mutability":"mutable","name":"from","nameLocation":"3503:4:9","nodeType":"VariableDeclaration","scope":1591,"src":"3495:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1583,"name":"address","nodeType":"ElementaryTypeName","src":"3495:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1586,"mutability":"mutable","name":"to","nameLocation":"3517:2:9","nodeType":"VariableDeclaration","scope":1591,"src":"3509:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1585,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1588,"mutability":"mutable","name":"tokenId","nameLocation":"3529:7:9","nodeType":"VariableDeclaration","scope":1591,"src":"3521:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1587,"name":"uint256","nodeType":"ElementaryTypeName","src":"3521:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3494:43:9"},"returnParameters":{"id":1590,"nodeType":"ParameterList","parameters":[],"src":"3546:0:9"},"scope":1626,"src":"3473:74:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1592,"nodeType":"StructuredDocumentation","src":"3553:452:9","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1599,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4019:7:9","nodeType":"FunctionDefinition","parameters":{"id":1597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1594,"mutability":"mutable","name":"to","nameLocation":"4035:2:9","nodeType":"VariableDeclaration","scope":1599,"src":"4027:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1593,"name":"address","nodeType":"ElementaryTypeName","src":"4027:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1596,"mutability":"mutable","name":"tokenId","nameLocation":"4047:7:9","nodeType":"VariableDeclaration","scope":1599,"src":"4039:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1595,"name":"uint256","nodeType":"ElementaryTypeName","src":"4039:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4026:29:9"},"returnParameters":{"id":1598,"nodeType":"ParameterList","parameters":[],"src":"4064:0:9"},"scope":1626,"src":"4010:55:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1600,"nodeType":"StructuredDocumentation","src":"4071:315:9","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":1607,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4400:17:9","nodeType":"FunctionDefinition","parameters":{"id":1605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1602,"mutability":"mutable","name":"operator","nameLocation":"4426:8:9","nodeType":"VariableDeclaration","scope":1607,"src":"4418:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1601,"name":"address","nodeType":"ElementaryTypeName","src":"4418:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1604,"mutability":"mutable","name":"approved","nameLocation":"4441:8:9","nodeType":"VariableDeclaration","scope":1607,"src":"4436:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1603,"name":"bool","nodeType":"ElementaryTypeName","src":"4436:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4417:33:9"},"returnParameters":{"id":1606,"nodeType":"ParameterList","parameters":[],"src":"4459:0:9"},"scope":1626,"src":"4391:69:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1608,"nodeType":"StructuredDocumentation","src":"4466:139:9","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":1615,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4619:11:9","nodeType":"FunctionDefinition","parameters":{"id":1611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1610,"mutability":"mutable","name":"tokenId","nameLocation":"4639:7:9","nodeType":"VariableDeclaration","scope":1615,"src":"4631:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1609,"name":"uint256","nodeType":"ElementaryTypeName","src":"4631:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4630:17:9"},"returnParameters":{"id":1614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1613,"mutability":"mutable","name":"operator","nameLocation":"4679:8:9","nodeType":"VariableDeclaration","scope":1615,"src":"4671:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1612,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4670:18:9"},"scope":1626,"src":"4610:79:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1616,"nodeType":"StructuredDocumentation","src":"4695:138:9","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":1625,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4847:16:9","nodeType":"FunctionDefinition","parameters":{"id":1621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1618,"mutability":"mutable","name":"owner","nameLocation":"4872:5:9","nodeType":"VariableDeclaration","scope":1625,"src":"4864:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1617,"name":"address","nodeType":"ElementaryTypeName","src":"4864:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1620,"mutability":"mutable","name":"operator","nameLocation":"4887:8:9","nodeType":"VariableDeclaration","scope":1625,"src":"4879:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1619,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4863:33:9"},"returnParameters":{"id":1624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1623,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1625,"src":"4920:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1622,"name":"bool","nodeType":"ElementaryTypeName","src":"4920:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4919:6:9"},"scope":1626,"src":"4838:88:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1627,"src":"267:4661:9","usedErrors":[],"usedEvents":[1525,1534,1543]}],"src":"108:4821:9"},"id":9},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[1644]},"id":1645,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1628,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"116:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1629,"nodeType":"StructuredDocumentation","src":"142:154:10","text":" @title ERC-721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC-721 asset contracts."},"fullyImplemented":false,"id":1644,"linearizedBaseContracts":[1644],"name":"IERC721Receiver","nameLocation":"307:15:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1630,"nodeType":"StructuredDocumentation","src":"329:500:10","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":1643,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"843:16:10","nodeType":"FunctionDefinition","parameters":{"id":1639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1632,"mutability":"mutable","name":"operator","nameLocation":"877:8:10","nodeType":"VariableDeclaration","scope":1643,"src":"869:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1631,"name":"address","nodeType":"ElementaryTypeName","src":"869:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1634,"mutability":"mutable","name":"from","nameLocation":"903:4:10","nodeType":"VariableDeclaration","scope":1643,"src":"895:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1633,"name":"address","nodeType":"ElementaryTypeName","src":"895:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1636,"mutability":"mutable","name":"tokenId","nameLocation":"925:7:10","nodeType":"VariableDeclaration","scope":1643,"src":"917:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1635,"name":"uint256","nodeType":"ElementaryTypeName","src":"917:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1638,"mutability":"mutable","name":"data","nameLocation":"957:4:10","nodeType":"VariableDeclaration","scope":1643,"src":"942:19:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1637,"name":"bytes","nodeType":"ElementaryTypeName","src":"942:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"859:108:10"},"returnParameters":{"id":1642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1641,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1643,"src":"986:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1640,"name":"bytes4","nodeType":"ElementaryTypeName","src":"986:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"985:8:10"},"scope":1644,"src":"834:160:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1645,"src":"297:699:10","usedErrors":[],"usedEvents":[]}],"src":"116:881:10"},"id":10},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC721":[1626],"IERC721Metadata":[1672]},"id":1673,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1646,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"127:24:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":1648,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1673,"sourceUnit":1627,"src":"153:39:11","symbolAliases":[{"foreign":{"id":1647,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"161:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1650,"name":"IERC721","nameLocations":["357:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":1626,"src":"357:7:11"},"id":1651,"nodeType":"InheritanceSpecifier","src":"357:7:11"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1649,"nodeType":"StructuredDocumentation","src":"194:133:11","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":1672,"linearizedBaseContracts":[1672,1626,3269],"name":"IERC721Metadata","nameLocation":"338:15:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1652,"nodeType":"StructuredDocumentation","src":"371:58:11","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":1657,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"443:4:11","nodeType":"FunctionDefinition","parameters":{"id":1653,"nodeType":"ParameterList","parameters":[],"src":"447:2:11"},"returnParameters":{"id":1656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1655,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1657,"src":"473:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1654,"name":"string","nodeType":"ElementaryTypeName","src":"473:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"472:15:11"},"scope":1672,"src":"434:54:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1658,"nodeType":"StructuredDocumentation","src":"494:60:11","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":1663,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"568:6:11","nodeType":"FunctionDefinition","parameters":{"id":1659,"nodeType":"ParameterList","parameters":[],"src":"574:2:11"},"returnParameters":{"id":1662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1661,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1663,"src":"600:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1660,"name":"string","nodeType":"ElementaryTypeName","src":"600:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"599:15:11"},"scope":1672,"src":"559:56:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1664,"nodeType":"StructuredDocumentation","src":"621:90:11","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":1671,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"725:8:11","nodeType":"FunctionDefinition","parameters":{"id":1667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1666,"mutability":"mutable","name":"tokenId","nameLocation":"742:7:11","nodeType":"VariableDeclaration","scope":1671,"src":"734:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1665,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"733:17:11"},"returnParameters":{"id":1670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1669,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1671,"src":"774:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1668,"name":"string","nodeType":"ElementaryTypeName","src":"774:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"773:15:11"},"scope":1672,"src":"716:73:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1673,"src":"328:463:11","usedErrors":[],"usedEvents":[1525,1534,1543]}],"src":"127:665:11"},"id":11},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","exportedSymbols":{"ERC721Utils":[1749],"IERC721Errors":[505],"IERC721Receiver":[1644]},"id":1750,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1674,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:12"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"../IERC721Receiver.sol","id":1676,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1750,"sourceUnit":1645,"src":"144:55:12","symbolAliases":[{"foreign":{"id":1675,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"152:15:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":1678,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1750,"sourceUnit":553,"src":"200:69:12","symbolAliases":[{"foreign":{"id":1677,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"208:13:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC721Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":1679,"nodeType":"StructuredDocumentation","src":"271:159:12","text":" @dev Library that provide common ERC-721 utility functions.\n See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n _Available since v5.1._"},"fullyImplemented":true,"id":1749,"linearizedBaseContracts":[1749],"name":"ERC721Utils","nameLocation":"439:11:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":1747,"nodeType":"Block","src":"1159:758:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1693,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"1173:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1176:4:12","memberName":"code","nodeType":"MemberAccess","src":"1173:7:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1181:6:12","memberName":"length","nodeType":"MemberAccess","src":"1173:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1190:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1173:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1746,"nodeType":"IfStatement","src":"1169:742:12","trueBody":{"id":1745,"nodeType":"Block","src":"1193:718:12","statements":[{"clauses":[{"block":{"id":1723,"nodeType":"Block","src":"1303:214:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1710,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1708,"src":"1325:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1711,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"1335:15:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1644_$","typeString":"type(contract IERC721Receiver)"}},"id":1712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1351:16:12","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1643,"src":"1335:32:12","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":1713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1368:8:12","memberName":"selector","nodeType":"MemberAccess","src":"1335:41:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1325:51:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1722,"nodeType":"IfStatement","src":"1321:182:12","trueBody":{"id":1721,"nodeType":"Block","src":"1378:125:12","statements":[{"errorCall":{"arguments":[{"id":1718,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"1481:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1715,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"1445:13:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$505_$","typeString":"type(contract IERC721Errors)"}},"id":1717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1459:21:12","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":487,"src":"1445:35:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1445:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1720,"nodeType":"RevertStatement","src":"1438:46:12"}]}}]},"errorName":"","id":1724,"nodeType":"TryCatchClause","parameters":{"id":1709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1708,"mutability":"mutable","name":"retval","nameLocation":"1295:6:12","nodeType":"VariableDeclaration","scope":1724,"src":"1288:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1707,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1288:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1287:15:12"},"src":"1279:238:12"},{"block":{"id":1742,"nodeType":"Block","src":"1546:355:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1728,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"1568:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1575:6:12","memberName":"length","nodeType":"MemberAccess","src":"1568:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1585:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1568:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1740,"nodeType":"Block","src":"1736:151:12","statements":[{"AST":{"nodeType":"YulBlock","src":"1783:86:12","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1820:2:12","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"1824:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1816:3:12"},"nodeType":"YulFunctionCall","src":"1816:15:12"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"1839:6:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1833:5:12"},"nodeType":"YulFunctionCall","src":"1833:13:12"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1809:6:12"},"nodeType":"YulFunctionCall","src":"1809:38:12"},"nodeType":"YulExpressionStatement","src":"1809:38:12"}]},"evmVersion":"paris","externalReferences":[{"declaration":1726,"isOffset":false,"isSlot":false,"src":"1824:6:12","valueSize":1},{"declaration":1726,"isOffset":false,"isSlot":false,"src":"1839:6:12","valueSize":1}],"flags":["memory-safe"],"id":1739,"nodeType":"InlineAssembly","src":"1758:111:12"}]},"id":1741,"nodeType":"IfStatement","src":"1564:323:12","trueBody":{"id":1738,"nodeType":"Block","src":"1588:142:12","statements":[{"errorCall":{"arguments":[{"id":1735,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"1708:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1732,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"1672:13:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$505_$","typeString":"type(contract IERC721Errors)"}},"id":1734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1686:21:12","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":487,"src":"1672:35:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1672:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1737,"nodeType":"RevertStatement","src":"1665:46:12"}]}}]},"errorName":"","id":1743,"nodeType":"TryCatchClause","parameters":{"id":1727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1726,"mutability":"mutable","name":"reason","nameLocation":"1538:6:12","nodeType":"VariableDeclaration","scope":1743,"src":"1525:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1725,"name":"bytes","nodeType":"ElementaryTypeName","src":"1525:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1524:21:12"},"src":"1518:383:12"}],"externalCall":{"arguments":[{"id":1702,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"1248:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1703,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"1258:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1704,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1688,"src":"1264:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1705,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"1273:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1699,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"1227:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1698,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"1211:15:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1644_$","typeString":"type(contract IERC721Receiver)"}},"id":1700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1211:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$1644","typeString":"contract IERC721Receiver"}},"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1231:16:12","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1643,"src":"1211:36:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1211:67:12","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1744,"nodeType":"TryStatement","src":"1207:694:12"}]}}]},"documentation":{"id":1680,"nodeType":"StructuredDocumentation","src":"457:531:12","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC721Receiver-onERC721Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n the transfer."},"id":1748,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC721Received","nameLocation":"1002:21:12","nodeType":"FunctionDefinition","parameters":{"id":1691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1682,"mutability":"mutable","name":"operator","nameLocation":"1041:8:12","nodeType":"VariableDeclaration","scope":1748,"src":"1033:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1681,"name":"address","nodeType":"ElementaryTypeName","src":"1033:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1684,"mutability":"mutable","name":"from","nameLocation":"1067:4:12","nodeType":"VariableDeclaration","scope":1748,"src":"1059:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1683,"name":"address","nodeType":"ElementaryTypeName","src":"1059:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1686,"mutability":"mutable","name":"to","nameLocation":"1089:2:12","nodeType":"VariableDeclaration","scope":1748,"src":"1081:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1685,"name":"address","nodeType":"ElementaryTypeName","src":"1081:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1688,"mutability":"mutable","name":"tokenId","nameLocation":"1109:7:12","nodeType":"VariableDeclaration","scope":1748,"src":"1101:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1687,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1690,"mutability":"mutable","name":"data","nameLocation":"1139:4:12","nodeType":"VariableDeclaration","scope":1748,"src":"1126:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1689,"name":"bytes","nodeType":"ElementaryTypeName","src":"1126:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1023:126:12"},"returnParameters":{"id":1692,"nodeType":"ParameterList","parameters":[],"src":"1159:0:12"},"scope":1749,"src":"993:924:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1750,"src":"431:1488:12","usedErrors":[],"usedEvents":[]}],"src":"118:1802:12"},"id":12},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1779]},"id":1780,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1751,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:13"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1752,"nodeType":"StructuredDocumentation","src":"127:496:13","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1779,"linearizedBaseContracts":[1779],"name":"Context","nameLocation":"642:7:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":1760,"nodeType":"Block","src":"718:34:13","statements":[{"expression":{"expression":{"id":1757,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:13","memberName":"sender","nodeType":"MemberAccess","src":"735:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1756,"id":1759,"nodeType":"Return","src":"728:17:13"}]},"id":1761,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:13","nodeType":"FunctionDefinition","parameters":{"id":1753,"nodeType":"ParameterList","parameters":[],"src":"675:2:13"},"returnParameters":{"id":1756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1755,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1761,"src":"709:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1754,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:13"},"scope":1779,"src":"656:96:13","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1769,"nodeType":"Block","src":"825:32:13","statements":[{"expression":{"expression":{"id":1766,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:13","memberName":"data","nodeType":"MemberAccess","src":"842:8:13","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1765,"id":1768,"nodeType":"Return","src":"835:15:13"}]},"id":1770,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:13","nodeType":"FunctionDefinition","parameters":{"id":1762,"nodeType":"ParameterList","parameters":[],"src":"775:2:13"},"returnParameters":{"id":1765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1764,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1770,"src":"809:14:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1763,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:13"},"scope":1779,"src":"758:99:13","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1777,"nodeType":"Block","src":"935:25:13","statements":[{"expression":{"hexValue":"30","id":1775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1774,"id":1776,"nodeType":"Return","src":"945:8:13"}]},"id":1778,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:13","nodeType":"FunctionDefinition","parameters":{"id":1771,"nodeType":"ParameterList","parameters":[],"src":"892:2:13"},"returnParameters":{"id":1774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1773,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1778,"src":"926:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1772,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:13"},"scope":1779,"src":"863:97:13","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1780,"src":"624:338:13","usedErrors":[],"usedEvents":[]}],"src":"101:862:13"},"id":13},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[1831]},"id":1832,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1781,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":1782,"nodeType":"StructuredDocumentation","src":"125:489:14","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":1831,"linearizedBaseContracts":[1831],"name":"Panic","nameLocation":"665:5:14","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1783,"nodeType":"StructuredDocumentation","src":"677:36:14","text":"@dev generic / unspecified error"},"id":1786,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:14","nodeType":"VariableDeclaration","scope":1831,"src":"718:40:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1784,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":1785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":1787,"nodeType":"StructuredDocumentation","src":"764:37:14","text":"@dev used by the assert() builtin"},"id":1790,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:14","nodeType":"VariableDeclaration","scope":1831,"src":"806:39:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1788,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":1789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":1791,"nodeType":"StructuredDocumentation","src":"851:41:14","text":"@dev arithmetic underflow or overflow"},"id":1794,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:14","nodeType":"VariableDeclaration","scope":1831,"src":"897:47:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1792,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":1793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:14","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":1795,"nodeType":"StructuredDocumentation","src":"950:35:14","text":"@dev division or modulo by zero"},"id":1798,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:14","nodeType":"VariableDeclaration","scope":1831,"src":"990:49:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1796,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":1797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:14","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":1799,"nodeType":"StructuredDocumentation","src":"1045:30:14","text":"@dev enum conversion error"},"id":1802,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:14","nodeType":"VariableDeclaration","scope":1831,"src":"1080:54:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1800,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":1801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:14","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":1803,"nodeType":"StructuredDocumentation","src":"1140:36:14","text":"@dev invalid encoding in storage"},"id":1806,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:14","nodeType":"VariableDeclaration","scope":1831,"src":"1181:55:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1804,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":1805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:14","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":1807,"nodeType":"StructuredDocumentation","src":"1242:24:14","text":"@dev empty array pop"},"id":1810,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:14","nodeType":"VariableDeclaration","scope":1831,"src":"1271:48:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1808,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":1809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:14","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":1811,"nodeType":"StructuredDocumentation","src":"1325:35:14","text":"@dev array out of bounds access"},"id":1814,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:14","nodeType":"VariableDeclaration","scope":1831,"src":"1365:52:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1812,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":1813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:14","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":1815,"nodeType":"StructuredDocumentation","src":"1423:65:14","text":"@dev resource error (too large allocation or too large array)"},"id":1818,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:14","nodeType":"VariableDeclaration","scope":1831,"src":"1493:47:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1816,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":1817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:14","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":1819,"nodeType":"StructuredDocumentation","src":"1546:42:14","text":"@dev calling invalid internal function"},"id":1822,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:14","nodeType":"VariableDeclaration","scope":1831,"src":"1593:58:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1820,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":1821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:14","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":1829,"nodeType":"Block","src":"1819:151:14","statements":[{"AST":{"nodeType":"YulBlock","src":"1854:110:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1875:4:14","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1881:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1868:6:14"},"nodeType":"YulFunctionCall","src":"1868:24:14"},"nodeType":"YulExpressionStatement","src":"1868:24:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:4:14","type":"","value":"0x20"},{"name":"code","nodeType":"YulIdentifier","src":"1918:4:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1905:6:14"},"nodeType":"YulFunctionCall","src":"1905:18:14"},"nodeType":"YulExpressionStatement","src":"1905:18:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1943:4:14","type":"","value":"0x1c"},{"kind":"number","nodeType":"YulLiteral","src":"1949:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1936:6:14"},"nodeType":"YulFunctionCall","src":"1936:18:14"},"nodeType":"YulExpressionStatement","src":"1936:18:14"}]},"evmVersion":"paris","externalReferences":[{"declaration":1825,"isOffset":false,"isSlot":false,"src":"1918:4:14","valueSize":1}],"flags":["memory-safe"],"id":1828,"nodeType":"InlineAssembly","src":"1829:135:14"}]},"documentation":{"id":1823,"nodeType":"StructuredDocumentation","src":"1658:113:14","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":1830,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:14","nodeType":"FunctionDefinition","parameters":{"id":1826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1825,"mutability":"mutable","name":"code","nameLocation":"1799:4:14","nodeType":"VariableDeclaration","scope":1830,"src":"1791:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1824,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:14"},"returnParameters":{"id":1827,"nodeType":"ParameterList","parameters":[],"src":"1819:0:14"},"scope":1831,"src":"1776:194:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1832,"src":"657:1315:14","usedErrors":[],"usedEvents":[]}],"src":"99:1874:14"},"id":14},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[4890],"SafeCast":[6655],"SignedMath":[6799],"Strings":[3233]},"id":3234,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1833,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:15"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1835,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3234,"sourceUnit":4891,"src":"127:37:15","symbolAliases":[{"foreign":{"id":1834,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4890,"src":"135:4:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":1837,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3234,"sourceUnit":6656,"src":"165:45:15","symbolAliases":[{"foreign":{"id":1836,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6655,"src":"173:8:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1839,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3234,"sourceUnit":6800,"src":"211:49:15","symbolAliases":[{"foreign":{"id":1838,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6799,"src":"219:10:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1840,"nodeType":"StructuredDocumentation","src":"262:34:15","text":" @dev String operations."},"fullyImplemented":true,"id":3233,"linearizedBaseContracts":[3233],"name":"Strings","nameLocation":"305:7:15","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1842,"libraryName":{"id":1841,"name":"SafeCast","nameLocations":["325:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":6655,"src":"325:8:15"},"nodeType":"UsingForDirective","src":"319:21:15"},{"constant":true,"id":1845,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:15","nodeType":"VariableDeclaration","scope":3233,"src":"346:56:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1843,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:15","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1848,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:15","nodeType":"VariableDeclaration","scope":3233,"src":"408:42:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1846,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:15","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":1884,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:15","nodeType":"VariableDeclaration","scope":3233,"src":"456:302:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1849,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":1883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":1878,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":1873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":1868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":1863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":1858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":1852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":1851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:15","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":1853,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:15","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":1856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":1855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:15","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:15","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":1857,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:15","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:15","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":1861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":1860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:15","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":1862,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:15","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:15","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":1866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":1865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:15","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:15","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":1867,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:15","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:15","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":1871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":1870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:15","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:15","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":1872,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:15","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:15","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":1876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":1875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:15","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:15","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":1877,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:15","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:15","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":1881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":1880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:15","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:15","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":1882,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:15","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:15","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":1885,"nodeType":"StructuredDocumentation","src":"778:81:15","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":1891,"name":"StringsInsufficientHexLength","nameLocation":"870:28:15","nodeType":"ErrorDefinition","parameters":{"id":1890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1887,"mutability":"mutable","name":"value","nameLocation":"907:5:15","nodeType":"VariableDeclaration","scope":1891,"src":"899:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1886,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1889,"mutability":"mutable","name":"length","nameLocation":"922:6:15","nodeType":"VariableDeclaration","scope":1891,"src":"914:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1888,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:15"},"src":"864:66:15"},{"documentation":{"id":1892,"nodeType":"StructuredDocumentation","src":"936:108:15","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":1894,"name":"StringsInvalidChar","nameLocation":"1055:18:15","nodeType":"ErrorDefinition","parameters":{"id":1893,"nodeType":"ParameterList","parameters":[],"src":"1073:2:15"},"src":"1049:27:15"},{"documentation":{"id":1895,"nodeType":"StructuredDocumentation","src":"1082:84:15","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":1897,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:15","nodeType":"ErrorDefinition","parameters":{"id":1896,"nodeType":"ParameterList","parameters":[],"src":"1204:2:15"},"src":"1171:36:15"},{"body":{"id":1944,"nodeType":"Block","src":"1379:561:15","statements":[{"id":1943,"nodeType":"UncheckedBlock","src":"1389:545:15","statements":[{"assignments":[1906],"declarations":[{"constant":false,"id":1906,"mutability":"mutable","name":"length","nameLocation":"1421:6:15","nodeType":"VariableDeclaration","scope":1943,"src":"1413:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1905,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1913,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1909,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"1441:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1907,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4890,"src":"1430:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4890_$","typeString":"type(library Math)"}},"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:15","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":4722,"src":"1430:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:15"},{"assignments":[1915],"declarations":[{"constant":false,"id":1915,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:15","nodeType":"VariableDeclaration","scope":1943,"src":"1465:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1914,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1920,"initialValue":{"arguments":[{"id":1918,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"1499:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1916,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:15"},{"assignments":[1922],"declarations":[{"constant":false,"id":1922,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:15","nodeType":"VariableDeclaration","scope":1943,"src":"1520:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1921,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1923,"nodeType":"VariableDeclarationStatement","src":"1520:11:15"},{"AST":{"nodeType":"YulBlock","src":"1570:67:15","statements":[{"nodeType":"YulAssignment","src":"1588:35:15","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"1599:6:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1611:2:15","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"1615:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1607:3:15"},"nodeType":"YulFunctionCall","src":"1607:15:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1595:3:15"},"nodeType":"YulFunctionCall","src":"1595:28:15"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"1588:3:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1915,"isOffset":false,"isSlot":false,"src":"1599:6:15","valueSize":1},{"declaration":1906,"isOffset":false,"isSlot":false,"src":"1615:6:15","valueSize":1},{"declaration":1922,"isOffset":false,"isSlot":false,"src":"1588:3:15","valueSize":1}],"flags":["memory-safe"],"id":1924,"nodeType":"InlineAssembly","src":"1545:92:15"},{"body":{"id":1939,"nodeType":"Block","src":"1663:234:15","statements":[{"expression":{"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1681:5:15","subExpression":{"id":1926,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1922,"src":"1681:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1928,"nodeType":"ExpressionStatement","src":"1681:5:15"},{"AST":{"nodeType":"YulBlock","src":"1729:86:15","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1759:3:15"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1773:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"1780:2:15","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1769:3:15"},"nodeType":"YulFunctionCall","src":"1769:14:15"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1785:10:15"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1764:4:15"},"nodeType":"YulFunctionCall","src":"1764:32:15"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1751:7:15"},"nodeType":"YulFunctionCall","src":"1751:46:15"},"nodeType":"YulExpressionStatement","src":"1751:46:15"}]},"evmVersion":"paris","externalReferences":[{"declaration":1845,"isOffset":false,"isSlot":false,"src":"1785:10:15","valueSize":1},{"declaration":1922,"isOffset":false,"isSlot":false,"src":"1759:3:15","valueSize":1},{"declaration":1900,"isOffset":false,"isSlot":false,"src":"1773:5:15","valueSize":1}],"flags":["memory-safe"],"id":1929,"nodeType":"InlineAssembly","src":"1704:111:15"},{"expression":{"id":1932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1930,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"1832:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1841:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1832:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1933,"nodeType":"ExpressionStatement","src":"1832:11:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1934,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"1865:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1865:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1938,"nodeType":"IfStatement","src":"1861:21:15","trueBody":{"id":1937,"nodeType":"Break","src":"1877:5:15"}}]},"condition":{"hexValue":"74727565","id":1925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1657:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1940,"nodeType":"WhileStatement","src":"1650:247:15"},{"expression":{"id":1941,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"1917:6:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1904,"id":1942,"nodeType":"Return","src":"1910:13:15"}]}]},"documentation":{"id":1898,"nodeType":"StructuredDocumentation","src":"1213:90:15","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1945,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:15","nodeType":"FunctionDefinition","parameters":{"id":1901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1900,"mutability":"mutable","name":"value","nameLocation":"1334:5:15","nodeType":"VariableDeclaration","scope":1945,"src":"1326:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1899,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:15"},"returnParameters":{"id":1904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1903,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1945,"src":"1364:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1902,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:15"},"scope":3233,"src":"1308:632:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1970,"nodeType":"Block","src":"2116:92:15","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1956,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1948,"src":"2147:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2155:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2147:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2165:2:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2147:20:15","trueExpression":{"hexValue":"2d","id":1959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2159:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1965,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1948,"src":"2193:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1963,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6799,"src":"2178:10:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$6799_$","typeString":"type(library SignedMath)"}},"id":1964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2189:3:15","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":6798,"src":"2178:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2178:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1962,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"2169:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2169:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2133:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1953,"name":"string","nodeType":"ElementaryTypeName","src":"2133:6:15","typeDescriptions":{}}},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2140:6:15","memberName":"concat","nodeType":"MemberAccess","src":"2133:13:15","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2133:68:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1952,"id":1969,"nodeType":"Return","src":"2126:75:15"}]},"documentation":{"id":1946,"nodeType":"StructuredDocumentation","src":"1946:89:15","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1971,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2049:14:15","nodeType":"FunctionDefinition","parameters":{"id":1949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1948,"mutability":"mutable","name":"value","nameLocation":"2071:5:15","nodeType":"VariableDeclaration","scope":1971,"src":"2064:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1947,"name":"int256","nodeType":"ElementaryTypeName","src":"2064:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2063:14:15"},"returnParameters":{"id":1952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1951,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1971,"src":"2101:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1950,"name":"string","nodeType":"ElementaryTypeName","src":"2101:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2100:15:15"},"scope":3233,"src":"2040:168:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1990,"nodeType":"Block","src":"2387:100:15","statements":[{"id":1989,"nodeType":"UncheckedBlock","src":"2397:84:15","statements":[{"expression":{"arguments":[{"id":1980,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1974,"src":"2440:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1974,"src":"2459:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1981,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4890,"src":"2447:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4890_$","typeString":"type(library Math)"}},"id":1982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2452:6:15","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":4833,"src":"2447:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2447:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2468:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2447:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1979,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1991,2074,2094],"referencedDeclaration":2074,"src":"2428:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2428:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1978,"id":1988,"nodeType":"Return","src":"2421:49:15"}]}]},"documentation":{"id":1972,"nodeType":"StructuredDocumentation","src":"2214:94:15","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1991,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2322:11:15","nodeType":"FunctionDefinition","parameters":{"id":1975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1974,"mutability":"mutable","name":"value","nameLocation":"2342:5:15","nodeType":"VariableDeclaration","scope":1991,"src":"2334:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1973,"name":"uint256","nodeType":"ElementaryTypeName","src":"2334:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2333:15:15"},"returnParameters":{"id":1978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1977,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1991,"src":"2372:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1976,"name":"string","nodeType":"ElementaryTypeName","src":"2372:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2371:15:15"},"scope":3233,"src":"2313:174:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2073,"nodeType":"Block","src":"2700:435:15","statements":[{"assignments":[2002],"declarations":[{"constant":false,"id":2002,"mutability":"mutable","name":"localValue","nameLocation":"2718:10:15","nodeType":"VariableDeclaration","scope":2073,"src":"2710:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2001,"name":"uint256","nodeType":"ElementaryTypeName","src":"2710:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2004,"initialValue":{"id":2003,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1994,"src":"2731:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2710:26:15"},{"assignments":[2006],"declarations":[{"constant":false,"id":2006,"mutability":"mutable","name":"buffer","nameLocation":"2759:6:15","nodeType":"VariableDeclaration","scope":2073,"src":"2746:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2005,"name":"bytes","nodeType":"ElementaryTypeName","src":"2746:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2015,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2778:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2010,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1996,"src":"2782:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2778:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2791:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2778:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2008,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2768:9:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2007,"name":"bytes","nodeType":"ElementaryTypeName","src":"2772:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2768:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2746:47:15"},{"expression":{"id":2020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2016,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"2803:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2018,"indexExpression":{"hexValue":"30","id":2017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2810:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2803:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2815:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2803:15:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2021,"nodeType":"ExpressionStatement","src":"2803:15:15"},{"expression":{"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2022,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"2828:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2024,"indexExpression":{"hexValue":"31","id":2023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2835:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2828:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2840:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2828:15:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2027,"nodeType":"ExpressionStatement","src":"2828:15:15"},{"body":{"id":2056,"nodeType":"Block","src":"2898:95:15","statements":[{"expression":{"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2042,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"2912:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2044,"indexExpression":{"id":2043,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"2919:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2912:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2045,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"2924:10:15","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2049,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2046,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"2935:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2948:3:15","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2935:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2924:28:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2912:40:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2051,"nodeType":"ExpressionStatement","src":"2912:40:15"},{"expression":{"id":2054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2052,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"2966:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2981:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2966:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2055,"nodeType":"ExpressionStatement","src":"2966:16:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2036,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"2886:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2890:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2886:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2057,"initializationExpression":{"assignments":[2029],"declarations":[{"constant":false,"id":2029,"mutability":"mutable","name":"i","nameLocation":"2866:1:15","nodeType":"VariableDeclaration","scope":2057,"src":"2858:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2028,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2035,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2870:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2031,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1996,"src":"2874:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2870:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2883:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2870:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2858:26:15"},"loopExpression":{"expression":{"id":2040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2893:3:15","subExpression":{"id":2039,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"2895:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2041,"nodeType":"ExpressionStatement","src":"2893:3:15"},"nodeType":"ForStatement","src":"2853:140:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2058,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"3006:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3020:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3006:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2067,"nodeType":"IfStatement","src":"3002:96:15","trueBody":{"id":2066,"nodeType":"Block","src":"3023:75:15","statements":[{"errorCall":{"arguments":[{"id":2062,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1994,"src":"3073:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2063,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1996,"src":"3080:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2061,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"3044:28:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3044:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2065,"nodeType":"RevertStatement","src":"3037:50:15"}]}},{"expression":{"arguments":[{"id":2070,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"3121:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3114:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2068,"name":"string","nodeType":"ElementaryTypeName","src":"3114:6:15","typeDescriptions":{}}},"id":2071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3114:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2000,"id":2072,"nodeType":"Return","src":"3107:21:15"}]},"documentation":{"id":1992,"nodeType":"StructuredDocumentation","src":"2493:112:15","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2074,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2619:11:15","nodeType":"FunctionDefinition","parameters":{"id":1997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1994,"mutability":"mutable","name":"value","nameLocation":"2639:5:15","nodeType":"VariableDeclaration","scope":2074,"src":"2631:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1993,"name":"uint256","nodeType":"ElementaryTypeName","src":"2631:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1996,"mutability":"mutable","name":"length","nameLocation":"2654:6:15","nodeType":"VariableDeclaration","scope":2074,"src":"2646:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1995,"name":"uint256","nodeType":"ElementaryTypeName","src":"2646:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2630:31:15"},"returnParameters":{"id":2000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1999,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2074,"src":"2685:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1998,"name":"string","nodeType":"ElementaryTypeName","src":"2685:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2684:15:15"},"scope":3233,"src":"2610:525:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2093,"nodeType":"Block","src":"3367:75:15","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2087,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"3412:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3404:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2085,"name":"uint160","nodeType":"ElementaryTypeName","src":"3404:7:15","typeDescriptions":{}}},"id":2088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3404:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2084,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3396:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2083,"name":"uint256","nodeType":"ElementaryTypeName","src":"3396:7:15","typeDescriptions":{}}},"id":2089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3396:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2090,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"3420:14:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2082,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1991,2074,2094],"referencedDeclaration":2074,"src":"3384:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3384:51:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2081,"id":2092,"nodeType":"Return","src":"3377:58:15"}]},"documentation":{"id":2075,"nodeType":"StructuredDocumentation","src":"3141:148:15","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":2094,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3303:11:15","nodeType":"FunctionDefinition","parameters":{"id":2078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2077,"mutability":"mutable","name":"addr","nameLocation":"3323:4:15","nodeType":"VariableDeclaration","scope":2094,"src":"3315:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2076,"name":"address","nodeType":"ElementaryTypeName","src":"3315:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3314:14:15"},"returnParameters":{"id":2081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2080,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2094,"src":"3352:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2079,"name":"string","nodeType":"ElementaryTypeName","src":"3352:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3351:15:15"},"scope":3233,"src":"3294:148:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2158,"nodeType":"Block","src":"3699:642:15","statements":[{"assignments":[2103],"declarations":[{"constant":false,"id":2103,"mutability":"mutable","name":"buffer","nameLocation":"3722:6:15","nodeType":"VariableDeclaration","scope":2158,"src":"3709:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2102,"name":"bytes","nodeType":"ElementaryTypeName","src":"3709:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2110,"initialValue":{"arguments":[{"arguments":[{"id":2107,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"3749:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2106,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1991,2074,2094],"referencedDeclaration":2094,"src":"3737:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":2108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3737:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3731:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2104,"name":"bytes","nodeType":"ElementaryTypeName","src":"3731:5:15","typeDescriptions":{}}},"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3731:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3709:46:15"},{"assignments":[2112],"declarations":[{"constant":false,"id":2112,"mutability":"mutable","name":"hashValue","nameLocation":"3848:9:15","nodeType":"VariableDeclaration","scope":2158,"src":"3840:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2111,"name":"uint256","nodeType":"ElementaryTypeName","src":"3840:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2113,"nodeType":"VariableDeclarationStatement","src":"3840:17:15"},{"AST":{"nodeType":"YulBlock","src":"3892:78:15","statements":[{"nodeType":"YulAssignment","src":"3906:54:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3923:2:15","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"3941:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"3949:4:15","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3937:3:15"},"nodeType":"YulFunctionCall","src":"3937:17:15"},{"kind":"number","nodeType":"YulLiteral","src":"3956:2:15","type":"","value":"40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3927:9:15"},"nodeType":"YulFunctionCall","src":"3927:32:15"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3919:3:15"},"nodeType":"YulFunctionCall","src":"3919:41:15"},"variableNames":[{"name":"hashValue","nodeType":"YulIdentifier","src":"3906:9:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2103,"isOffset":false,"isSlot":false,"src":"3941:6:15","valueSize":1},{"declaration":2112,"isOffset":false,"isSlot":false,"src":"3906:9:15","valueSize":1}],"flags":["memory-safe"],"id":2114,"nodeType":"InlineAssembly","src":"3867:103:15"},{"body":{"id":2151,"nodeType":"Block","src":"4013:291:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2125,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"4119:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4131:3:15","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4119:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":2128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4137:1:15","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4119:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":2132,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"4148:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2134,"indexExpression":{"id":2133,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"4155:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4148:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4142:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2130,"name":"uint8","nodeType":"ElementaryTypeName","src":"4142:5:15","typeDescriptions":{}}},"id":2135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4142:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4161:2:15","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4142:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4119:44:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2146,"nodeType":"IfStatement","src":"4115:150:15","trueBody":{"id":2145,"nodeType":"Block","src":"4165:100:15","statements":[{"expression":{"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2139,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"4233:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2141,"indexExpression":{"id":2140,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"4240:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4233:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":2142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4246:4:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4233:17:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2144,"nodeType":"ExpressionStatement","src":"4233:17:15"}]}},{"expression":{"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2147,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"4278:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4292:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4278:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2150,"nodeType":"ExpressionStatement","src":"4278:15:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2119,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"4001:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4005:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4001:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2152,"initializationExpression":{"assignments":[2116],"declarations":[{"constant":false,"id":2116,"mutability":"mutable","name":"i","nameLocation":"3993:1:15","nodeType":"VariableDeclaration","scope":2152,"src":"3985:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2115,"name":"uint256","nodeType":"ElementaryTypeName","src":"3985:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2118,"initialValue":{"hexValue":"3431","id":2117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3997:2:15","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3985:14:15"},"loopExpression":{"expression":{"id":2123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4008:3:15","subExpression":{"id":2122,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"4010:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2124,"nodeType":"ExpressionStatement","src":"4008:3:15"},"nodeType":"ForStatement","src":"3980:324:15"},{"expression":{"arguments":[{"id":2155,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"4327:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4320:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2153,"name":"string","nodeType":"ElementaryTypeName","src":"4320:6:15","typeDescriptions":{}}},"id":2156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4320:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2101,"id":2157,"nodeType":"Return","src":"4313:21:15"}]},"documentation":{"id":2095,"nodeType":"StructuredDocumentation","src":"3448:165:15","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":2159,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3627:19:15","nodeType":"FunctionDefinition","parameters":{"id":2098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2097,"mutability":"mutable","name":"addr","nameLocation":"3655:4:15","nodeType":"VariableDeclaration","scope":2159,"src":"3647:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2096,"name":"address","nodeType":"ElementaryTypeName","src":"3647:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3646:14:15"},"returnParameters":{"id":2101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2100,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2159,"src":"3684:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2099,"name":"string","nodeType":"ElementaryTypeName","src":"3684:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3683:15:15"},"scope":3233,"src":"3618:723:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2195,"nodeType":"Block","src":"4496:104:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2171,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"4519:1:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4513:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2169,"name":"bytes","nodeType":"ElementaryTypeName","src":"4513:5:15","typeDescriptions":{}}},"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4513:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4522:6:15","memberName":"length","nodeType":"MemberAccess","src":"4513:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2176,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"4538:1:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4532:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2174,"name":"bytes","nodeType":"ElementaryTypeName","src":"4532:5:15","typeDescriptions":{}}},"id":2177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4532:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4541:6:15","memberName":"length","nodeType":"MemberAccess","src":"4532:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4513:34:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2183,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"4567:1:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4561:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2181,"name":"bytes","nodeType":"ElementaryTypeName","src":"4561:5:15","typeDescriptions":{}}},"id":2184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4561:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2180,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4551:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4551:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2189,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"4590:1:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4584:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2187,"name":"bytes","nodeType":"ElementaryTypeName","src":"4584:5:15","typeDescriptions":{}}},"id":2190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4584:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2186,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4574:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4574:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4551:42:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4513:80:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2168,"id":2194,"nodeType":"Return","src":"4506:87:15"}]},"documentation":{"id":2160,"nodeType":"StructuredDocumentation","src":"4347:66:15","text":" @dev Returns true if the two strings are equal."},"id":2196,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4427:5:15","nodeType":"FunctionDefinition","parameters":{"id":2165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2162,"mutability":"mutable","name":"a","nameLocation":"4447:1:15","nodeType":"VariableDeclaration","scope":2196,"src":"4433:15:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2161,"name":"string","nodeType":"ElementaryTypeName","src":"4433:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2164,"mutability":"mutable","name":"b","nameLocation":"4464:1:15","nodeType":"VariableDeclaration","scope":2196,"src":"4450:15:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2163,"name":"string","nodeType":"ElementaryTypeName","src":"4450:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4432:34:15"},"returnParameters":{"id":2168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2167,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2196,"src":"4490:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2166,"name":"bool","nodeType":"ElementaryTypeName","src":"4490:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4489:6:15"},"scope":3233,"src":"4418:182:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2214,"nodeType":"Block","src":"4897:64:15","statements":[{"expression":{"arguments":[{"id":2205,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2199,"src":"4924:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4931:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2209,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2199,"src":"4940:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4934:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2207,"name":"bytes","nodeType":"ElementaryTypeName","src":"4934:5:15","typeDescriptions":{}}},"id":2210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4934:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4947:6:15","memberName":"length","nodeType":"MemberAccess","src":"4934:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2204,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[2215,2246],"referencedDeclaration":2246,"src":"4914:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4914:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2203,"id":2213,"nodeType":"Return","src":"4907:47:15"}]},"documentation":{"id":2197,"nodeType":"StructuredDocumentation","src":"4606:214:15","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2215,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4834:9:15","nodeType":"FunctionDefinition","parameters":{"id":2200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2199,"mutability":"mutable","name":"input","nameLocation":"4858:5:15","nodeType":"VariableDeclaration","scope":2215,"src":"4844:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2198,"name":"string","nodeType":"ElementaryTypeName","src":"4844:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4843:21:15"},"returnParameters":{"id":2203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2202,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2215,"src":"4888:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2201,"name":"uint256","nodeType":"ElementaryTypeName","src":"4888:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4887:9:15"},"scope":3233,"src":"4825:136:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2245,"nodeType":"Block","src":"5366:153:15","statements":[{"assignments":[2228,2230],"declarations":[{"constant":false,"id":2228,"mutability":"mutable","name":"success","nameLocation":"5382:7:15","nodeType":"VariableDeclaration","scope":2245,"src":"5377:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2227,"name":"bool","nodeType":"ElementaryTypeName","src":"5377:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2230,"mutability":"mutable","name":"value","nameLocation":"5399:5:15","nodeType":"VariableDeclaration","scope":2245,"src":"5391:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2229,"name":"uint256","nodeType":"ElementaryTypeName","src":"5391:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2236,"initialValue":{"arguments":[{"id":2232,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2218,"src":"5421:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2233,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2220,"src":"5428:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2234,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"5435:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2231,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2267,2304],"referencedDeclaration":2304,"src":"5408:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5408:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5376:63:15"},{"condition":{"id":2238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5453:8:15","subExpression":{"id":2237,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"5454:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2242,"nodeType":"IfStatement","src":"5449:41:15","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2239,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"5470:18:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5470:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2241,"nodeType":"RevertStatement","src":"5463:27:15"}},{"expression":{"id":2243,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"5507:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2226,"id":2244,"nodeType":"Return","src":"5500:12:15"}]},"documentation":{"id":2216,"nodeType":"StructuredDocumentation","src":"4967:294:15","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2246,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5275:9:15","nodeType":"FunctionDefinition","parameters":{"id":2223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2218,"mutability":"mutable","name":"input","nameLocation":"5299:5:15","nodeType":"VariableDeclaration","scope":2246,"src":"5285:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2217,"name":"string","nodeType":"ElementaryTypeName","src":"5285:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2220,"mutability":"mutable","name":"begin","nameLocation":"5314:5:15","nodeType":"VariableDeclaration","scope":2246,"src":"5306:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2219,"name":"uint256","nodeType":"ElementaryTypeName","src":"5306:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2222,"mutability":"mutable","name":"end","nameLocation":"5329:3:15","nodeType":"VariableDeclaration","scope":2246,"src":"5321:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2221,"name":"uint256","nodeType":"ElementaryTypeName","src":"5321:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5284:49:15"},"returnParameters":{"id":2226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2246,"src":"5357:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2224,"name":"uint256","nodeType":"ElementaryTypeName","src":"5357:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5356:9:15"},"scope":3233,"src":"5266:253:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2266,"nodeType":"Block","src":"5840:83:15","statements":[{"expression":{"arguments":[{"id":2257,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2249,"src":"5886:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5893:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2261,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2249,"src":"5902:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5896:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2259,"name":"bytes","nodeType":"ElementaryTypeName","src":"5896:5:15","typeDescriptions":{}}},"id":2262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5896:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5909:6:15","memberName":"length","nodeType":"MemberAccess","src":"5896:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2256,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2374,"src":"5857:28:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5857:59:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2255,"id":2265,"nodeType":"Return","src":"5850:66:15"}]},"documentation":{"id":2247,"nodeType":"StructuredDocumentation","src":"5525:215:15","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2267,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5754:12:15","nodeType":"FunctionDefinition","parameters":{"id":2250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2249,"mutability":"mutable","name":"input","nameLocation":"5781:5:15","nodeType":"VariableDeclaration","scope":2267,"src":"5767:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2248,"name":"string","nodeType":"ElementaryTypeName","src":"5767:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5766:21:15"},"returnParameters":{"id":2255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2252,"mutability":"mutable","name":"success","nameLocation":"5816:7:15","nodeType":"VariableDeclaration","scope":2267,"src":"5811:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2251,"name":"bool","nodeType":"ElementaryTypeName","src":"5811:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2254,"mutability":"mutable","name":"value","nameLocation":"5833:5:15","nodeType":"VariableDeclaration","scope":2267,"src":"5825:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2253,"name":"uint256","nodeType":"ElementaryTypeName","src":"5825:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5810:29:15"},"scope":3233,"src":"5745:178:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2303,"nodeType":"Block","src":"6325:144:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2281,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2274,"src":"6339:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2284,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"6351:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6345:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2282,"name":"bytes","nodeType":"ElementaryTypeName","src":"6345:5:15","typeDescriptions":{}}},"id":2285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6345:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6358:6:15","memberName":"length","nodeType":"MemberAccess","src":"6345:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6339:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2288,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"6368:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2289,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2274,"src":"6376:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6368:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6339:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2296,"nodeType":"IfStatement","src":"6335:63:15","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6389:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6396:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2294,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6388:10:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2280,"id":2295,"nodeType":"Return","src":"6381:17:15"}},{"expression":{"arguments":[{"id":2298,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"6444:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2299,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"6451:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2300,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2274,"src":"6458:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2297,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2374,"src":"6415:28:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6415:47:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2280,"id":2302,"nodeType":"Return","src":"6408:54:15"}]},"documentation":{"id":2268,"nodeType":"StructuredDocumentation","src":"5929:238:15","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2304,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6181:12:15","nodeType":"FunctionDefinition","parameters":{"id":2275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2270,"mutability":"mutable","name":"input","nameLocation":"6217:5:15","nodeType":"VariableDeclaration","scope":2304,"src":"6203:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2269,"name":"string","nodeType":"ElementaryTypeName","src":"6203:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2272,"mutability":"mutable","name":"begin","nameLocation":"6240:5:15","nodeType":"VariableDeclaration","scope":2304,"src":"6232:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2271,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2274,"mutability":"mutable","name":"end","nameLocation":"6263:3:15","nodeType":"VariableDeclaration","scope":2304,"src":"6255:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2273,"name":"uint256","nodeType":"ElementaryTypeName","src":"6255:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6193:79:15"},"returnParameters":{"id":2280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2277,"mutability":"mutable","name":"success","nameLocation":"6301:7:15","nodeType":"VariableDeclaration","scope":2304,"src":"6296:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2276,"name":"bool","nodeType":"ElementaryTypeName","src":"6296:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2279,"mutability":"mutable","name":"value","nameLocation":"6318:5:15","nodeType":"VariableDeclaration","scope":2304,"src":"6310:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2278,"name":"uint256","nodeType":"ElementaryTypeName","src":"6310:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6295:29:15"},"scope":3233,"src":"6172:297:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2373,"nodeType":"Block","src":"6872:347:15","statements":[{"assignments":[2319],"declarations":[{"constant":false,"id":2319,"mutability":"mutable","name":"buffer","nameLocation":"6895:6:15","nodeType":"VariableDeclaration","scope":2373,"src":"6882:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2318,"name":"bytes","nodeType":"ElementaryTypeName","src":"6882:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2324,"initialValue":{"arguments":[{"id":2322,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"6910:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6904:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2320,"name":"bytes","nodeType":"ElementaryTypeName","src":"6904:5:15","typeDescriptions":{}}},"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6904:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6882:34:15"},{"assignments":[2326],"declarations":[{"constant":false,"id":2326,"mutability":"mutable","name":"result","nameLocation":"6935:6:15","nodeType":"VariableDeclaration","scope":2373,"src":"6927:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2325,"name":"uint256","nodeType":"ElementaryTypeName","src":"6927:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2328,"initialValue":{"hexValue":"30","id":2327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6944:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6927:18:15"},{"body":{"id":2367,"nodeType":"Block","src":"6993:189:15","statements":[{"assignments":[2340],"declarations":[{"constant":false,"id":2340,"mutability":"mutable","name":"chr","nameLocation":"7013:3:15","nodeType":"VariableDeclaration","scope":2367,"src":"7007:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2339,"name":"uint8","nodeType":"ElementaryTypeName","src":"7007:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2350,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2345,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"7062:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2346,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2330,"src":"7070:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2344,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3232,"src":"7039:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7039:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7032:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2342,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7032:6:15","typeDescriptions":{}}},"id":2348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7032:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2341,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"7019:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7019:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7007:67:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2351,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"7092:3:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":2352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7098:1:15","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7092:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2358,"nodeType":"IfStatement","src":"7088:30:15","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7109:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7116:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2356,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7108:10:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2317,"id":2357,"nodeType":"Return","src":"7101:17:15"}},{"expression":{"id":2361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2359,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"7132:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":2360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7142:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7132:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2362,"nodeType":"ExpressionStatement","src":"7132:12:15"},{"expression":{"id":2365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2363,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"7158:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2364,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"7168:3:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7158:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2366,"nodeType":"ExpressionStatement","src":"7158:13:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2333,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2330,"src":"6979:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2334,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"6983:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6979:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2368,"initializationExpression":{"assignments":[2330],"declarations":[{"constant":false,"id":2330,"mutability":"mutable","name":"i","nameLocation":"6968:1:15","nodeType":"VariableDeclaration","scope":2368,"src":"6960:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2329,"name":"uint256","nodeType":"ElementaryTypeName","src":"6960:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2332,"initialValue":{"id":2331,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"6972:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6960:17:15"},"loopExpression":{"expression":{"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6988:3:15","subExpression":{"id":2336,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2330,"src":"6990:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2338,"nodeType":"ExpressionStatement","src":"6988:3:15"},"nodeType":"ForStatement","src":"6955:227:15"},{"expression":{"components":[{"hexValue":"74727565","id":2369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7199:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2370,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"7205:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2371,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7198:14:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2317,"id":2372,"nodeType":"Return","src":"7191:21:15"}]},"documentation":{"id":2305,"nodeType":"StructuredDocumentation","src":"6475:224:15","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2374,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6713:28:15","nodeType":"FunctionDefinition","parameters":{"id":2312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2307,"mutability":"mutable","name":"input","nameLocation":"6765:5:15","nodeType":"VariableDeclaration","scope":2374,"src":"6751:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2306,"name":"string","nodeType":"ElementaryTypeName","src":"6751:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2309,"mutability":"mutable","name":"begin","nameLocation":"6788:5:15","nodeType":"VariableDeclaration","scope":2374,"src":"6780:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2308,"name":"uint256","nodeType":"ElementaryTypeName","src":"6780:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2311,"mutability":"mutable","name":"end","nameLocation":"6811:3:15","nodeType":"VariableDeclaration","scope":2374,"src":"6803:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2310,"name":"uint256","nodeType":"ElementaryTypeName","src":"6803:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6741:79:15"},"returnParameters":{"id":2317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2314,"mutability":"mutable","name":"success","nameLocation":"6848:7:15","nodeType":"VariableDeclaration","scope":2374,"src":"6843:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2313,"name":"bool","nodeType":"ElementaryTypeName","src":"6843:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2316,"mutability":"mutable","name":"value","nameLocation":"6865:5:15","nodeType":"VariableDeclaration","scope":2374,"src":"6857:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2315,"name":"uint256","nodeType":"ElementaryTypeName","src":"6857:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6842:29:15"},"scope":3233,"src":"6704:515:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2392,"nodeType":"Block","src":"7516:63:15","statements":[{"expression":{"arguments":[{"id":2383,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2377,"src":"7542:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7549:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2387,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2377,"src":"7558:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7552:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2385,"name":"bytes","nodeType":"ElementaryTypeName","src":"7552:5:15","typeDescriptions":{}}},"id":2388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7552:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7565:6:15","memberName":"length","nodeType":"MemberAccess","src":"7552:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2382,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[2393,2424],"referencedDeclaration":2424,"src":"7533:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7533:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2381,"id":2391,"nodeType":"Return","src":"7526:46:15"}]},"documentation":{"id":2375,"nodeType":"StructuredDocumentation","src":"7225:216:15","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2393,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7455:8:15","nodeType":"FunctionDefinition","parameters":{"id":2378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2377,"mutability":"mutable","name":"input","nameLocation":"7478:5:15","nodeType":"VariableDeclaration","scope":2393,"src":"7464:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2376,"name":"string","nodeType":"ElementaryTypeName","src":"7464:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7463:21:15"},"returnParameters":{"id":2381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2380,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2393,"src":"7508:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2379,"name":"int256","nodeType":"ElementaryTypeName","src":"7508:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7507:8:15"},"scope":3233,"src":"7446:133:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2423,"nodeType":"Block","src":"7984:151:15","statements":[{"assignments":[2406,2408],"declarations":[{"constant":false,"id":2406,"mutability":"mutable","name":"success","nameLocation":"8000:7:15","nodeType":"VariableDeclaration","scope":2423,"src":"7995:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2405,"name":"bool","nodeType":"ElementaryTypeName","src":"7995:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2408,"mutability":"mutable","name":"value","nameLocation":"8016:5:15","nodeType":"VariableDeclaration","scope":2423,"src":"8009:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2407,"name":"int256","nodeType":"ElementaryTypeName","src":"8009:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2414,"initialValue":{"arguments":[{"id":2410,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2396,"src":"8037:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2411,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"8044:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2412,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"8051:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2409,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[2445,2487],"referencedDeclaration":2487,"src":"8025:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8025:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7994:61:15"},{"condition":{"id":2416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8069:8:15","subExpression":{"id":2415,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"8070:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2420,"nodeType":"IfStatement","src":"8065:41:15","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2417,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"8086:18:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8086:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2419,"nodeType":"RevertStatement","src":"8079:27:15"}},{"expression":{"id":2421,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"8123:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2404,"id":2422,"nodeType":"Return","src":"8116:12:15"}]},"documentation":{"id":2394,"nodeType":"StructuredDocumentation","src":"7585:296:15","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2424,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7895:8:15","nodeType":"FunctionDefinition","parameters":{"id":2401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2396,"mutability":"mutable","name":"input","nameLocation":"7918:5:15","nodeType":"VariableDeclaration","scope":2424,"src":"7904:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2395,"name":"string","nodeType":"ElementaryTypeName","src":"7904:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2398,"mutability":"mutable","name":"begin","nameLocation":"7933:5:15","nodeType":"VariableDeclaration","scope":2424,"src":"7925:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2397,"name":"uint256","nodeType":"ElementaryTypeName","src":"7925:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2400,"mutability":"mutable","name":"end","nameLocation":"7948:3:15","nodeType":"VariableDeclaration","scope":2424,"src":"7940:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2399,"name":"uint256","nodeType":"ElementaryTypeName","src":"7940:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7903:49:15"},"returnParameters":{"id":2404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2403,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2424,"src":"7976:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2402,"name":"int256","nodeType":"ElementaryTypeName","src":"7976:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7975:8:15"},"scope":3233,"src":"7886:249:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2444,"nodeType":"Block","src":"8526:82:15","statements":[{"expression":{"arguments":[{"id":2435,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2427,"src":"8571:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8578:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2439,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2427,"src":"8587:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8581:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2437,"name":"bytes","nodeType":"ElementaryTypeName","src":"8581:5:15","typeDescriptions":{}}},"id":2440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8581:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8594:6:15","memberName":"length","nodeType":"MemberAccess","src":"8581:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2434,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2608,"src":"8543:27:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8543:58:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2433,"id":2443,"nodeType":"Return","src":"8536:65:15"}]},"documentation":{"id":2425,"nodeType":"StructuredDocumentation","src":"8141:287:15","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2445,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8442:11:15","nodeType":"FunctionDefinition","parameters":{"id":2428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2427,"mutability":"mutable","name":"input","nameLocation":"8468:5:15","nodeType":"VariableDeclaration","scope":2445,"src":"8454:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2426,"name":"string","nodeType":"ElementaryTypeName","src":"8454:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8453:21:15"},"returnParameters":{"id":2433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2430,"mutability":"mutable","name":"success","nameLocation":"8503:7:15","nodeType":"VariableDeclaration","scope":2445,"src":"8498:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2429,"name":"bool","nodeType":"ElementaryTypeName","src":"8498:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2432,"mutability":"mutable","name":"value","nameLocation":"8519:5:15","nodeType":"VariableDeclaration","scope":2445,"src":"8512:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2431,"name":"int256","nodeType":"ElementaryTypeName","src":"8512:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8497:28:15"},"scope":3233,"src":"8433:175:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":2450,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8639:14:15","nodeType":"VariableDeclaration","scope":3233,"src":"8614:50:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2446,"name":"uint256","nodeType":"ElementaryTypeName","src":"8614:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":2449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8656:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":2448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8661:3:15","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8656:8:15","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":2486,"nodeType":"Block","src":"9130:143:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2464,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"9144:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2467,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2453,"src":"9156:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9150:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2465,"name":"bytes","nodeType":"ElementaryTypeName","src":"9150:5:15","typeDescriptions":{}}},"id":2468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9150:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9163:6:15","memberName":"length","nodeType":"MemberAccess","src":"9150:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9144:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2471,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"9173:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2472,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"9181:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9173:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9144:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2479,"nodeType":"IfStatement","src":"9140:63:15","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9194:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9201:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2477,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9193:10:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2463,"id":2478,"nodeType":"Return","src":"9186:17:15"}},{"expression":{"arguments":[{"id":2481,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2453,"src":"9248:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2482,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"9255:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2483,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"9262:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2480,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2608,"src":"9220:27:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9220:46:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2463,"id":2485,"nodeType":"Return","src":"9213:53:15"}]},"documentation":{"id":2451,"nodeType":"StructuredDocumentation","src":"8671:303:15","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2487,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8988:11:15","nodeType":"FunctionDefinition","parameters":{"id":2458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2453,"mutability":"mutable","name":"input","nameLocation":"9023:5:15","nodeType":"VariableDeclaration","scope":2487,"src":"9009:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2452,"name":"string","nodeType":"ElementaryTypeName","src":"9009:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2455,"mutability":"mutable","name":"begin","nameLocation":"9046:5:15","nodeType":"VariableDeclaration","scope":2487,"src":"9038:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2454,"name":"uint256","nodeType":"ElementaryTypeName","src":"9038:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2457,"mutability":"mutable","name":"end","nameLocation":"9069:3:15","nodeType":"VariableDeclaration","scope":2487,"src":"9061:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2456,"name":"uint256","nodeType":"ElementaryTypeName","src":"9061:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8999:79:15"},"returnParameters":{"id":2463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2460,"mutability":"mutable","name":"success","nameLocation":"9107:7:15","nodeType":"VariableDeclaration","scope":2487,"src":"9102:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2459,"name":"bool","nodeType":"ElementaryTypeName","src":"9102:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2462,"mutability":"mutable","name":"value","nameLocation":"9123:5:15","nodeType":"VariableDeclaration","scope":2487,"src":"9116:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2461,"name":"int256","nodeType":"ElementaryTypeName","src":"9116:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9101:28:15"},"scope":3233,"src":"8979:294:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2607,"nodeType":"Block","src":"9673:812:15","statements":[{"assignments":[2502],"declarations":[{"constant":false,"id":2502,"mutability":"mutable","name":"buffer","nameLocation":"9696:6:15","nodeType":"VariableDeclaration","scope":2607,"src":"9683:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2501,"name":"bytes","nodeType":"ElementaryTypeName","src":"9683:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2507,"initialValue":{"arguments":[{"id":2505,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2490,"src":"9711:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9705:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2503,"name":"bytes","nodeType":"ElementaryTypeName","src":"9705:5:15","typeDescriptions":{}}},"id":2506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9705:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9683:34:15"},{"assignments":[2509],"declarations":[{"constant":false,"id":2509,"mutability":"mutable","name":"sign","nameLocation":"9781:4:15","nodeType":"VariableDeclaration","scope":2607,"src":"9774:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2508,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9774:6:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2525,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2510,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"9788:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2511,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"9797:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9788:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":2520,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"9845:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2521,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"9853:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2519,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3232,"src":"9822:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9822:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9815:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2517,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9815:6:15","typeDescriptions":{}}},"id":2523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9815:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9788:72:15","trueExpression":{"arguments":[{"hexValue":"30","id":2515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9810:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9803:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2513,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9803:6:15","typeDescriptions":{}}},"id":2516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9803:9:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9774:86:15"},{"assignments":[2527],"declarations":[{"constant":false,"id":2527,"mutability":"mutable","name":"positiveSign","nameLocation":"9946:12:15","nodeType":"VariableDeclaration","scope":2607,"src":"9941:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2526,"name":"bool","nodeType":"ElementaryTypeName","src":"9941:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2534,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2528,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"9961:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":2531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9976:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":2530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9969:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2529,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9969:6:15","typeDescriptions":{}}},"id":2532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9969:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9961:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9941:39:15"},{"assignments":[2536],"declarations":[{"constant":false,"id":2536,"mutability":"mutable","name":"negativeSign","nameLocation":"9995:12:15","nodeType":"VariableDeclaration","scope":2607,"src":"9990:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2535,"name":"bool","nodeType":"ElementaryTypeName","src":"9990:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2543,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2537,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"10010:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":2540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10025:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":2539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10018:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2538,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10018:6:15","typeDescriptions":{}}},"id":2541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10018:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10010:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9990:39:15"},{"assignments":[2545],"declarations":[{"constant":false,"id":2545,"mutability":"mutable","name":"offset","nameLocation":"10047:6:15","nodeType":"VariableDeclaration","scope":2607,"src":"10039:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2544,"name":"uint256","nodeType":"ElementaryTypeName","src":"10039:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2552,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2546,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2527,"src":"10057:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":2547,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2536,"src":"10073:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10057:28:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2549,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10056:30:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10087:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6654,"src":"10056:37:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10056:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10039:56:15"},{"assignments":[2554,2556],"declarations":[{"constant":false,"id":2554,"mutability":"mutable","name":"absSuccess","nameLocation":"10112:10:15","nodeType":"VariableDeclaration","scope":2607,"src":"10107:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2553,"name":"bool","nodeType":"ElementaryTypeName","src":"10107:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2556,"mutability":"mutable","name":"absValue","nameLocation":"10132:8:15","nodeType":"VariableDeclaration","scope":2607,"src":"10124:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2555,"name":"uint256","nodeType":"ElementaryTypeName","src":"10124:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2564,"initialValue":{"arguments":[{"id":2558,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2490,"src":"10157:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2559,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"10164:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2560,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"10172:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10164:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2562,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"10180:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2557,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2267,2304],"referencedDeclaration":2304,"src":"10144:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10144:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10106:78:15"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2565,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2554,"src":"10199:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2566,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"10213:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2567,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"10224:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10213:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10199:39:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2585,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2554,"src":"10341:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":2586,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2536,"src":"10355:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10341:26:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2588,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"10371:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2589,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"10383:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10371:26:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10341:56:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10469:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10476:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2603,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10468:10:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2500,"id":2604,"nodeType":"Return","src":"10461:17:15"},"id":2605,"nodeType":"IfStatement","src":"10337:141:15","trueBody":{"id":2600,"nodeType":"Block","src":"10399:56:15","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10421:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":2595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10432:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2594,"name":"int256","nodeType":"ElementaryTypeName","src":"10432:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":2593,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10427:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10427:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":2597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10440:3:15","memberName":"min","nodeType":"MemberAccess","src":"10427:16:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2598,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10420:24:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2500,"id":2599,"nodeType":"Return","src":"10413:31:15"}]}},"id":2606,"nodeType":"IfStatement","src":"10195:283:15","trueBody":{"id":2584,"nodeType":"Block","src":"10240:91:15","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10262:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":2571,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2536,"src":"10268:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":2579,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"10310:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10303:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2577,"name":"int256","nodeType":"ElementaryTypeName","src":"10303:6:15","typeDescriptions":{}}},"id":2580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10303:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10268:51:15","trueExpression":{"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10283:17:15","subExpression":{"arguments":[{"id":2574,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"10291:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10284:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2572,"name":"int256","nodeType":"ElementaryTypeName","src":"10284:6:15","typeDescriptions":{}}},"id":2575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10284:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2582,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10261:59:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2500,"id":2583,"nodeType":"Return","src":"10254:66:15"}]}}]},"documentation":{"id":2488,"nodeType":"StructuredDocumentation","src":"9279:223:15","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2608,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9516:27:15","nodeType":"FunctionDefinition","parameters":{"id":2495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2490,"mutability":"mutable","name":"input","nameLocation":"9567:5:15","nodeType":"VariableDeclaration","scope":2608,"src":"9553:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2489,"name":"string","nodeType":"ElementaryTypeName","src":"9553:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2492,"mutability":"mutable","name":"begin","nameLocation":"9590:5:15","nodeType":"VariableDeclaration","scope":2608,"src":"9582:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2491,"name":"uint256","nodeType":"ElementaryTypeName","src":"9582:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2494,"mutability":"mutable","name":"end","nameLocation":"9613:3:15","nodeType":"VariableDeclaration","scope":2608,"src":"9605:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2493,"name":"uint256","nodeType":"ElementaryTypeName","src":"9605:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9543:79:15"},"returnParameters":{"id":2500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2497,"mutability":"mutable","name":"success","nameLocation":"9650:7:15","nodeType":"VariableDeclaration","scope":2608,"src":"9645:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2496,"name":"bool","nodeType":"ElementaryTypeName","src":"9645:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2499,"mutability":"mutable","name":"value","nameLocation":"9666:5:15","nodeType":"VariableDeclaration","scope":2608,"src":"9659:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2498,"name":"int256","nodeType":"ElementaryTypeName","src":"9659:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9644:28:15"},"scope":3233,"src":"9507:978:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2626,"nodeType":"Block","src":"10830:67:15","statements":[{"expression":{"arguments":[{"id":2617,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"10860:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10867:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2621,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"10876:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2620,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10870:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2619,"name":"bytes","nodeType":"ElementaryTypeName","src":"10870:5:15","typeDescriptions":{}}},"id":2622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10870:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10883:6:15","memberName":"length","nodeType":"MemberAccess","src":"10870:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2616,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[2627,2658],"referencedDeclaration":2658,"src":"10847:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10847:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2615,"id":2625,"nodeType":"Return","src":"10840:50:15"}]},"documentation":{"id":2609,"nodeType":"StructuredDocumentation","src":"10491:259:15","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2627,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10764:12:15","nodeType":"FunctionDefinition","parameters":{"id":2612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2611,"mutability":"mutable","name":"input","nameLocation":"10791:5:15","nodeType":"VariableDeclaration","scope":2627,"src":"10777:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2610,"name":"string","nodeType":"ElementaryTypeName","src":"10777:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10776:21:15"},"returnParameters":{"id":2615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2614,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2627,"src":"10821:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2613,"name":"uint256","nodeType":"ElementaryTypeName","src":"10821:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10820:9:15"},"scope":3233,"src":"10755:142:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2657,"nodeType":"Block","src":"11318:156:15","statements":[{"assignments":[2640,2642],"declarations":[{"constant":false,"id":2640,"mutability":"mutable","name":"success","nameLocation":"11334:7:15","nodeType":"VariableDeclaration","scope":2657,"src":"11329:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2639,"name":"bool","nodeType":"ElementaryTypeName","src":"11329:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2642,"mutability":"mutable","name":"value","nameLocation":"11351:5:15","nodeType":"VariableDeclaration","scope":2657,"src":"11343:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2641,"name":"uint256","nodeType":"ElementaryTypeName","src":"11343:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2648,"initialValue":{"arguments":[{"id":2644,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2630,"src":"11376:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2645,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2632,"src":"11383:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2646,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2634,"src":"11390:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2643,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[2679,2716],"referencedDeclaration":2716,"src":"11360:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11360:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11328:66:15"},{"condition":{"id":2650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11408:8:15","subExpression":{"id":2649,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"11409:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2654,"nodeType":"IfStatement","src":"11404:41:15","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2651,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"11425:18:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11425:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2653,"nodeType":"RevertStatement","src":"11418:27:15"}},{"expression":{"id":2655,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"11462:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2638,"id":2656,"nodeType":"Return","src":"11455:12:15"}]},"documentation":{"id":2628,"nodeType":"StructuredDocumentation","src":"10903:307:15","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2658,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11224:12:15","nodeType":"FunctionDefinition","parameters":{"id":2635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2630,"mutability":"mutable","name":"input","nameLocation":"11251:5:15","nodeType":"VariableDeclaration","scope":2658,"src":"11237:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2629,"name":"string","nodeType":"ElementaryTypeName","src":"11237:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2632,"mutability":"mutable","name":"begin","nameLocation":"11266:5:15","nodeType":"VariableDeclaration","scope":2658,"src":"11258:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2631,"name":"uint256","nodeType":"ElementaryTypeName","src":"11258:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2634,"mutability":"mutable","name":"end","nameLocation":"11281:3:15","nodeType":"VariableDeclaration","scope":2658,"src":"11273:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2633,"name":"uint256","nodeType":"ElementaryTypeName","src":"11273:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11236:49:15"},"returnParameters":{"id":2638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2637,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2658,"src":"11309:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2636,"name":"uint256","nodeType":"ElementaryTypeName","src":"11309:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11308:9:15"},"scope":3233,"src":"11215:259:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2678,"nodeType":"Block","src":"11801:86:15","statements":[{"expression":{"arguments":[{"id":2669,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2661,"src":"11850:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11857:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2673,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2661,"src":"11866:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11860:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2671,"name":"bytes","nodeType":"ElementaryTypeName","src":"11860:5:15","typeDescriptions":{}}},"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11860:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11873:6:15","memberName":"length","nodeType":"MemberAccess","src":"11860:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2668,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2819,"src":"11818:31:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11818:62:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2667,"id":2677,"nodeType":"Return","src":"11811:69:15"}]},"documentation":{"id":2659,"nodeType":"StructuredDocumentation","src":"11480:218:15","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2679,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11712:15:15","nodeType":"FunctionDefinition","parameters":{"id":2662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2661,"mutability":"mutable","name":"input","nameLocation":"11742:5:15","nodeType":"VariableDeclaration","scope":2679,"src":"11728:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2660,"name":"string","nodeType":"ElementaryTypeName","src":"11728:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11727:21:15"},"returnParameters":{"id":2667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2664,"mutability":"mutable","name":"success","nameLocation":"11777:7:15","nodeType":"VariableDeclaration","scope":2679,"src":"11772:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2663,"name":"bool","nodeType":"ElementaryTypeName","src":"11772:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2666,"mutability":"mutable","name":"value","nameLocation":"11794:5:15","nodeType":"VariableDeclaration","scope":2679,"src":"11786:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2665,"name":"uint256","nodeType":"ElementaryTypeName","src":"11786:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11771:29:15"},"scope":3233,"src":"11703:184:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2715,"nodeType":"Block","src":"12295:147:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2693,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"12309:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2696,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"12321:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12315:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2694,"name":"bytes","nodeType":"ElementaryTypeName","src":"12315:5:15","typeDescriptions":{}}},"id":2697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12315:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12328:6:15","memberName":"length","nodeType":"MemberAccess","src":"12315:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12309:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2700,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"12338:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2701,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"12346:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12338:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12309:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2708,"nodeType":"IfStatement","src":"12305:63:15","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12359:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12366:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2706,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12358:10:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2692,"id":2707,"nodeType":"Return","src":"12351:17:15"}},{"expression":{"arguments":[{"id":2710,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"12417:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2711,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"12424:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2712,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"12431:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2709,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2819,"src":"12385:31:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12385:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2692,"id":2714,"nodeType":"Return","src":"12378:57:15"}]},"documentation":{"id":2680,"nodeType":"StructuredDocumentation","src":"11893:241:15","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2716,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12148:15:15","nodeType":"FunctionDefinition","parameters":{"id":2687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2682,"mutability":"mutable","name":"input","nameLocation":"12187:5:15","nodeType":"VariableDeclaration","scope":2716,"src":"12173:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2681,"name":"string","nodeType":"ElementaryTypeName","src":"12173:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2684,"mutability":"mutable","name":"begin","nameLocation":"12210:5:15","nodeType":"VariableDeclaration","scope":2716,"src":"12202:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2683,"name":"uint256","nodeType":"ElementaryTypeName","src":"12202:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2686,"mutability":"mutable","name":"end","nameLocation":"12233:3:15","nodeType":"VariableDeclaration","scope":2716,"src":"12225:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2685,"name":"uint256","nodeType":"ElementaryTypeName","src":"12225:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12163:79:15"},"returnParameters":{"id":2692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2689,"mutability":"mutable","name":"success","nameLocation":"12271:7:15","nodeType":"VariableDeclaration","scope":2716,"src":"12266:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2688,"name":"bool","nodeType":"ElementaryTypeName","src":"12266:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2691,"mutability":"mutable","name":"value","nameLocation":"12288:5:15","nodeType":"VariableDeclaration","scope":2716,"src":"12280:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2690,"name":"uint256","nodeType":"ElementaryTypeName","src":"12280:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12265:29:15"},"scope":3233,"src":"12139:303:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2818,"nodeType":"Block","src":"12851:881:15","statements":[{"assignments":[2731],"declarations":[{"constant":false,"id":2731,"mutability":"mutable","name":"buffer","nameLocation":"12874:6:15","nodeType":"VariableDeclaration","scope":2818,"src":"12861:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2730,"name":"bytes","nodeType":"ElementaryTypeName","src":"12861:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2736,"initialValue":{"arguments":[{"id":2734,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"12889:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12883:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2732,"name":"bytes","nodeType":"ElementaryTypeName","src":"12883:5:15","typeDescriptions":{}}},"id":2735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12883:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12861:34:15"},{"assignments":[2738],"declarations":[{"constant":false,"id":2738,"mutability":"mutable","name":"hasPrefix","nameLocation":"12948:9:15","nodeType":"VariableDeclaration","scope":2818,"src":"12943:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2737,"name":"bool","nodeType":"ElementaryTypeName","src":"12943:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2758,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2739,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"12961:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2740,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"12967:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12975:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12967:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12961:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2744,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12960:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2748,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2731,"src":"13011:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2749,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"13019:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2747,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3232,"src":"12988:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12988:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12981:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2745,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12981:6:15","typeDescriptions":{}}},"id":2751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12981:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13037:4:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2753,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13030:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2752,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13030:6:15","typeDescriptions":{}}},"id":2755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13030:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12981:61:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12960:82:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12943:99:15"},{"assignments":[2760],"declarations":[{"constant":false,"id":2760,"mutability":"mutable","name":"offset","nameLocation":"13131:6:15","nodeType":"VariableDeclaration","scope":2818,"src":"13123:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2759,"name":"uint256","nodeType":"ElementaryTypeName","src":"13123:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2766,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2761,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2738,"src":"13140:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13150:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6654,"src":"13140:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13140:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13161:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13140:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13123:39:15"},{"assignments":[2768],"declarations":[{"constant":false,"id":2768,"mutability":"mutable","name":"result","nameLocation":"13181:6:15","nodeType":"VariableDeclaration","scope":2818,"src":"13173:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2767,"name":"uint256","nodeType":"ElementaryTypeName","src":"13173:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2770,"initialValue":{"hexValue":"30","id":2769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13190:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13173:18:15"},{"body":{"id":2812,"nodeType":"Block","src":"13248:447:15","statements":[{"assignments":[2784],"declarations":[{"constant":false,"id":2784,"mutability":"mutable","name":"chr","nameLocation":"13268:3:15","nodeType":"VariableDeclaration","scope":2812,"src":"13262:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2783,"name":"uint8","nodeType":"ElementaryTypeName","src":"13262:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2794,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2789,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2731,"src":"13317:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2790,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2772,"src":"13325:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2788,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3232,"src":"13294:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13294:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13287:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2786,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13287:6:15","typeDescriptions":{}}},"id":2792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13287:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2785,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"13274:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13274:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13262:67:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2795,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2784,"src":"13347:3:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":2796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13353:2:15","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13347:8:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2802,"nodeType":"IfStatement","src":"13343:31:15","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13365:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13372:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2800,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13364:10:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2729,"id":2801,"nodeType":"Return","src":"13357:17:15"}},{"expression":{"id":2805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2803,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"13388:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":2804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13398:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13388:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2806,"nodeType":"ExpressionStatement","src":"13388:12:15"},{"id":2811,"nodeType":"UncheckedBlock","src":"13414:271:15","statements":[{"expression":{"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2807,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"13657:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2808,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2784,"src":"13667:3:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13657:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2810,"nodeType":"ExpressionStatement","src":"13657:13:15"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2777,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2772,"src":"13234:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2778,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"13238:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13234:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2813,"initializationExpression":{"assignments":[2772],"declarations":[{"constant":false,"id":2772,"mutability":"mutable","name":"i","nameLocation":"13214:1:15","nodeType":"VariableDeclaration","scope":2813,"src":"13206:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2771,"name":"uint256","nodeType":"ElementaryTypeName","src":"13206:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2776,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2773,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"13218:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2774,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2760,"src":"13226:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13218:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13206:26:15"},"loopExpression":{"expression":{"id":2781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13243:3:15","subExpression":{"id":2780,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2772,"src":"13245:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2782,"nodeType":"ExpressionStatement","src":"13243:3:15"},"nodeType":"ForStatement","src":"13201:494:15"},{"expression":{"components":[{"hexValue":"74727565","id":2814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13712:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2815,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"13718:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2816,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13711:14:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2729,"id":2817,"nodeType":"Return","src":"13704:21:15"}]},"documentation":{"id":2717,"nodeType":"StructuredDocumentation","src":"12448:227:15","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2819,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12689:31:15","nodeType":"FunctionDefinition","parameters":{"id":2724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2719,"mutability":"mutable","name":"input","nameLocation":"12744:5:15","nodeType":"VariableDeclaration","scope":2819,"src":"12730:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2718,"name":"string","nodeType":"ElementaryTypeName","src":"12730:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2721,"mutability":"mutable","name":"begin","nameLocation":"12767:5:15","nodeType":"VariableDeclaration","scope":2819,"src":"12759:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2720,"name":"uint256","nodeType":"ElementaryTypeName","src":"12759:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2723,"mutability":"mutable","name":"end","nameLocation":"12790:3:15","nodeType":"VariableDeclaration","scope":2819,"src":"12782:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2722,"name":"uint256","nodeType":"ElementaryTypeName","src":"12782:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12720:79:15"},"returnParameters":{"id":2729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2726,"mutability":"mutable","name":"success","nameLocation":"12827:7:15","nodeType":"VariableDeclaration","scope":2819,"src":"12822:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2725,"name":"bool","nodeType":"ElementaryTypeName","src":"12822:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2728,"mutability":"mutable","name":"value","nameLocation":"12844:5:15","nodeType":"VariableDeclaration","scope":2819,"src":"12836:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2727,"name":"uint256","nodeType":"ElementaryTypeName","src":"12836:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12821:29:15"},"scope":3233,"src":"12680:1052:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2837,"nodeType":"Block","src":"14030:67:15","statements":[{"expression":{"arguments":[{"id":2828,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"14060:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14067:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2832,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"14076:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14070:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2830,"name":"bytes","nodeType":"ElementaryTypeName","src":"14070:5:15","typeDescriptions":{}}},"id":2833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14070:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14083:6:15","memberName":"length","nodeType":"MemberAccess","src":"14070:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2827,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[2838,2869],"referencedDeclaration":2869,"src":"14047:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":2835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14047:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2826,"id":2836,"nodeType":"Return","src":"14040:50:15"}]},"documentation":{"id":2820,"nodeType":"StructuredDocumentation","src":"13738:212:15","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2838,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13964:12:15","nodeType":"FunctionDefinition","parameters":{"id":2823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2822,"mutability":"mutable","name":"input","nameLocation":"13991:5:15","nodeType":"VariableDeclaration","scope":2838,"src":"13977:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2821,"name":"string","nodeType":"ElementaryTypeName","src":"13977:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13976:21:15"},"returnParameters":{"id":2826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2825,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2838,"src":"14021:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2824,"name":"address","nodeType":"ElementaryTypeName","src":"14021:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14020:9:15"},"scope":3233,"src":"13955:142:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2868,"nodeType":"Block","src":"14470:165:15","statements":[{"assignments":[2851,2853],"declarations":[{"constant":false,"id":2851,"mutability":"mutable","name":"success","nameLocation":"14486:7:15","nodeType":"VariableDeclaration","scope":2868,"src":"14481:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2850,"name":"bool","nodeType":"ElementaryTypeName","src":"14481:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2853,"mutability":"mutable","name":"value","nameLocation":"14503:5:15","nodeType":"VariableDeclaration","scope":2868,"src":"14495:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2852,"name":"address","nodeType":"ElementaryTypeName","src":"14495:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2859,"initialValue":{"arguments":[{"id":2855,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"14528:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2856,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"14535:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2857,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"14542:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2854,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[2890,2994],"referencedDeclaration":2994,"src":"14512:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14512:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14480:66:15"},{"condition":{"id":2861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14560:8:15","subExpression":{"id":2860,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2851,"src":"14561:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2865,"nodeType":"IfStatement","src":"14556:50:15","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2862,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"14577:27:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14577:29:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2864,"nodeType":"RevertStatement","src":"14570:36:15"}},{"expression":{"id":2866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2853,"src":"14623:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2849,"id":2867,"nodeType":"Return","src":"14616:12:15"}]},"documentation":{"id":2839,"nodeType":"StructuredDocumentation","src":"14103:259:15","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2869,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14376:12:15","nodeType":"FunctionDefinition","parameters":{"id":2846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2841,"mutability":"mutable","name":"input","nameLocation":"14403:5:15","nodeType":"VariableDeclaration","scope":2869,"src":"14389:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2840,"name":"string","nodeType":"ElementaryTypeName","src":"14389:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2843,"mutability":"mutable","name":"begin","nameLocation":"14418:5:15","nodeType":"VariableDeclaration","scope":2869,"src":"14410:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2842,"name":"uint256","nodeType":"ElementaryTypeName","src":"14410:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2845,"mutability":"mutable","name":"end","nameLocation":"14433:3:15","nodeType":"VariableDeclaration","scope":2869,"src":"14425:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2844,"name":"uint256","nodeType":"ElementaryTypeName","src":"14425:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14388:49:15"},"returnParameters":{"id":2849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2848,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2869,"src":"14461:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2847,"name":"address","nodeType":"ElementaryTypeName","src":"14461:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14460:9:15"},"scope":3233,"src":"14367:268:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2889,"nodeType":"Block","src":"14942:70:15","statements":[{"expression":{"arguments":[{"id":2880,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"14975:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14982:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2884,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"14991:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14985:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2882,"name":"bytes","nodeType":"ElementaryTypeName","src":"14985:5:15","typeDescriptions":{}}},"id":2885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14985:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14998:6:15","memberName":"length","nodeType":"MemberAccess","src":"14985:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2879,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[2890,2994],"referencedDeclaration":2994,"src":"14959:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14959:46:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2878,"id":2888,"nodeType":"Return","src":"14952:53:15"}]},"documentation":{"id":2870,"nodeType":"StructuredDocumentation","src":"14641:198:15","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":2890,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14853:15:15","nodeType":"FunctionDefinition","parameters":{"id":2873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2872,"mutability":"mutable","name":"input","nameLocation":"14883:5:15","nodeType":"VariableDeclaration","scope":2890,"src":"14869:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2871,"name":"string","nodeType":"ElementaryTypeName","src":"14869:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14868:21:15"},"returnParameters":{"id":2878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2875,"mutability":"mutable","name":"success","nameLocation":"14918:7:15","nodeType":"VariableDeclaration","scope":2890,"src":"14913:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2874,"name":"bool","nodeType":"ElementaryTypeName","src":"14913:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2877,"mutability":"mutable","name":"value","nameLocation":"14935:5:15","nodeType":"VariableDeclaration","scope":2890,"src":"14927:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2876,"name":"address","nodeType":"ElementaryTypeName","src":"14927:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14912:29:15"},"scope":3233,"src":"14844:168:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2993,"nodeType":"Block","src":"15405:733:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2904,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"15419:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2907,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"15431:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15425:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2905,"name":"bytes","nodeType":"ElementaryTypeName","src":"15425:5:15","typeDescriptions":{}}},"id":2908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15425:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15438:6:15","memberName":"length","nodeType":"MemberAccess","src":"15425:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15419:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2911,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"15448:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2912,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"15456:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15448:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15419:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2922,"nodeType":"IfStatement","src":"15415:72:15","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15469:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15484:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15476:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2916,"name":"address","nodeType":"ElementaryTypeName","src":"15476:7:15","typeDescriptions":{}}},"id":2919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15476:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2920,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15468:19:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2903,"id":2921,"nodeType":"Return","src":"15461:26:15"}},{"assignments":[2924],"declarations":[{"constant":false,"id":2924,"mutability":"mutable","name":"hasPrefix","nameLocation":"15503:9:15","nodeType":"VariableDeclaration","scope":2993,"src":"15498:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2923,"name":"bool","nodeType":"ElementaryTypeName","src":"15498:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2947,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2925,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"15516:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2926,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"15522:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15530:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15522:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15516:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2930,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15515:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":2936,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"15572:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2935,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15566:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2934,"name":"bytes","nodeType":"ElementaryTypeName","src":"15566:5:15","typeDescriptions":{}}},"id":2937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15566:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2938,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"15580:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2933,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3232,"src":"15543:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15543:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15536:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2931,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15536:6:15","typeDescriptions":{}}},"id":2940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15536:51:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15598:4:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15591:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2941,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15591:6:15","typeDescriptions":{}}},"id":2944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15591:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15536:67:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15515:88:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15498:105:15"},{"assignments":[2949],"declarations":[{"constant":false,"id":2949,"mutability":"mutable","name":"expectedLength","nameLocation":"15692:14:15","nodeType":"VariableDeclaration","scope":2993,"src":"15684:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2948,"name":"uint256","nodeType":"ElementaryTypeName","src":"15684:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2957,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":2950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15709:2:15","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2951,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2924,"src":"15714:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15724:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6654,"src":"15714:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15714:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15735:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15714:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15709:27:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15684:52:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2958,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"15801:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2959,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"15807:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15801:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2961,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"15816:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15801:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2991,"nodeType":"Block","src":"16081:51:15","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":2984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16103:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16118:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16110:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2985,"name":"address","nodeType":"ElementaryTypeName","src":"16110:7:15","typeDescriptions":{}}},"id":2988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2989,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16102:19:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2903,"id":2990,"nodeType":"Return","src":"16095:26:15"}]},"id":2992,"nodeType":"IfStatement","src":"15797:335:15","trueBody":{"id":2983,"nodeType":"Block","src":"15832:243:15","statements":[{"assignments":[2964,2966],"declarations":[{"constant":false,"id":2964,"mutability":"mutable","name":"s","nameLocation":"15953:1:15","nodeType":"VariableDeclaration","scope":2983,"src":"15948:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2963,"name":"bool","nodeType":"ElementaryTypeName","src":"15948:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2966,"mutability":"mutable","name":"v","nameLocation":"15964:1:15","nodeType":"VariableDeclaration","scope":2983,"src":"15956:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2965,"name":"uint256","nodeType":"ElementaryTypeName","src":"15956:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2972,"initialValue":{"arguments":[{"id":2968,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"16001:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2969,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"16008:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2970,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"16015:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2967,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2819,"src":"15969:31:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15969:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15947:72:15"},{"expression":{"components":[{"id":2973,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"16041:1:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":2978,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"16060:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16052:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2976,"name":"uint160","nodeType":"ElementaryTypeName","src":"16052:7:15","typeDescriptions":{}}},"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16052:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16044:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2974,"name":"address","nodeType":"ElementaryTypeName","src":"16044:7:15","typeDescriptions":{}}},"id":2980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16044:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2981,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16040:24:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2903,"id":2982,"nodeType":"Return","src":"16033:31:15"}]}}]},"documentation":{"id":2891,"nodeType":"StructuredDocumentation","src":"15018:226:15","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":2994,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15258:15:15","nodeType":"FunctionDefinition","parameters":{"id":2898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2893,"mutability":"mutable","name":"input","nameLocation":"15297:5:15","nodeType":"VariableDeclaration","scope":2994,"src":"15283:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2892,"name":"string","nodeType":"ElementaryTypeName","src":"15283:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2895,"mutability":"mutable","name":"begin","nameLocation":"15320:5:15","nodeType":"VariableDeclaration","scope":2994,"src":"15312:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2894,"name":"uint256","nodeType":"ElementaryTypeName","src":"15312:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2897,"mutability":"mutable","name":"end","nameLocation":"15343:3:15","nodeType":"VariableDeclaration","scope":2994,"src":"15335:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2896,"name":"uint256","nodeType":"ElementaryTypeName","src":"15335:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15273:79:15"},"returnParameters":{"id":2903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2900,"mutability":"mutable","name":"success","nameLocation":"15381:7:15","nodeType":"VariableDeclaration","scope":2994,"src":"15376:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2899,"name":"bool","nodeType":"ElementaryTypeName","src":"15376:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2902,"mutability":"mutable","name":"value","nameLocation":"15398:5:15","nodeType":"VariableDeclaration","scope":2994,"src":"15390:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2901,"name":"address","nodeType":"ElementaryTypeName","src":"15390:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15375:29:15"},"scope":3233,"src":"15249:889:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3053,"nodeType":"Block","src":"16207:461:15","statements":[{"assignments":[3002],"declarations":[{"constant":false,"id":3002,"mutability":"mutable","name":"value","nameLocation":"16223:5:15","nodeType":"VariableDeclaration","scope":3053,"src":"16217:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3001,"name":"uint8","nodeType":"ElementaryTypeName","src":"16217:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3007,"initialValue":{"arguments":[{"id":3005,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"16237:3:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16231:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3003,"name":"uint8","nodeType":"ElementaryTypeName","src":"16231:5:15","typeDescriptions":{}}},"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16231:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16217:24:15"},{"id":3050,"nodeType":"UncheckedBlock","src":"16401:238:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3008,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"16429:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":3009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16437:2:15","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16429:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3011,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"16443:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":3012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16451:2:15","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16443:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16429:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3019,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"16489:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":3020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16497:2:15","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16489:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3022,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"16503:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":3023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16511:3:15","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16503:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16489:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3030,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"16550:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":3031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16558:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16550:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3033,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"16564:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":3034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16572:2:15","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16564:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16550:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":3043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16618:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3042,"name":"uint8","nodeType":"ElementaryTypeName","src":"16618:5:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":3041,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16613:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16613:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":3045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16625:3:15","memberName":"max","nodeType":"MemberAccess","src":"16613:15:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3000,"id":3046,"nodeType":"Return","src":"16606:22:15"},"id":3047,"nodeType":"IfStatement","src":"16546:82:15","trueBody":{"expression":{"id":3039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3037,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"16576:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":3038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16585:2:15","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16576:11:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3040,"nodeType":"ExpressionStatement","src":"16576:11:15"}},"id":3048,"nodeType":"IfStatement","src":"16485:143:15","trueBody":{"expression":{"id":3028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3026,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"16516:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":3027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16525:2:15","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16516:11:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3029,"nodeType":"ExpressionStatement","src":"16516:11:15"}},"id":3049,"nodeType":"IfStatement","src":"16425:203:15","trueBody":{"expression":{"id":3017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3015,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"16455:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":3016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16464:2:15","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16455:11:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3018,"nodeType":"ExpressionStatement","src":"16455:11:15"}}]},{"expression":{"id":3051,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"16656:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3000,"id":3052,"nodeType":"Return","src":"16649:12:15"}]},"id":3054,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16153:12:15","nodeType":"FunctionDefinition","parameters":{"id":2997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2996,"mutability":"mutable","name":"chr","nameLocation":"16173:3:15","nodeType":"VariableDeclaration","scope":3054,"src":"16166:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2995,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16166:6:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16165:12:15"},"returnParameters":{"id":3000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2999,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3054,"src":"16200:5:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2998,"name":"uint8","nodeType":"ElementaryTypeName","src":"16200:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16199:7:15"},"scope":3233,"src":"16144:524:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3219,"nodeType":"Block","src":"17334:1331:15","statements":[{"assignments":[3063],"declarations":[{"constant":false,"id":3063,"mutability":"mutable","name":"buffer","nameLocation":"17357:6:15","nodeType":"VariableDeclaration","scope":3219,"src":"17344:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3062,"name":"bytes","nodeType":"ElementaryTypeName","src":"17344:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3068,"initialValue":{"arguments":[{"id":3066,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"17372:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17366:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3064,"name":"bytes","nodeType":"ElementaryTypeName","src":"17366:5:15","typeDescriptions":{}}},"id":3067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17366:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17344:34:15"},{"assignments":[3070],"declarations":[{"constant":false,"id":3070,"mutability":"mutable","name":"output","nameLocation":"17401:6:15","nodeType":"VariableDeclaration","scope":3219,"src":"17388:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3069,"name":"bytes","nodeType":"ElementaryTypeName","src":"17388:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3078,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17420:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":3074,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"17424:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17431:6:15","memberName":"length","nodeType":"MemberAccess","src":"17424:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17420:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17410:9:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3071,"name":"bytes","nodeType":"ElementaryTypeName","src":"17414:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17410:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17388:50:15"},{"assignments":[3080],"declarations":[{"constant":false,"id":3080,"mutability":"mutable","name":"outputLength","nameLocation":"17479:12:15","nodeType":"VariableDeclaration","scope":3219,"src":"17471:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3079,"name":"uint256","nodeType":"ElementaryTypeName","src":"17471:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3082,"initialValue":{"hexValue":"30","id":3081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17494:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17471:24:15"},{"body":{"id":3211,"nodeType":"Block","src":"17546:854:15","statements":[{"assignments":[3094],"declarations":[{"constant":false,"id":3094,"mutability":"mutable","name":"char","nameLocation":"17567:4:15","nodeType":"VariableDeclaration","scope":3211,"src":"17560:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3093,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17560:6:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":3102,"initialValue":{"arguments":[{"arguments":[{"id":3098,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"17604:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3099,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3084,"src":"17612:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3097,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3232,"src":"17581:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17581:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17574:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3095,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17574:6:15","typeDescriptions":{}}},"id":3101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17574:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17560:55:15"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3103,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"17635:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17659:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":3107,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3094,"src":"17670:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17664:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3105,"name":"uint8","nodeType":"ElementaryTypeName","src":"17664:5:15","typeDescriptions":{}}},"id":3108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17664:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17659:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3110,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17658:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17635:41:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3112,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17634:43:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17681:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17634:48:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3115,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17633:50:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3209,"nodeType":"Block","src":"18328:62:15","statements":[{"expression":{"id":3207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3202,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"18346:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3205,"indexExpression":{"id":3204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18353:14:15","subExpression":{"id":3203,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"18353:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18346:22:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3206,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3094,"src":"18371:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18346:29:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3208,"nodeType":"ExpressionStatement","src":"18346:29:15"}]},"id":3210,"nodeType":"IfStatement","src":"17629:761:15","trueBody":{"id":3201,"nodeType":"Block","src":"17685:637:15","statements":[{"expression":{"id":3121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3116,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"17703:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3119,"indexExpression":{"id":3118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17710:14:15","subExpression":{"id":3117,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"17710:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17703:22:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":3120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17728:4:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17703:29:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3122,"nodeType":"ExpressionStatement","src":"17703:29:15"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3123,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3094,"src":"17754:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":3124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17762:4:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17754:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3133,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3094,"src":"17823:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":3134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17831:4:15","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17823:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3143,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3094,"src":"17892:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":3144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17900:4:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17892:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3153,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3094,"src":"17961:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":3154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17969:4:15","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17961:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3163,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3094,"src":"18030:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":3164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18038:4:15","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18030:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3173,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3094,"src":"18099:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":3174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18107:4:15","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18099:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3183,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3094,"src":"18169:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":3184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18177:4:15","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18169:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3194,"nodeType":"IfStatement","src":"18165:143:15","trueBody":{"id":3193,"nodeType":"Block","src":"18183:125:15","statements":[{"expression":{"id":3191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3186,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"18261:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3189,"indexExpression":{"id":3188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18268:14:15","subExpression":{"id":3187,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"18268:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18261:22:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":3190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18286:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18261:28:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3192,"nodeType":"ExpressionStatement","src":"18261:28:15"}]}},"id":3195,"nodeType":"IfStatement","src":"18095:213:15","trueBody":{"expression":{"id":3181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3176,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"18113:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3179,"indexExpression":{"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18120:14:15","subExpression":{"id":3177,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"18120:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18113:22:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":3180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18138:4:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18113:29:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3182,"nodeType":"ExpressionStatement","src":"18113:29:15"}},"id":3196,"nodeType":"IfStatement","src":"18026:282:15","trueBody":{"expression":{"id":3171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3166,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"18044:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3169,"indexExpression":{"id":3168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18051:14:15","subExpression":{"id":3167,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"18051:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18044:22:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":3170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18069:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18044:28:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3172,"nodeType":"ExpressionStatement","src":"18044:28:15"}},"id":3197,"nodeType":"IfStatement","src":"17957:351:15","trueBody":{"expression":{"id":3161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3156,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"17975:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3159,"indexExpression":{"id":3158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17982:14:15","subExpression":{"id":3157,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"17982:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17975:22:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":3160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18000:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17975:28:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3162,"nodeType":"ExpressionStatement","src":"17975:28:15"}},"id":3198,"nodeType":"IfStatement","src":"17888:420:15","trueBody":{"expression":{"id":3151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3146,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"17906:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3149,"indexExpression":{"id":3148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17913:14:15","subExpression":{"id":3147,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"17913:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17906:22:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":3150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17931:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17906:28:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3152,"nodeType":"ExpressionStatement","src":"17906:28:15"}},"id":3199,"nodeType":"IfStatement","src":"17819:489:15","trueBody":{"expression":{"id":3141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3136,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"17837:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3139,"indexExpression":{"id":3138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17844:14:15","subExpression":{"id":3137,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"17844:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17837:22:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":3140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17862:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17837:28:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3142,"nodeType":"ExpressionStatement","src":"17837:28:15"}},"id":3200,"nodeType":"IfStatement","src":"17750:558:15","trueBody":{"expression":{"id":3131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3126,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"17768:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3129,"indexExpression":{"id":3128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17775:14:15","subExpression":{"id":3127,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"17775:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17768:22:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":3130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17793:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17768:28:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3132,"nodeType":"ExpressionStatement","src":"17768:28:15"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3086,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3084,"src":"17522:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3087,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"17526:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17533:6:15","memberName":"length","nodeType":"MemberAccess","src":"17526:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17522:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3212,"initializationExpression":{"assignments":[3084],"declarations":[{"constant":false,"id":3084,"mutability":"mutable","name":"i","nameLocation":"17519:1:15","nodeType":"VariableDeclaration","scope":3212,"src":"17511:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3083,"name":"uint256","nodeType":"ElementaryTypeName","src":"17511:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3085,"nodeType":"VariableDeclarationStatement","src":"17511:9:15"},"loopExpression":{"expression":{"id":3091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17541:3:15","subExpression":{"id":3090,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3084,"src":"17543:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3092,"nodeType":"ExpressionStatement","src":"17541:3:15"},"nodeType":"ForStatement","src":"17506:894:15"},{"AST":{"nodeType":"YulBlock","src":"18498:129:15","statements":[{"expression":{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"18519:6:15"},{"name":"outputLength","nodeType":"YulIdentifier","src":"18527:12:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18512:6:15"},"nodeType":"YulFunctionCall","src":"18512:28:15"},"nodeType":"YulExpressionStatement","src":"18512:28:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18560:4:15","type":"","value":"0x40"},{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"18570:6:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18582:1:15","type":"","value":"5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18589:1:15","type":"","value":"5"},{"arguments":[{"name":"outputLength","nodeType":"YulIdentifier","src":"18596:12:15"},{"kind":"number","nodeType":"YulLiteral","src":"18610:2:15","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18592:3:15"},"nodeType":"YulFunctionCall","src":"18592:21:15"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"18585:3:15"},"nodeType":"YulFunctionCall","src":"18585:29:15"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18578:3:15"},"nodeType":"YulFunctionCall","src":"18578:37:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18566:3:15"},"nodeType":"YulFunctionCall","src":"18566:50:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18553:6:15"},"nodeType":"YulFunctionCall","src":"18553:64:15"},"nodeType":"YulExpressionStatement","src":"18553:64:15"}]},"evmVersion":"paris","externalReferences":[{"declaration":3070,"isOffset":false,"isSlot":false,"src":"18519:6:15","valueSize":1},{"declaration":3070,"isOffset":false,"isSlot":false,"src":"18570:6:15","valueSize":1},{"declaration":3080,"isOffset":false,"isSlot":false,"src":"18527:12:15","valueSize":1},{"declaration":3080,"isOffset":false,"isSlot":false,"src":"18596:12:15","valueSize":1}],"flags":["memory-safe"],"id":3213,"nodeType":"InlineAssembly","src":"18473:154:15"},{"expression":{"arguments":[{"id":3216,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"18651:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3215,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18644:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3214,"name":"string","nodeType":"ElementaryTypeName","src":"18644:6:15","typeDescriptions":{}}},"id":3217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18644:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3061,"id":3218,"nodeType":"Return","src":"18637:21:15"}]},"documentation":{"id":3055,"nodeType":"StructuredDocumentation","src":"16674:576:15","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":3220,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17264:10:15","nodeType":"FunctionDefinition","parameters":{"id":3058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3057,"mutability":"mutable","name":"input","nameLocation":"17289:5:15","nodeType":"VariableDeclaration","scope":3220,"src":"17275:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3056,"name":"string","nodeType":"ElementaryTypeName","src":"17275:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17274:21:15"},"returnParameters":{"id":3061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3060,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3220,"src":"17319:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3059,"name":"string","nodeType":"ElementaryTypeName","src":"17319:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17318:15:15"},"scope":3233,"src":"17255:1410:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3231,"nodeType":"Block","src":"19050:225:15","statements":[{"AST":{"nodeType":"YulBlock","src":"19199:70:15","statements":[{"nodeType":"YulAssignment","src":"19213:46:15","value":{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"19232:6:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19244:4:15","type":"","value":"0x20"},{"name":"offset","nodeType":"YulIdentifier","src":"19250:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19240:3:15"},"nodeType":"YulFunctionCall","src":"19240:17:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19228:3:15"},"nodeType":"YulFunctionCall","src":"19228:30:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19222:5:15"},"nodeType":"YulFunctionCall","src":"19222:37:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19213:5:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3223,"isOffset":false,"isSlot":false,"src":"19232:6:15","valueSize":1},{"declaration":3225,"isOffset":false,"isSlot":false,"src":"19250:6:15","valueSize":1},{"declaration":3228,"isOffset":false,"isSlot":false,"src":"19213:5:15","valueSize":1}],"flags":["memory-safe"],"id":3230,"nodeType":"InlineAssembly","src":"19174:95:15"}]},"documentation":{"id":3221,"nodeType":"StructuredDocumentation","src":"18671:268:15","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":3232,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18953:22:15","nodeType":"FunctionDefinition","parameters":{"id":3226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3223,"mutability":"mutable","name":"buffer","nameLocation":"18989:6:15","nodeType":"VariableDeclaration","scope":3232,"src":"18976:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3222,"name":"bytes","nodeType":"ElementaryTypeName","src":"18976:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3225,"mutability":"mutable","name":"offset","nameLocation":"19005:6:15","nodeType":"VariableDeclaration","scope":3232,"src":"18997:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3224,"name":"uint256","nodeType":"ElementaryTypeName","src":"18997:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18975:37:15"},"returnParameters":{"id":3229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3228,"mutability":"mutable","name":"value","nameLocation":"19043:5:15","nodeType":"VariableDeclaration","scope":3232,"src":"19035:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3227,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19035:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19034:15:15"},"scope":3233,"src":"18944:331:15","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3234,"src":"297:18980:15","usedErrors":[1891,1894,1897],"usedEvents":[]}],"src":"101:19177:15"},"id":15},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[3257],"IERC165":[3269]},"id":3258,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3235,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:16"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":3237,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3258,"sourceUnit":3270,"src":"140:38:16","symbolAliases":[{"foreign":{"id":3236,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"148:7:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3239,"name":"IERC165","nameLocations":["688:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":3269,"src":"688:7:16"},"id":3240,"nodeType":"InheritanceSpecifier","src":"688:7:16"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":3238,"nodeType":"StructuredDocumentation","src":"180:479:16","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":3257,"linearizedBaseContracts":[3257,3269],"name":"ERC165","nameLocation":"678:6:16","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[3268],"body":{"id":3255,"nodeType":"Block","src":"845:64:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3248,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"862:11:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3250,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"882:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$3269_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$3269_$","typeString":"type(contract IERC165)"}],"id":3249,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"877:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"877:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$3269","typeString":"type(contract IERC165)"}},"id":3252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"891:11:16","memberName":"interfaceId","nodeType":"MemberAccess","src":"877:25:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"862:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3247,"id":3254,"nodeType":"Return","src":"855:47:16"}]},"documentation":{"id":3241,"nodeType":"StructuredDocumentation","src":"702:56:16","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":3256,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"772:17:16","nodeType":"FunctionDefinition","parameters":{"id":3244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3243,"mutability":"mutable","name":"interfaceId","nameLocation":"797:11:16","nodeType":"VariableDeclaration","scope":3256,"src":"790:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3242,"name":"bytes4","nodeType":"ElementaryTypeName","src":"790:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"789:20:16"},"returnParameters":{"id":3247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3246,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3256,"src":"839:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3245,"name":"bool","nodeType":"ElementaryTypeName","src":"839:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"838:6:16"},"scope":3257,"src":"763:146:16","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":3258,"src":"660:251:16","usedErrors":[],"usedEvents":[]}],"src":"114:798:16"},"id":16},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[3269]},"id":3270,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3259,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:17"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":3260,"nodeType":"StructuredDocumentation","src":"141:280:17","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":3269,"linearizedBaseContracts":[3269],"name":"IERC165","nameLocation":"432:7:17","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3261,"nodeType":"StructuredDocumentation","src":"446:340:17","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":3268,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:17","nodeType":"FunctionDefinition","parameters":{"id":3264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3263,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:17","nodeType":"VariableDeclaration","scope":3268,"src":"818:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3262,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:17"},"returnParameters":{"id":3267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3266,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3268,"src":"861:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3265,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:17"},"scope":3269,"src":"791:76:17","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3270,"src":"422:447:17","usedErrors":[],"usedEvents":[]}],"src":"115:755:17"},"id":17},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[4890],"Panic":[1831],"SafeCast":[6655]},"id":4891,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3271,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:18"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":3273,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4891,"sourceUnit":1832,"src":"129:35:18","symbolAliases":[{"foreign":{"id":3272,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"137:5:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":3275,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4891,"sourceUnit":6656,"src":"165:40:18","symbolAliases":[{"foreign":{"id":3274,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6655,"src":"173:8:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3276,"nodeType":"StructuredDocumentation","src":"207:73:18","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4890,"linearizedBaseContracts":[4890],"name":"Math","nameLocation":"289:4:18","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":3281,"members":[{"id":3277,"name":"Floor","nameLocation":"324:5:18","nodeType":"EnumValue","src":"324:5:18"},{"id":3278,"name":"Ceil","nameLocation":"367:4:18","nodeType":"EnumValue","src":"367:4:18"},{"id":3279,"name":"Trunc","nameLocation":"409:5:18","nodeType":"EnumValue","src":"409:5:18"},{"id":3280,"name":"Expand","nameLocation":"439:6:18","nodeType":"EnumValue","src":"439:6:18"}],"name":"Rounding","nameLocation":"305:8:18","nodeType":"EnumDefinition","src":"300:169:18"},{"body":{"id":3294,"nodeType":"Block","src":"731:112:18","statements":[{"AST":{"nodeType":"YulBlock","src":"766:71:18","statements":[{"nodeType":"YulAssignment","src":"780:16:18","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"791:1:18"},{"name":"b","nodeType":"YulIdentifier","src":"794:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"787:3:18"},"nodeType":"YulFunctionCall","src":"787:9:18"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"780:3:18"}]},{"nodeType":"YulAssignment","src":"809:18:18","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"820:3:18"},{"name":"a","nodeType":"YulIdentifier","src":"825:1:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"817:2:18"},"nodeType":"YulFunctionCall","src":"817:10:18"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"809:4:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3284,"isOffset":false,"isSlot":false,"src":"791:1:18","valueSize":1},{"declaration":3284,"isOffset":false,"isSlot":false,"src":"825:1:18","valueSize":1},{"declaration":3286,"isOffset":false,"isSlot":false,"src":"794:1:18","valueSize":1},{"declaration":3289,"isOffset":false,"isSlot":false,"src":"809:4:18","valueSize":1},{"declaration":3291,"isOffset":false,"isSlot":false,"src":"780:3:18","valueSize":1},{"declaration":3291,"isOffset":false,"isSlot":false,"src":"820:3:18","valueSize":1}],"flags":["memory-safe"],"id":3293,"nodeType":"InlineAssembly","src":"741:96:18"}]},"documentation":{"id":3282,"nodeType":"StructuredDocumentation","src":"475:163:18","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":3295,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:18","nodeType":"FunctionDefinition","parameters":{"id":3287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3284,"mutability":"mutable","name":"a","nameLocation":"667:1:18","nodeType":"VariableDeclaration","scope":3295,"src":"659:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3283,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3286,"mutability":"mutable","name":"b","nameLocation":"678:1:18","nodeType":"VariableDeclaration","scope":3295,"src":"670:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3285,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:18"},"returnParameters":{"id":3292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3289,"mutability":"mutable","name":"high","nameLocation":"712:4:18","nodeType":"VariableDeclaration","scope":3295,"src":"704:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3288,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3291,"mutability":"mutable","name":"low","nameLocation":"726:3:18","nodeType":"VariableDeclaration","scope":3295,"src":"718:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3290,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:18"},"scope":4890,"src":"643:200:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3308,"nodeType":"Block","src":"1115:462:18","statements":[{"AST":{"nodeType":"YulBlock","src":"1437:134:18","statements":[{"nodeType":"YulVariableDeclaration","src":"1451:30:18","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1468:1:18"},{"name":"b","nodeType":"YulIdentifier","src":"1471:1:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1478:1:18","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1474:3:18"},"nodeType":"YulFunctionCall","src":"1474:6:18"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"1461:6:18"},"nodeType":"YulFunctionCall","src":"1461:20:18"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"1455:2:18","type":""}]},{"nodeType":"YulAssignment","src":"1494:16:18","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1505:1:18"},{"name":"b","nodeType":"YulIdentifier","src":"1508:1:18"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1501:3:18"},"nodeType":"YulFunctionCall","src":"1501:9:18"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"1494:3:18"}]},{"nodeType":"YulAssignment","src":"1523:38:18","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1539:2:18"},{"name":"low","nodeType":"YulIdentifier","src":"1543:3:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1535:3:18"},"nodeType":"YulFunctionCall","src":"1535:12:18"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1552:2:18"},{"name":"low","nodeType":"YulIdentifier","src":"1556:3:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1549:2:18"},"nodeType":"YulFunctionCall","src":"1549:11:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1531:3:18"},"nodeType":"YulFunctionCall","src":"1531:30:18"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"1523:4:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3298,"isOffset":false,"isSlot":false,"src":"1468:1:18","valueSize":1},{"declaration":3298,"isOffset":false,"isSlot":false,"src":"1505:1:18","valueSize":1},{"declaration":3300,"isOffset":false,"isSlot":false,"src":"1471:1:18","valueSize":1},{"declaration":3300,"isOffset":false,"isSlot":false,"src":"1508:1:18","valueSize":1},{"declaration":3303,"isOffset":false,"isSlot":false,"src":"1523:4:18","valueSize":1},{"declaration":3305,"isOffset":false,"isSlot":false,"src":"1494:3:18","valueSize":1},{"declaration":3305,"isOffset":false,"isSlot":false,"src":"1543:3:18","valueSize":1},{"declaration":3305,"isOffset":false,"isSlot":false,"src":"1556:3:18","valueSize":1}],"flags":["memory-safe"],"id":3307,"nodeType":"InlineAssembly","src":"1412:159:18"}]},"documentation":{"id":3296,"nodeType":"StructuredDocumentation","src":"849:173:18","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":3309,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:18","nodeType":"FunctionDefinition","parameters":{"id":3301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3298,"mutability":"mutable","name":"a","nameLocation":"1051:1:18","nodeType":"VariableDeclaration","scope":3309,"src":"1043:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3297,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3300,"mutability":"mutable","name":"b","nameLocation":"1062:1:18","nodeType":"VariableDeclaration","scope":3309,"src":"1054:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3299,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:18"},"returnParameters":{"id":3306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3303,"mutability":"mutable","name":"high","nameLocation":"1096:4:18","nodeType":"VariableDeclaration","scope":3309,"src":"1088:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3302,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3305,"mutability":"mutable","name":"low","nameLocation":"1110:3:18","nodeType":"VariableDeclaration","scope":3309,"src":"1102:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3304,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:18"},"scope":4890,"src":"1027:550:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3343,"nodeType":"Block","src":"1784:149:18","statements":[{"id":3342,"nodeType":"UncheckedBlock","src":"1794:133:18","statements":[{"assignments":[3322],"declarations":[{"constant":false,"id":3322,"mutability":"mutable","name":"c","nameLocation":"1826:1:18","nodeType":"VariableDeclaration","scope":3342,"src":"1818:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3321,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3326,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3323,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3312,"src":"1830:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3324,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"1834:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:18"},{"expression":{"id":3331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3327,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3317,"src":"1849:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3328,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"1859:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3329,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3312,"src":"1864:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3332,"nodeType":"ExpressionStatement","src":"1849:16:18"},{"expression":{"id":3340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3333,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"1879:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3334,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"1888:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3337,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3317,"src":"1908:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3335,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6655,"src":"1892:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6655_$","typeString":"type(library SafeCast)"}},"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6654,"src":"1892:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3341,"nodeType":"ExpressionStatement","src":"1879:37:18"}]}]},"documentation":{"id":3310,"nodeType":"StructuredDocumentation","src":"1583:105:18","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":3344,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:18","nodeType":"FunctionDefinition","parameters":{"id":3315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3312,"mutability":"mutable","name":"a","nameLocation":"1717:1:18","nodeType":"VariableDeclaration","scope":3344,"src":"1709:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3311,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3314,"mutability":"mutable","name":"b","nameLocation":"1728:1:18","nodeType":"VariableDeclaration","scope":3344,"src":"1720:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3313,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:18"},"returnParameters":{"id":3320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3317,"mutability":"mutable","name":"success","nameLocation":"1759:7:18","nodeType":"VariableDeclaration","scope":3344,"src":"1754:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3316,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3319,"mutability":"mutable","name":"result","nameLocation":"1776:6:18","nodeType":"VariableDeclaration","scope":3344,"src":"1768:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3318,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:18"},"scope":4890,"src":"1693:240:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3378,"nodeType":"Block","src":"2143:149:18","statements":[{"id":3377,"nodeType":"UncheckedBlock","src":"2153:133:18","statements":[{"assignments":[3357],"declarations":[{"constant":false,"id":3357,"mutability":"mutable","name":"c","nameLocation":"2185:1:18","nodeType":"VariableDeclaration","scope":3377,"src":"2177:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3356,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3361,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3358,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3347,"src":"2189:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3359,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3349,"src":"2193:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:18"},{"expression":{"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3362,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"2208:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3363,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3357,"src":"2218:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3364,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3347,"src":"2223:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3367,"nodeType":"ExpressionStatement","src":"2208:16:18"},{"expression":{"id":3375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3368,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3354,"src":"2238:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3369,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3357,"src":"2247:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3372,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"2267:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3370,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6655,"src":"2251:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6655_$","typeString":"type(library SafeCast)"}},"id":3371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6654,"src":"2251:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3376,"nodeType":"ExpressionStatement","src":"2238:37:18"}]}]},"documentation":{"id":3345,"nodeType":"StructuredDocumentation","src":"1939:108:18","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":3379,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:18","nodeType":"FunctionDefinition","parameters":{"id":3350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3347,"mutability":"mutable","name":"a","nameLocation":"2076:1:18","nodeType":"VariableDeclaration","scope":3379,"src":"2068:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3346,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3349,"mutability":"mutable","name":"b","nameLocation":"2087:1:18","nodeType":"VariableDeclaration","scope":3379,"src":"2079:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3348,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:18"},"returnParameters":{"id":3355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3352,"mutability":"mutable","name":"success","nameLocation":"2118:7:18","nodeType":"VariableDeclaration","scope":3379,"src":"2113:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3351,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3354,"mutability":"mutable","name":"result","nameLocation":"2135:6:18","nodeType":"VariableDeclaration","scope":3379,"src":"2127:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3353,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:18"},"scope":4890,"src":"2052:240:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3408,"nodeType":"Block","src":"2505:391:18","statements":[{"id":3407,"nodeType":"UncheckedBlock","src":"2515:375:18","statements":[{"assignments":[3392],"declarations":[{"constant":false,"id":3392,"mutability":"mutable","name":"c","nameLocation":"2547:1:18","nodeType":"VariableDeclaration","scope":3407,"src":"2539:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3391,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3396,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3393,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3382,"src":"2551:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3394,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3384,"src":"2555:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:18"},{"AST":{"nodeType":"YulBlock","src":"2595:188:18","statements":[{"nodeType":"YulAssignment","src":"2727:42:18","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nodeType":"YulIdentifier","src":"2748:1:18"},{"name":"a","nodeType":"YulIdentifier","src":"2751:1:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2744:3:18"},"nodeType":"YulFunctionCall","src":"2744:9:18"},{"name":"b","nodeType":"YulIdentifier","src":"2755:1:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2741:2:18"},"nodeType":"YulFunctionCall","src":"2741:16:18"},{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"2766:1:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2759:6:18"},"nodeType":"YulFunctionCall","src":"2759:9:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2738:2:18"},"nodeType":"YulFunctionCall","src":"2738:31:18"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"2727:7:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3382,"isOffset":false,"isSlot":false,"src":"2751:1:18","valueSize":1},{"declaration":3382,"isOffset":false,"isSlot":false,"src":"2766:1:18","valueSize":1},{"declaration":3384,"isOffset":false,"isSlot":false,"src":"2755:1:18","valueSize":1},{"declaration":3392,"isOffset":false,"isSlot":false,"src":"2748:1:18","valueSize":1},{"declaration":3387,"isOffset":false,"isSlot":false,"src":"2727:7:18","valueSize":1}],"flags":["memory-safe"],"id":3397,"nodeType":"InlineAssembly","src":"2570:213:18"},{"expression":{"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3398,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"2842:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3399,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3392,"src":"2851:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3402,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"2871:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3400,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6655,"src":"2855:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6655_$","typeString":"type(library SafeCast)"}},"id":3401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6654,"src":"2855:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3406,"nodeType":"ExpressionStatement","src":"2842:37:18"}]}]},"documentation":{"id":3380,"nodeType":"StructuredDocumentation","src":"2298:111:18","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":3409,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:18","nodeType":"FunctionDefinition","parameters":{"id":3385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3382,"mutability":"mutable","name":"a","nameLocation":"2438:1:18","nodeType":"VariableDeclaration","scope":3409,"src":"2430:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3381,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3384,"mutability":"mutable","name":"b","nameLocation":"2449:1:18","nodeType":"VariableDeclaration","scope":3409,"src":"2441:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3383,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:18"},"returnParameters":{"id":3390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3387,"mutability":"mutable","name":"success","nameLocation":"2480:7:18","nodeType":"VariableDeclaration","scope":3409,"src":"2475:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3386,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3389,"mutability":"mutable","name":"result","nameLocation":"2497:6:18","nodeType":"VariableDeclaration","scope":3409,"src":"2489:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3388,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:18"},"scope":4890,"src":"2414:482:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3429,"nodeType":"Block","src":"3111:231:18","statements":[{"id":3428,"nodeType":"UncheckedBlock","src":"3121:215:18","statements":[{"expression":{"id":3425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3421,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"3145:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3422,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3414,"src":"3155:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3426,"nodeType":"ExpressionStatement","src":"3145:15:18"},{"AST":{"nodeType":"YulBlock","src":"3199:127:18","statements":[{"nodeType":"YulAssignment","src":"3293:19:18","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3307:1:18"},{"name":"b","nodeType":"YulIdentifier","src":"3310:1:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3303:3:18"},"nodeType":"YulFunctionCall","src":"3303:9:18"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3293:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3412,"isOffset":false,"isSlot":false,"src":"3307:1:18","valueSize":1},{"declaration":3414,"isOffset":false,"isSlot":false,"src":"3310:1:18","valueSize":1},{"declaration":3419,"isOffset":false,"isSlot":false,"src":"3293:6:18","valueSize":1}],"flags":["memory-safe"],"id":3427,"nodeType":"InlineAssembly","src":"3174:152:18"}]}]},"documentation":{"id":3410,"nodeType":"StructuredDocumentation","src":"2902:113:18","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":3430,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:18","nodeType":"FunctionDefinition","parameters":{"id":3415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3412,"mutability":"mutable","name":"a","nameLocation":"3044:1:18","nodeType":"VariableDeclaration","scope":3430,"src":"3036:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3411,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3414,"mutability":"mutable","name":"b","nameLocation":"3055:1:18","nodeType":"VariableDeclaration","scope":3430,"src":"3047:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3413,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:18"},"returnParameters":{"id":3420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3417,"mutability":"mutable","name":"success","nameLocation":"3086:7:18","nodeType":"VariableDeclaration","scope":3430,"src":"3081:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3416,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3419,"mutability":"mutable","name":"result","nameLocation":"3103:6:18","nodeType":"VariableDeclaration","scope":3430,"src":"3095:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3418,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:18"},"scope":4890,"src":"3020:322:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3450,"nodeType":"Block","src":"3567:231:18","statements":[{"id":3449,"nodeType":"UncheckedBlock","src":"3577:215:18","statements":[{"expression":{"id":3446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3442,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3438,"src":"3601:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3443,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"3611:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3447,"nodeType":"ExpressionStatement","src":"3601:15:18"},{"AST":{"nodeType":"YulBlock","src":"3655:127:18","statements":[{"nodeType":"YulAssignment","src":"3749:19:18","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3763:1:18"},{"name":"b","nodeType":"YulIdentifier","src":"3766:1:18"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"3759:3:18"},"nodeType":"YulFunctionCall","src":"3759:9:18"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3749:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3433,"isOffset":false,"isSlot":false,"src":"3763:1:18","valueSize":1},{"declaration":3435,"isOffset":false,"isSlot":false,"src":"3766:1:18","valueSize":1},{"declaration":3440,"isOffset":false,"isSlot":false,"src":"3749:6:18","valueSize":1}],"flags":["memory-safe"],"id":3448,"nodeType":"InlineAssembly","src":"3630:152:18"}]}]},"documentation":{"id":3431,"nodeType":"StructuredDocumentation","src":"3348:123:18","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":3451,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:18","nodeType":"FunctionDefinition","parameters":{"id":3436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3433,"mutability":"mutable","name":"a","nameLocation":"3500:1:18","nodeType":"VariableDeclaration","scope":3451,"src":"3492:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3432,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3435,"mutability":"mutable","name":"b","nameLocation":"3511:1:18","nodeType":"VariableDeclaration","scope":3451,"src":"3503:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3434,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:18"},"returnParameters":{"id":3441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3438,"mutability":"mutable","name":"success","nameLocation":"3542:7:18","nodeType":"VariableDeclaration","scope":3451,"src":"3537:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3437,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3440,"mutability":"mutable","name":"result","nameLocation":"3559:6:18","nodeType":"VariableDeclaration","scope":3451,"src":"3551:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3439,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:18"},"scope":4890,"src":"3476:322:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3480,"nodeType":"Block","src":"3989:122:18","statements":[{"assignments":[3462,3464],"declarations":[{"constant":false,"id":3462,"mutability":"mutable","name":"success","nameLocation":"4005:7:18","nodeType":"VariableDeclaration","scope":3480,"src":"4000:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3461,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3464,"mutability":"mutable","name":"result","nameLocation":"4022:6:18","nodeType":"VariableDeclaration","scope":3480,"src":"4014:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3463,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3469,"initialValue":{"arguments":[{"id":3466,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3454,"src":"4039:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3467,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"4042:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3465,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"4032:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:18"},{"expression":{"arguments":[{"id":3471,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3462,"src":"4069:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3472,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3464,"src":"4078:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":3475,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3474,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3473,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:18","memberName":"max","nodeType":"MemberAccess","src":"4086:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3470,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"4061:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3460,"id":3479,"nodeType":"Return","src":"4054:50:18"}]},"documentation":{"id":3452,"nodeType":"StructuredDocumentation","src":"3804:103:18","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":3481,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:18","nodeType":"FunctionDefinition","parameters":{"id":3457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3454,"mutability":"mutable","name":"a","nameLocation":"3943:1:18","nodeType":"VariableDeclaration","scope":3481,"src":"3935:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3453,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3456,"mutability":"mutable","name":"b","nameLocation":"3954:1:18","nodeType":"VariableDeclaration","scope":3481,"src":"3946:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3455,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:18"},"returnParameters":{"id":3460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3459,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3481,"src":"3980:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3458,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:18"},"scope":4890,"src":"3912:199:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3500,"nodeType":"Block","src":"4294:73:18","statements":[{"assignments":[null,3492],"declarations":[null,{"constant":false,"id":3492,"mutability":"mutable","name":"result","nameLocation":"4315:6:18","nodeType":"VariableDeclaration","scope":3500,"src":"4307:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3491,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3497,"initialValue":{"arguments":[{"id":3494,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3484,"src":"4332:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3495,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"4335:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3493,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"4325:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:18"},{"expression":{"id":3498,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"4354:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3490,"id":3499,"nodeType":"Return","src":"4347:13:18"}]},"documentation":{"id":3482,"nodeType":"StructuredDocumentation","src":"4117:95:18","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":3501,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:18","nodeType":"FunctionDefinition","parameters":{"id":3487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3484,"mutability":"mutable","name":"a","nameLocation":"4248:1:18","nodeType":"VariableDeclaration","scope":3501,"src":"4240:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3483,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3486,"mutability":"mutable","name":"b","nameLocation":"4259:1:18","nodeType":"VariableDeclaration","scope":3501,"src":"4251:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3485,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:18"},"returnParameters":{"id":3490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3489,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3501,"src":"4285:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3488,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:18"},"scope":4890,"src":"4217:150:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3530,"nodeType":"Block","src":"4564:122:18","statements":[{"assignments":[3512,3514],"declarations":[{"constant":false,"id":3512,"mutability":"mutable","name":"success","nameLocation":"4580:7:18","nodeType":"VariableDeclaration","scope":3530,"src":"4575:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3511,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3514,"mutability":"mutable","name":"result","nameLocation":"4597:6:18","nodeType":"VariableDeclaration","scope":3530,"src":"4589:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3513,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3519,"initialValue":{"arguments":[{"id":3516,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"4614:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3517,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3506,"src":"4617:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3515,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"4607:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:18"},{"expression":{"arguments":[{"id":3521,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3512,"src":"4644:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3522,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3514,"src":"4653:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":3525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3524,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3523,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:18","memberName":"max","nodeType":"MemberAccess","src":"4661:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3520,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"4636:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3510,"id":3529,"nodeType":"Return","src":"4629:50:18"}]},"documentation":{"id":3502,"nodeType":"StructuredDocumentation","src":"4373:109:18","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":3531,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:18","nodeType":"FunctionDefinition","parameters":{"id":3507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3504,"mutability":"mutable","name":"a","nameLocation":"4518:1:18","nodeType":"VariableDeclaration","scope":3531,"src":"4510:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3503,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3506,"mutability":"mutable","name":"b","nameLocation":"4529:1:18","nodeType":"VariableDeclaration","scope":3531,"src":"4521:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3505,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:18"},"returnParameters":{"id":3510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3509,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3531,"src":"4555:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3508,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:18"},"scope":4890,"src":"4487:199:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3557,"nodeType":"Block","src":"5158:207:18","statements":[{"id":3556,"nodeType":"UncheckedBlock","src":"5168:191:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3543,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3538,"src":"5306:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3544,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3536,"src":"5312:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3545,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3538,"src":"5316:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3547,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3550,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"5337:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3548,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6655,"src":"5321:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6655_$","typeString":"type(library SafeCast)"}},"id":3549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6654,"src":"5321:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3553,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3542,"id":3555,"nodeType":"Return","src":"5299:49:18"}]}]},"documentation":{"id":3532,"nodeType":"StructuredDocumentation","src":"4692:374:18","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":3558,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:18","nodeType":"FunctionDefinition","parameters":{"id":3539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3534,"mutability":"mutable","name":"condition","nameLocation":"5093:9:18","nodeType":"VariableDeclaration","scope":3558,"src":"5088:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3533,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3536,"mutability":"mutable","name":"a","nameLocation":"5112:1:18","nodeType":"VariableDeclaration","scope":3558,"src":"5104:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3535,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3538,"mutability":"mutable","name":"b","nameLocation":"5123:1:18","nodeType":"VariableDeclaration","scope":3558,"src":"5115:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3537,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:18"},"returnParameters":{"id":3542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3541,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3558,"src":"5149:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3540,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:18"},"scope":4890,"src":"5071:294:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3576,"nodeType":"Block","src":"5502:44:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3569,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3561,"src":"5527:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3570,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"5531:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3572,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3561,"src":"5534:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3573,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"5537:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3568,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"5519:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3567,"id":3575,"nodeType":"Return","src":"5512:27:18"}]},"documentation":{"id":3559,"nodeType":"StructuredDocumentation","src":"5371:59:18","text":" @dev Returns the largest of two numbers."},"id":3577,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:18","nodeType":"FunctionDefinition","parameters":{"id":3564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3561,"mutability":"mutable","name":"a","nameLocation":"5456:1:18","nodeType":"VariableDeclaration","scope":3577,"src":"5448:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3560,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3563,"mutability":"mutable","name":"b","nameLocation":"5467:1:18","nodeType":"VariableDeclaration","scope":3577,"src":"5459:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3562,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:18"},"returnParameters":{"id":3567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3566,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3577,"src":"5493:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3565,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:18"},"scope":4890,"src":"5435:111:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3595,"nodeType":"Block","src":"5684:44:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3588,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3580,"src":"5709:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3589,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3582,"src":"5713:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3591,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3580,"src":"5716:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3592,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3582,"src":"5719:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3587,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"5701:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3586,"id":3594,"nodeType":"Return","src":"5694:27:18"}]},"documentation":{"id":3578,"nodeType":"StructuredDocumentation","src":"5552:60:18","text":" @dev Returns the smallest of two numbers."},"id":3596,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:18","nodeType":"FunctionDefinition","parameters":{"id":3583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3580,"mutability":"mutable","name":"a","nameLocation":"5638:1:18","nodeType":"VariableDeclaration","scope":3596,"src":"5630:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3579,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3582,"mutability":"mutable","name":"b","nameLocation":"5649:1:18","nodeType":"VariableDeclaration","scope":3596,"src":"5641:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3581,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:18"},"returnParameters":{"id":3586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3585,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3596,"src":"5675:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3584,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:18"},"scope":4890,"src":"5617:111:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3618,"nodeType":"Block","src":"5912:82:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3606,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"5967:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3607,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"5971:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3609,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3610,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"5977:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3611,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"5981:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3613,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3605,"id":3617,"nodeType":"Return","src":"5959:28:18"}]},"documentation":{"id":3597,"nodeType":"StructuredDocumentation","src":"5734:102:18","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3619,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:18","nodeType":"FunctionDefinition","parameters":{"id":3602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3599,"mutability":"mutable","name":"a","nameLocation":"5866:1:18","nodeType":"VariableDeclaration","scope":3619,"src":"5858:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3598,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3601,"mutability":"mutable","name":"b","nameLocation":"5877:1:18","nodeType":"VariableDeclaration","scope":3619,"src":"5869:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3600,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:18"},"returnParameters":{"id":3605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3604,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3619,"src":"5903:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3603,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:18"},"scope":4890,"src":"5841:153:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3659,"nodeType":"Block","src":"6286:633:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3629,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3624,"src":"6300:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3640,"nodeType":"IfStatement","src":"6296:150:18","trueBody":{"id":3639,"nodeType":"Block","src":"6308:138:18","statements":[{"expression":{"arguments":[{"expression":{"id":3635,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"6412:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1831_$","typeString":"type(library Panic)"}},"id":3636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:18","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1798,"src":"6412:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3632,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"6400:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1831_$","typeString":"type(library Panic)"}},"id":3634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:18","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1830,"src":"6400:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3638,"nodeType":"ExpressionStatement","src":"6400:35:18"}]}},{"id":3658,"nodeType":"UncheckedBlock","src":"6829:84:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3643,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3622,"src":"6876:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3641,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6655,"src":"6860:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6655_$","typeString":"type(library SafeCast)"}},"id":3642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6654,"src":"6860:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3647,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3622,"src":"6887:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3650,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3651,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3624,"src":"6896:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3655,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3628,"id":3657,"nodeType":"Return","src":"6853:49:18"}]}]},"documentation":{"id":3620,"nodeType":"StructuredDocumentation","src":"6000:210:18","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":3660,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:18","nodeType":"FunctionDefinition","parameters":{"id":3625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3622,"mutability":"mutable","name":"a","nameLocation":"6240:1:18","nodeType":"VariableDeclaration","scope":3660,"src":"6232:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3621,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3624,"mutability":"mutable","name":"b","nameLocation":"6251:1:18","nodeType":"VariableDeclaration","scope":3660,"src":"6243:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3623,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:18"},"returnParameters":{"id":3628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3627,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3660,"src":"6277:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3626,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:18"},"scope":4890,"src":"6215:704:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3795,"nodeType":"Block","src":"7340:3585:18","statements":[{"id":3794,"nodeType":"UncheckedBlock","src":"7350:3569:18","statements":[{"assignments":[3673,3675],"declarations":[{"constant":false,"id":3673,"mutability":"mutable","name":"high","nameLocation":"7383:4:18","nodeType":"VariableDeclaration","scope":3794,"src":"7375:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3672,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3675,"mutability":"mutable","name":"low","nameLocation":"7397:3:18","nodeType":"VariableDeclaration","scope":3794,"src":"7389:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3674,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3680,"initialValue":{"arguments":[{"id":3677,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3663,"src":"7411:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3678,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"7414:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3676,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3309,"src":"7404:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":3679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3681,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"7498:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3689,"nodeType":"IfStatement","src":"7494:365:18","trueBody":{"id":3688,"nodeType":"Block","src":"7509:350:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3684,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3675,"src":"7827:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3685,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3667,"src":"7833:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3671,"id":3687,"nodeType":"Return","src":"7820:24:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3690,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3667,"src":"7969:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3691,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"7984:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3708,"nodeType":"IfStatement","src":"7965:142:18","trueBody":{"id":3707,"nodeType":"Block","src":"7990:117:18","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3697,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3667,"src":"8028:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3700,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"8046:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1831_$","typeString":"type(library Panic)"}},"id":3701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:18","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1798,"src":"8046:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3702,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"8070:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1831_$","typeString":"type(library Panic)"}},"id":3703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:18","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1794,"src":"8070:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3696,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"8020:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3693,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"8008:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1831_$","typeString":"type(library Panic)"}},"id":3695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:18","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1830,"src":"8008:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3706,"nodeType":"ExpressionStatement","src":"8008:84:18"}]}},{"assignments":[3710],"declarations":[{"constant":false,"id":3710,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:18","nodeType":"VariableDeclaration","scope":3794,"src":"8359:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3709,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3711,"nodeType":"VariableDeclarationStatement","src":"8359:17:18"},{"AST":{"nodeType":"YulBlock","src":"8415:283:18","statements":[{"nodeType":"YulAssignment","src":"8484:38:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8504:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"8507:1:18"},{"name":"denominator","nodeType":"YulIdentifier","src":"8510:11:18"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"8497:6:18"},"nodeType":"YulFunctionCall","src":"8497:25:18"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"8484:9:18"}]},{"nodeType":"YulAssignment","src":"8604:37:18","value":{"arguments":[{"name":"high","nodeType":"YulIdentifier","src":"8616:4:18"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"8625:9:18"},{"name":"low","nodeType":"YulIdentifier","src":"8636:3:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8622:2:18"},"nodeType":"YulFunctionCall","src":"8622:18:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8612:3:18"},"nodeType":"YulFunctionCall","src":"8612:29:18"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"8604:4:18"}]},{"nodeType":"YulAssignment","src":"8658:26:18","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"8669:3:18"},{"name":"remainder","nodeType":"YulIdentifier","src":"8674:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8665:3:18"},"nodeType":"YulFunctionCall","src":"8665:19:18"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"8658:3:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3667,"isOffset":false,"isSlot":false,"src":"8510:11:18","valueSize":1},{"declaration":3673,"isOffset":false,"isSlot":false,"src":"8604:4:18","valueSize":1},{"declaration":3673,"isOffset":false,"isSlot":false,"src":"8616:4:18","valueSize":1},{"declaration":3675,"isOffset":false,"isSlot":false,"src":"8636:3:18","valueSize":1},{"declaration":3675,"isOffset":false,"isSlot":false,"src":"8658:3:18","valueSize":1},{"declaration":3675,"isOffset":false,"isSlot":false,"src":"8669:3:18","valueSize":1},{"declaration":3710,"isOffset":false,"isSlot":false,"src":"8484:9:18","valueSize":1},{"declaration":3710,"isOffset":false,"isSlot":false,"src":"8625:9:18","valueSize":1},{"declaration":3710,"isOffset":false,"isSlot":false,"src":"8674:9:18","valueSize":1},{"declaration":3663,"isOffset":false,"isSlot":false,"src":"8504:1:18","valueSize":1},{"declaration":3665,"isOffset":false,"isSlot":false,"src":"8507:1:18","valueSize":1}],"flags":["memory-safe"],"id":3712,"nodeType":"InlineAssembly","src":"8390:308:18"},{"assignments":[3714],"declarations":[{"constant":false,"id":3714,"mutability":"mutable","name":"twos","nameLocation":"8910:4:18","nodeType":"VariableDeclaration","scope":3794,"src":"8902:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3713,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3721,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3715,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3667,"src":"8917:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":3716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3717,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3667,"src":"8936:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3719,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:18"},{"AST":{"nodeType":"YulBlock","src":"8987:359:18","statements":[{"nodeType":"YulAssignment","src":"9052:37:18","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"9071:11:18"},{"name":"twos","nodeType":"YulIdentifier","src":"9084:4:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9067:3:18"},"nodeType":"YulFunctionCall","src":"9067:22:18"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"9052:11:18"}]},{"nodeType":"YulAssignment","src":"9153:21:18","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"9164:3:18"},{"name":"twos","nodeType":"YulIdentifier","src":"9169:4:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9160:3:18"},"nodeType":"YulFunctionCall","src":"9160:14:18"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"9153:3:18"}]},{"nodeType":"YulAssignment","src":"9293:39:18","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9313:1:18","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"9316:4:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9309:3:18"},"nodeType":"YulFunctionCall","src":"9309:12:18"},{"name":"twos","nodeType":"YulIdentifier","src":"9323:4:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9305:3:18"},"nodeType":"YulFunctionCall","src":"9305:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"9330:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9301:3:18"},"nodeType":"YulFunctionCall","src":"9301:31:18"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"9293:4:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3667,"isOffset":false,"isSlot":false,"src":"9052:11:18","valueSize":1},{"declaration":3667,"isOffset":false,"isSlot":false,"src":"9071:11:18","valueSize":1},{"declaration":3675,"isOffset":false,"isSlot":false,"src":"9153:3:18","valueSize":1},{"declaration":3675,"isOffset":false,"isSlot":false,"src":"9164:3:18","valueSize":1},{"declaration":3714,"isOffset":false,"isSlot":false,"src":"9084:4:18","valueSize":1},{"declaration":3714,"isOffset":false,"isSlot":false,"src":"9169:4:18","valueSize":1},{"declaration":3714,"isOffset":false,"isSlot":false,"src":"9293:4:18","valueSize":1},{"declaration":3714,"isOffset":false,"isSlot":false,"src":"9316:4:18","valueSize":1},{"declaration":3714,"isOffset":false,"isSlot":false,"src":"9323:4:18","valueSize":1}],"flags":["memory-safe"],"id":3722,"nodeType":"InlineAssembly","src":"8962:384:18"},{"expression":{"id":3727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3723,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3675,"src":"9409:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3724,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"9416:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3725,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3714,"src":"9423:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3728,"nodeType":"ExpressionStatement","src":"9409:18:18"},{"assignments":[3730],"declarations":[{"constant":false,"id":3730,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:18","nodeType":"VariableDeclaration","scope":3794,"src":"9762:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3729,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3737,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:18","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3732,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3667,"src":"9785:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3734,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:18"},{"expression":{"id":3744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3738,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3730,"src":"10018:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3740,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3667,"src":"10033:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3741,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3730,"src":"10047:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3745,"nodeType":"ExpressionStatement","src":"10018:36:18"},{"expression":{"id":3752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3746,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3730,"src":"10088:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3748,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3667,"src":"10103:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3749,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3730,"src":"10117:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3753,"nodeType":"ExpressionStatement","src":"10088:36:18"},{"expression":{"id":3760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3754,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3730,"src":"10160:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3756,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3667,"src":"10175:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3757,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3730,"src":"10189:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3761,"nodeType":"ExpressionStatement","src":"10160:36:18"},{"expression":{"id":3768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3762,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3730,"src":"10231:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3764,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3667,"src":"10246:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3765,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3730,"src":"10260:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3769,"nodeType":"ExpressionStatement","src":"10231:36:18"},{"expression":{"id":3776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3770,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3730,"src":"10304:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3772,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3667,"src":"10319:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3773,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3730,"src":"10333:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3777,"nodeType":"ExpressionStatement","src":"10304:36:18"},{"expression":{"id":3784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3778,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3730,"src":"10378:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3780,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3667,"src":"10393:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3781,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3730,"src":"10407:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3785,"nodeType":"ExpressionStatement","src":"10378:36:18"},{"expression":{"id":3790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3786,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3670,"src":"10859:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3787,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3675,"src":"10868:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3788,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3730,"src":"10874:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3791,"nodeType":"ExpressionStatement","src":"10859:22:18"},{"expression":{"id":3792,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3670,"src":"10902:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3671,"id":3793,"nodeType":"Return","src":"10895:13:18"}]}]},"documentation":{"id":3661,"nodeType":"StructuredDocumentation","src":"6925:312:18","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":3796,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:18","nodeType":"FunctionDefinition","parameters":{"id":3668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3663,"mutability":"mutable","name":"x","nameLocation":"7266:1:18","nodeType":"VariableDeclaration","scope":3796,"src":"7258:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3662,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3665,"mutability":"mutable","name":"y","nameLocation":"7277:1:18","nodeType":"VariableDeclaration","scope":3796,"src":"7269:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3664,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3667,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:18","nodeType":"VariableDeclaration","scope":3796,"src":"7280:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3666,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:18"},"returnParameters":{"id":3671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3670,"mutability":"mutable","name":"result","nameLocation":"7332:6:18","nodeType":"VariableDeclaration","scope":3796,"src":"7324:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3669,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:18"},"scope":4890,"src":"7242:3683:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3832,"nodeType":"Block","src":"11164:128:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3812,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3799,"src":"11188:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3813,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"11191:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3814,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3803,"src":"11194:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3811,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3796,3833],"referencedDeclaration":3796,"src":"11181:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3819,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3806,"src":"11242:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3281","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3281","typeString":"enum Math.Rounding"}],"id":3818,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4889,"src":"11225:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3281_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3822,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3799,"src":"11262:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3823,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"11265:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3824,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3803,"src":"11268:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3821,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:18","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3816,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6655,"src":"11209:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6655_$","typeString":"type(library SafeCast)"}},"id":3817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6654,"src":"11209:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3810,"id":3831,"nodeType":"Return","src":"11174:111:18"}]},"documentation":{"id":3797,"nodeType":"StructuredDocumentation","src":"10931:118:18","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3833,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:18","nodeType":"FunctionDefinition","parameters":{"id":3807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3799,"mutability":"mutable","name":"x","nameLocation":"11078:1:18","nodeType":"VariableDeclaration","scope":3833,"src":"11070:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3798,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3801,"mutability":"mutable","name":"y","nameLocation":"11089:1:18","nodeType":"VariableDeclaration","scope":3833,"src":"11081:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3800,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3803,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:18","nodeType":"VariableDeclaration","scope":3833,"src":"11092:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3802,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3806,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:18","nodeType":"VariableDeclaration","scope":3833,"src":"11113:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3281","typeString":"enum Math.Rounding"},"typeName":{"id":3805,"nodeType":"UserDefinedTypeName","pathNode":{"id":3804,"name":"Rounding","nameLocations":["11113:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":3281,"src":"11113:8:18"},"referencedDeclaration":3281,"src":"11113:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3281","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:18"},"returnParameters":{"id":3810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3809,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3833,"src":"11155:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3808,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:18"},"scope":4890,"src":"11054:238:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3882,"nodeType":"Block","src":"11500:245:18","statements":[{"id":3881,"nodeType":"UncheckedBlock","src":"11510:229:18","statements":[{"assignments":[3846,3848],"declarations":[{"constant":false,"id":3846,"mutability":"mutable","name":"high","nameLocation":"11543:4:18","nodeType":"VariableDeclaration","scope":3881,"src":"11535:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3845,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3848,"mutability":"mutable","name":"low","nameLocation":"11557:3:18","nodeType":"VariableDeclaration","scope":3881,"src":"11549:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3847,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3853,"initialValue":{"arguments":[{"id":3850,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"11571:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3851,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"11574:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3849,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3309,"src":"11564:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":3852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3854,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3846,"src":"11594:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3856,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3840,"src":"11607:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3867,"nodeType":"IfStatement","src":"11590:86:18","trueBody":{"id":3866,"nodeType":"Block","src":"11610:66:18","statements":[{"expression":{"arguments":[{"expression":{"id":3862,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"11640:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1831_$","typeString":"type(library Panic)"}},"id":3863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:18","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1794,"src":"11640:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3859,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"11628:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1831_$","typeString":"type(library Panic)"}},"id":3861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:18","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1830,"src":"11628:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3865,"nodeType":"ExpressionStatement","src":"11628:33:18"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3868,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3846,"src":"11697:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":3871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":3869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:18","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3870,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3840,"src":"11712:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":3872,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3874,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3875,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"11719:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3876,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3840,"src":"11726:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3878,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3844,"id":3880,"nodeType":"Return","src":"11689:39:18"}]}]},"documentation":{"id":3834,"nodeType":"StructuredDocumentation","src":"11298:111:18","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":3883,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:18","nodeType":"FunctionDefinition","parameters":{"id":3841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3836,"mutability":"mutable","name":"x","nameLocation":"11438:1:18","nodeType":"VariableDeclaration","scope":3883,"src":"11430:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3835,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3838,"mutability":"mutable","name":"y","nameLocation":"11449:1:18","nodeType":"VariableDeclaration","scope":3883,"src":"11441:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3837,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3840,"mutability":"mutable","name":"n","nameLocation":"11458:1:18","nodeType":"VariableDeclaration","scope":3883,"src":"11452:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3839,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:18"},"returnParameters":{"id":3844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3843,"mutability":"mutable","name":"result","nameLocation":"11492:6:18","nodeType":"VariableDeclaration","scope":3883,"src":"11484:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3842,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:18"},"scope":4890,"src":"11414:331:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3921,"nodeType":"Block","src":"11963:113:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3899,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"11987:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3900,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"11990:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3901,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"11993:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3898,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[3883,3922],"referencedDeclaration":3883,"src":"11980:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":3902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3906,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3893,"src":"12031:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3281","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3281","typeString":"enum Math.Rounding"}],"id":3905,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4889,"src":"12014:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3281_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3909,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"12051:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3910,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"12054:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3912,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"12062:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3908,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:18","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3903,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6655,"src":"11998:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6655_$","typeString":"type(library SafeCast)"}},"id":3904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6654,"src":"11998:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3897,"id":3920,"nodeType":"Return","src":"11973:96:18"}]},"documentation":{"id":3884,"nodeType":"StructuredDocumentation","src":"11751:109:18","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":3922,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:18","nodeType":"FunctionDefinition","parameters":{"id":3894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3886,"mutability":"mutable","name":"x","nameLocation":"11889:1:18","nodeType":"VariableDeclaration","scope":3922,"src":"11881:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3885,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3888,"mutability":"mutable","name":"y","nameLocation":"11900:1:18","nodeType":"VariableDeclaration","scope":3922,"src":"11892:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3887,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3890,"mutability":"mutable","name":"n","nameLocation":"11909:1:18","nodeType":"VariableDeclaration","scope":3922,"src":"11903:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3889,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3893,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:18","nodeType":"VariableDeclaration","scope":3922,"src":"11912:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3281","typeString":"enum Math.Rounding"},"typeName":{"id":3892,"nodeType":"UserDefinedTypeName","pathNode":{"id":3891,"name":"Rounding","nameLocations":["11912:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":3281,"src":"11912:8:18"},"referencedDeclaration":3281,"src":"11912:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3281","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:18"},"returnParameters":{"id":3897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3896,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3922,"src":"11954:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3895,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:18"},"scope":4890,"src":"11865:211:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4018,"nodeType":"Block","src":"12710:1849:18","statements":[{"id":4017,"nodeType":"UncheckedBlock","src":"12720:1833:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3932,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3927,"src":"12748:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3937,"nodeType":"IfStatement","src":"12744:20:18","trueBody":{"expression":{"hexValue":"30","id":3935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3931,"id":3936,"nodeType":"Return","src":"12756:8:18"}},{"assignments":[3939],"declarations":[{"constant":false,"id":3939,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:18","nodeType":"VariableDeclaration","scope":4017,"src":"13235:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3938,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3943,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3940,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3925,"src":"13255:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3941,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3927,"src":"13259:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:18"},{"assignments":[3945],"declarations":[{"constant":false,"id":3945,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:18","nodeType":"VariableDeclaration","scope":4017,"src":"13274:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3944,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3947,"initialValue":{"id":3946,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3927,"src":"13288:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:18"},{"assignments":[3949],"declarations":[{"constant":false,"id":3949,"mutability":"mutable","name":"x","nameLocation":"13432:1:18","nodeType":"VariableDeclaration","scope":4017,"src":"13425:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3948,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3951,"initialValue":{"hexValue":"30","id":3950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:18"},{"assignments":[3953],"declarations":[{"constant":false,"id":3953,"mutability":"mutable","name":"y","nameLocation":"13458:1:18","nodeType":"VariableDeclaration","scope":4017,"src":"13451:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3952,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3955,"initialValue":{"hexValue":"31","id":3954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:18"},{"body":{"id":3992,"nodeType":"Block","src":"13501:882:18","statements":[{"assignments":[3960],"declarations":[{"constant":false,"id":3960,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:18","nodeType":"VariableDeclaration","scope":3992,"src":"13519:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3959,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3964,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3961,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3945,"src":"13538:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3962,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3939,"src":"13544:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:18"},{"expression":{"id":3975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3965,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3945,"src":"13573:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3966,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3939,"src":"13578:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3967,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3968,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3939,"src":"13678:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3969,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3945,"src":"13923:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3970,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3939,"src":"13929:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3971,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"13941:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3974,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:18","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3976,"nodeType":"ExpressionStatement","src":"13572:395:18"},{"expression":{"id":3990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3977,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"13987:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":3978,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3953,"src":"13990:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3979,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3980,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3953,"src":"14072:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3981,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"14326:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3982,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3953,"src":"14330:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3985,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"14341:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3983,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:18","typeDescriptions":{}}},"id":3986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3989,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:18","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3991,"nodeType":"ExpressionStatement","src":"13986:382:18"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3956,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3939,"src":"13485:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3993,"nodeType":"WhileStatement","src":"13478:905:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3994,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3945,"src":"14401:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":3995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3999,"nodeType":"IfStatement","src":"14397:22:18","trueBody":{"expression":{"hexValue":"30","id":3997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3931,"id":3998,"nodeType":"Return","src":"14411:8:18"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4001,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"14470:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4004,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3927,"src":"14477:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":4008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:18","subExpression":{"id":4007,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"14490:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4005,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:18","typeDescriptions":{}}},"id":4009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4013,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"14502:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4012,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4011,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:18","typeDescriptions":{}}},"id":4014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4000,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"14462:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3931,"id":4016,"nodeType":"Return","src":"14455:50:18"}]}]},"documentation":{"id":3923,"nodeType":"StructuredDocumentation","src":"12082:553:18","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":4019,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:18","nodeType":"FunctionDefinition","parameters":{"id":3928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3925,"mutability":"mutable","name":"a","nameLocation":"12664:1:18","nodeType":"VariableDeclaration","scope":4019,"src":"12656:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3924,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3927,"mutability":"mutable","name":"n","nameLocation":"12675:1:18","nodeType":"VariableDeclaration","scope":4019,"src":"12667:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3926,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:18"},"returnParameters":{"id":3931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3930,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4019,"src":"12701:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3929,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:18"},"scope":4890,"src":"12640:1919:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4039,"nodeType":"Block","src":"15159:82:18","statements":[{"id":4038,"nodeType":"UncheckedBlock","src":"15169:66:18","statements":[{"expression":{"arguments":[{"id":4031,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"15212:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4032,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4024,"src":"15215:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":4033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4035,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4024,"src":"15222:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4029,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4890,"src":"15200:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4890_$","typeString":"type(library Math)"}},"id":4030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:18","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":4076,"src":"15200:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":4036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4028,"id":4037,"nodeType":"Return","src":"15193:31:18"}]}]},"documentation":{"id":4020,"nodeType":"StructuredDocumentation","src":"14565:514:18","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":4040,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:18","nodeType":"FunctionDefinition","parameters":{"id":4025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4022,"mutability":"mutable","name":"a","nameLocation":"15113:1:18","nodeType":"VariableDeclaration","scope":4040,"src":"15105:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4021,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4024,"mutability":"mutable","name":"p","nameLocation":"15124:1:18","nodeType":"VariableDeclaration","scope":4040,"src":"15116:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4023,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:18"},"returnParameters":{"id":4028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4027,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4040,"src":"15150:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4026,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:18"},"scope":4890,"src":"15084:157:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4075,"nodeType":"Block","src":"16011:174:18","statements":[{"assignments":[4053,4055],"declarations":[{"constant":false,"id":4053,"mutability":"mutable","name":"success","nameLocation":"16027:7:18","nodeType":"VariableDeclaration","scope":4075,"src":"16022:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4052,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4055,"mutability":"mutable","name":"result","nameLocation":"16044:6:18","nodeType":"VariableDeclaration","scope":4075,"src":"16036:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4054,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4061,"initialValue":{"arguments":[{"id":4057,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4043,"src":"16064:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4058,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"16067:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4059,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4047,"src":"16070:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4056,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4100,4182],"referencedDeclaration":4100,"src":"16054:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":4060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:18"},{"condition":{"id":4063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:18","subExpression":{"id":4062,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4053,"src":"16087:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4072,"nodeType":"IfStatement","src":"16082:74:18","trueBody":{"id":4071,"nodeType":"Block","src":"16096:60:18","statements":[{"expression":{"arguments":[{"expression":{"id":4067,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"16122:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1831_$","typeString":"type(library Panic)"}},"id":4068,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:18","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1798,"src":"16122:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4064,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"16110:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1831_$","typeString":"type(library Panic)"}},"id":4066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:18","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1830,"src":"16110:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4070,"nodeType":"ExpressionStatement","src":"16110:35:18"}]}},{"expression":{"id":4073,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4055,"src":"16172:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4051,"id":4074,"nodeType":"Return","src":"16165:13:18"}]},"documentation":{"id":4041,"nodeType":"StructuredDocumentation","src":"15247:678:18","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":4076,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:18","nodeType":"FunctionDefinition","parameters":{"id":4048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4043,"mutability":"mutable","name":"b","nameLocation":"15954:1:18","nodeType":"VariableDeclaration","scope":4076,"src":"15946:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4042,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4045,"mutability":"mutable","name":"e","nameLocation":"15965:1:18","nodeType":"VariableDeclaration","scope":4076,"src":"15957:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4044,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4047,"mutability":"mutable","name":"m","nameLocation":"15976:1:18","nodeType":"VariableDeclaration","scope":4076,"src":"15968:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4046,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:18"},"returnParameters":{"id":4051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4050,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4076,"src":"16002:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4049,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:18"},"scope":4890,"src":"15930:255:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4099,"nodeType":"Block","src":"17039:1493:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4090,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4083,"src":"17053:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4097,"nodeType":"IfStatement","src":"17049:29:18","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4095,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4089,"id":4096,"nodeType":"Return","src":"17061:17:18"}},{"AST":{"nodeType":"YulBlock","src":"17113:1413:18","statements":[{"nodeType":"YulVariableDeclaration","src":"17127:22:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17144:4:18","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17138:5:18"},"nodeType":"YulFunctionCall","src":"17138:11:18"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"17131:3:18","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18057:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"18062:4:18","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18050:6:18"},"nodeType":"YulFunctionCall","src":"18050:17:18"},"nodeType":"YulExpressionStatement","src":"18050:17:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18091:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"18096:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18087:3:18"},"nodeType":"YulFunctionCall","src":"18087:14:18"},{"kind":"number","nodeType":"YulLiteral","src":"18103:4:18","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18080:6:18"},"nodeType":"YulFunctionCall","src":"18080:28:18"},"nodeType":"YulExpressionStatement","src":"18080:28:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18132:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"18137:4:18","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18128:3:18"},"nodeType":"YulFunctionCall","src":"18128:14:18"},{"kind":"number","nodeType":"YulLiteral","src":"18144:4:18","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18121:6:18"},"nodeType":"YulFunctionCall","src":"18121:28:18"},"nodeType":"YulExpressionStatement","src":"18121:28:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18173:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"18178:4:18","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18169:3:18"},"nodeType":"YulFunctionCall","src":"18169:14:18"},{"name":"b","nodeType":"YulIdentifier","src":"18185:1:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18162:6:18"},"nodeType":"YulFunctionCall","src":"18162:25:18"},"nodeType":"YulExpressionStatement","src":"18162:25:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18211:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"18216:4:18","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18207:3:18"},"nodeType":"YulFunctionCall","src":"18207:14:18"},{"name":"e","nodeType":"YulIdentifier","src":"18223:1:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18200:6:18"},"nodeType":"YulFunctionCall","src":"18200:25:18"},"nodeType":"YulExpressionStatement","src":"18200:25:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18249:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"18254:4:18","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18245:3:18"},"nodeType":"YulFunctionCall","src":"18245:14:18"},{"name":"m","nodeType":"YulIdentifier","src":"18261:1:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18238:6:18"},"nodeType":"YulFunctionCall","src":"18238:25:18"},"nodeType":"YulExpressionStatement","src":"18238:25:18"},{"nodeType":"YulAssignment","src":"18425:57:18","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"18447:3:18"},"nodeType":"YulFunctionCall","src":"18447:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"18454:4:18","type":"","value":"0x05"},{"name":"ptr","nodeType":"YulIdentifier","src":"18460:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"18465:4:18","type":"","value":"0xc0"},{"kind":"number","nodeType":"YulLiteral","src":"18471:4:18","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"18477:4:18","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"18436:10:18"},"nodeType":"YulFunctionCall","src":"18436:46:18"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"18425:7:18"}]},{"nodeType":"YulAssignment","src":"18495:21:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18511:4:18","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18505:5:18"},"nodeType":"YulFunctionCall","src":"18505:11:18"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"18495:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4079,"isOffset":false,"isSlot":false,"src":"18185:1:18","valueSize":1},{"declaration":4081,"isOffset":false,"isSlot":false,"src":"18223:1:18","valueSize":1},{"declaration":4083,"isOffset":false,"isSlot":false,"src":"18261:1:18","valueSize":1},{"declaration":4088,"isOffset":false,"isSlot":false,"src":"18495:6:18","valueSize":1},{"declaration":4086,"isOffset":false,"isSlot":false,"src":"18425:7:18","valueSize":1}],"flags":["memory-safe"],"id":4098,"nodeType":"InlineAssembly","src":"17088:1438:18"}]},"documentation":{"id":4077,"nodeType":"StructuredDocumentation","src":"16191:738:18","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":4100,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:18","nodeType":"FunctionDefinition","parameters":{"id":4084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4079,"mutability":"mutable","name":"b","nameLocation":"16961:1:18","nodeType":"VariableDeclaration","scope":4100,"src":"16953:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4078,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4081,"mutability":"mutable","name":"e","nameLocation":"16972:1:18","nodeType":"VariableDeclaration","scope":4100,"src":"16964:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4080,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4083,"mutability":"mutable","name":"m","nameLocation":"16983:1:18","nodeType":"VariableDeclaration","scope":4100,"src":"16975:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4082,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:18"},"returnParameters":{"id":4089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4086,"mutability":"mutable","name":"success","nameLocation":"17014:7:18","nodeType":"VariableDeclaration","scope":4100,"src":"17009:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4085,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4088,"mutability":"mutable","name":"result","nameLocation":"17031:6:18","nodeType":"VariableDeclaration","scope":4100,"src":"17023:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4087,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:18"},"scope":4890,"src":"16934:1598:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4135,"nodeType":"Block","src":"18729:179:18","statements":[{"assignments":[4113,4115],"declarations":[{"constant":false,"id":4113,"mutability":"mutable","name":"success","nameLocation":"18745:7:18","nodeType":"VariableDeclaration","scope":4135,"src":"18740:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4112,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4115,"mutability":"mutable","name":"result","nameLocation":"18767:6:18","nodeType":"VariableDeclaration","scope":4135,"src":"18754:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4114,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4121,"initialValue":{"arguments":[{"id":4117,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"18787:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4118,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"18790:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4119,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4107,"src":"18793:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4116,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4100,4182],"referencedDeclaration":4182,"src":"18777:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":4120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:18"},{"condition":{"id":4123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:18","subExpression":{"id":4122,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4113,"src":"18810:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4132,"nodeType":"IfStatement","src":"18805:74:18","trueBody":{"id":4131,"nodeType":"Block","src":"18819:60:18","statements":[{"expression":{"arguments":[{"expression":{"id":4127,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"18845:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1831_$","typeString":"type(library Panic)"}},"id":4128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:18","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1798,"src":"18845:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4124,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"18833:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1831_$","typeString":"type(library Panic)"}},"id":4126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:18","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1830,"src":"18833:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4130,"nodeType":"ExpressionStatement","src":"18833:35:18"}]}},{"expression":{"id":4133,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4115,"src":"18895:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4111,"id":4134,"nodeType":"Return","src":"18888:13:18"}]},"documentation":{"id":4101,"nodeType":"StructuredDocumentation","src":"18538:85:18","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":4136,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:18","nodeType":"FunctionDefinition","parameters":{"id":4108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4103,"mutability":"mutable","name":"b","nameLocation":"18657:1:18","nodeType":"VariableDeclaration","scope":4136,"src":"18644:14:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4102,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4105,"mutability":"mutable","name":"e","nameLocation":"18673:1:18","nodeType":"VariableDeclaration","scope":4136,"src":"18660:14:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4104,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4107,"mutability":"mutable","name":"m","nameLocation":"18689:1:18","nodeType":"VariableDeclaration","scope":4136,"src":"18676:14:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4106,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:18"},"returnParameters":{"id":4111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4110,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4136,"src":"18715:12:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4109,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:18"},"scope":4890,"src":"18628:280:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4181,"nodeType":"Block","src":"19162:771:18","statements":[{"condition":{"arguments":[{"id":4151,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4143,"src":"19187:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4150,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"19176:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":4152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4160,"nodeType":"IfStatement","src":"19172:47:18","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4154,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":4158,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":4149,"id":4159,"nodeType":"Return","src":"19191:28:18"}},{"assignments":[4162],"declarations":[{"constant":false,"id":4162,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:18","nodeType":"VariableDeclaration","scope":4181,"src":"19230:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4161,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4165,"initialValue":{"expression":{"id":4163,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4143,"src":"19245:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:18","memberName":"length","nodeType":"MemberAccess","src":"19245:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:18"},{"expression":{"id":4178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4166,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"19335:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":4169,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4139,"src":"19361:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:18","memberName":"length","nodeType":"MemberAccess","src":"19361:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4171,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"19371:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:18","memberName":"length","nodeType":"MemberAccess","src":"19371:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4173,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4162,"src":"19381:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4174,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4139,"src":"19387:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4175,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"19390:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4176,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4143,"src":"19393:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4167,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:18","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:18","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4179,"nodeType":"ExpressionStatement","src":"19335:60:18"},{"AST":{"nodeType":"YulBlock","src":"19431:496:18","statements":[{"nodeType":"YulVariableDeclaration","src":"19445:32:18","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19464:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"19472:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19460:3:18"},"nodeType":"YulFunctionCall","src":"19460:17:18"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"19449:7:18","type":""}]},{"nodeType":"YulAssignment","src":"19567:73:18","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"19589:3:18"},"nodeType":"YulFunctionCall","src":"19589:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"19596:4:18","type":"","value":"0x05"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19602:7:18"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19617:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19611:5:18"},"nodeType":"YulFunctionCall","src":"19611:13:18"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19626:7:18"},{"name":"mLen","nodeType":"YulIdentifier","src":"19635:4:18"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"19578:10:18"},"nodeType":"YulFunctionCall","src":"19578:62:18"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"19567:7:18"}]},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19796:6:18"},{"name":"mLen","nodeType":"YulIdentifier","src":"19804:4:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19789:6:18"},"nodeType":"YulFunctionCall","src":"19789:20:18"},"nodeType":"YulExpressionStatement","src":"19789:20:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19892:4:18","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"19902:7:18"},{"name":"mLen","nodeType":"YulIdentifier","src":"19911:4:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19898:3:18"},"nodeType":"YulFunctionCall","src":"19898:18:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19885:6:18"},"nodeType":"YulFunctionCall","src":"19885:32:18"},"nodeType":"YulExpressionStatement","src":"19885:32:18"}]},"evmVersion":"paris","externalReferences":[{"declaration":4162,"isOffset":false,"isSlot":false,"src":"19635:4:18","valueSize":1},{"declaration":4162,"isOffset":false,"isSlot":false,"src":"19804:4:18","valueSize":1},{"declaration":4162,"isOffset":false,"isSlot":false,"src":"19911:4:18","valueSize":1},{"declaration":4148,"isOffset":false,"isSlot":false,"src":"19464:6:18","valueSize":1},{"declaration":4148,"isOffset":false,"isSlot":false,"src":"19617:6:18","valueSize":1},{"declaration":4148,"isOffset":false,"isSlot":false,"src":"19796:6:18","valueSize":1},{"declaration":4146,"isOffset":false,"isSlot":false,"src":"19567:7:18","valueSize":1}],"flags":["memory-safe"],"id":4180,"nodeType":"InlineAssembly","src":"19406:521:18"}]},"documentation":{"id":4137,"nodeType":"StructuredDocumentation","src":"18914:88:18","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":4182,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:18","nodeType":"FunctionDefinition","parameters":{"id":4144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4139,"mutability":"mutable","name":"b","nameLocation":"19048:1:18","nodeType":"VariableDeclaration","scope":4182,"src":"19035:14:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4138,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4141,"mutability":"mutable","name":"e","nameLocation":"19072:1:18","nodeType":"VariableDeclaration","scope":4182,"src":"19059:14:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4140,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4143,"mutability":"mutable","name":"m","nameLocation":"19096:1:18","nodeType":"VariableDeclaration","scope":4182,"src":"19083:14:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4142,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:18"},"returnParameters":{"id":4149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4146,"mutability":"mutable","name":"success","nameLocation":"19132:7:18","nodeType":"VariableDeclaration","scope":4182,"src":"19127:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4145,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4148,"mutability":"mutable","name":"result","nameLocation":"19154:6:18","nodeType":"VariableDeclaration","scope":4182,"src":"19141:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4147,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:18"},"scope":4890,"src":"19007:926:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4214,"nodeType":"Block","src":"20088:176:18","statements":[{"body":{"id":4210,"nodeType":"Block","src":"20145:92:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4201,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4185,"src":"20163:9:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4203,"indexExpression":{"id":4202,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4191,"src":"20173:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4209,"nodeType":"IfStatement","src":"20159:68:18","trueBody":{"id":4208,"nodeType":"Block","src":"20182:45:18","statements":[{"expression":{"hexValue":"66616c7365","id":4206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4189,"id":4207,"nodeType":"Return","src":"20200:12:18"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4194,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4191,"src":"20118:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4195,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4185,"src":"20122:9:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:18","memberName":"length","nodeType":"MemberAccess","src":"20122:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4211,"initializationExpression":{"assignments":[4191],"declarations":[{"constant":false,"id":4191,"mutability":"mutable","name":"i","nameLocation":"20111:1:18","nodeType":"VariableDeclaration","scope":4211,"src":"20103:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4190,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4193,"initialValue":{"hexValue":"30","id":4192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:18"},"loopExpression":{"expression":{"id":4199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:18","subExpression":{"id":4198,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4191,"src":"20142:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4200,"nodeType":"ExpressionStatement","src":"20140:3:18"},"nodeType":"ForStatement","src":"20098:139:18"},{"expression":{"hexValue":"74727565","id":4212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4189,"id":4213,"nodeType":"Return","src":"20246:11:18"}]},"documentation":{"id":4183,"nodeType":"StructuredDocumentation","src":"19939:72:18","text":" @dev Returns whether the provided byte array is zero."},"id":4215,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:18","nodeType":"FunctionDefinition","parameters":{"id":4186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4185,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:18","nodeType":"VariableDeclaration","scope":4215,"src":"20036:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4184,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:18"},"returnParameters":{"id":4189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4188,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4215,"src":"20082:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4187,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:18"},"scope":4890,"src":"20016:248:18","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4433,"nodeType":"Block","src":"20624:5124:18","statements":[{"id":4432,"nodeType":"UncheckedBlock","src":"20634:5108:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4223,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4218,"src":"20728:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":4224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4229,"nodeType":"IfStatement","src":"20724:53:18","trueBody":{"id":4228,"nodeType":"Block","src":"20736:41:18","statements":[{"expression":{"id":4226,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4218,"src":"20761:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4222,"id":4227,"nodeType":"Return","src":"20754:8:18"}]}},{"assignments":[4231],"declarations":[{"constant":false,"id":4231,"mutability":"mutable","name":"aa","nameLocation":"21712:2:18","nodeType":"VariableDeclaration","scope":4432,"src":"21704:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4230,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4233,"initialValue":{"id":4232,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4218,"src":"21717:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:18"},{"assignments":[4235],"declarations":[{"constant":false,"id":4235,"mutability":"mutable","name":"xn","nameLocation":"21740:2:18","nodeType":"VariableDeclaration","scope":4432,"src":"21732:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4234,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4237,"initialValue":{"hexValue":"31","id":4236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4238,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"21765:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:18","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:18","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4242,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:18","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4253,"nodeType":"IfStatement","src":"21761:92:18","trueBody":{"id":4252,"nodeType":"Block","src":"21783:70:18","statements":[{"expression":{"id":4246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4244,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"21801:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:18","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4247,"nodeType":"ExpressionStatement","src":"21801:10:18"},{"expression":{"id":4250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4248,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4235,"src":"21829:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":4249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4251,"nodeType":"ExpressionStatement","src":"21829:9:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4254,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"21870:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4257,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:18","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4258,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:18","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4269,"nodeType":"IfStatement","src":"21866:90:18","trueBody":{"id":4268,"nodeType":"Block","src":"21887:69:18","statements":[{"expression":{"id":4262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4260,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"21905:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4263,"nodeType":"ExpressionStatement","src":"21905:9:18"},{"expression":{"id":4266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4264,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4235,"src":"21932:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":4265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4267,"nodeType":"ExpressionStatement","src":"21932:9:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4270,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"21973:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:18","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4274,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:18","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4285,"nodeType":"IfStatement","src":"21969:90:18","trueBody":{"id":4284,"nodeType":"Block","src":"21990:69:18","statements":[{"expression":{"id":4278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4276,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"22008:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4279,"nodeType":"ExpressionStatement","src":"22008:9:18"},{"expression":{"id":4282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4280,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4235,"src":"22035:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":4281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4283,"nodeType":"ExpressionStatement","src":"22035:9:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4286,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"22076:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:18","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4290,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:18","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4301,"nodeType":"IfStatement","src":"22072:89:18","trueBody":{"id":4300,"nodeType":"Block","src":"22093:68:18","statements":[{"expression":{"id":4294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4292,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"22111:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4295,"nodeType":"ExpressionStatement","src":"22111:9:18"},{"expression":{"id":4298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4296,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4235,"src":"22138:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":4297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4299,"nodeType":"ExpressionStatement","src":"22138:8:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4302,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"22178:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:18","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4306,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:18","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4317,"nodeType":"IfStatement","src":"22174:87:18","trueBody":{"id":4316,"nodeType":"Block","src":"22194:67:18","statements":[{"expression":{"id":4310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4308,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"22212:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4311,"nodeType":"ExpressionStatement","src":"22212:8:18"},{"expression":{"id":4314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4312,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4235,"src":"22238:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":4313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4315,"nodeType":"ExpressionStatement","src":"22238:8:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4318,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"22278:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4322,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4333,"nodeType":"IfStatement","src":"22274:87:18","trueBody":{"id":4332,"nodeType":"Block","src":"22294:67:18","statements":[{"expression":{"id":4326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4324,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"22312:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4327,"nodeType":"ExpressionStatement","src":"22312:8:18"},{"expression":{"id":4330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4328,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4235,"src":"22338:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":4329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4331,"nodeType":"ExpressionStatement","src":"22338:8:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4334,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"22378:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":4337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":4338,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4345,"nodeType":"IfStatement","src":"22374:61:18","trueBody":{"id":4344,"nodeType":"Block","src":"22394:41:18","statements":[{"expression":{"id":4342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4340,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4235,"src":"22412:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":4341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4343,"nodeType":"ExpressionStatement","src":"22412:8:18"}]}},{"expression":{"id":4353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4346,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4235,"src":"22855:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:18","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4348,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4235,"src":"22865:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4350,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4354,"nodeType":"ExpressionStatement","src":"22855:18:18"},{"expression":{"id":4364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4355,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4235,"src":"24760:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4356,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4235,"src":"24766:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4357,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4218,"src":"24771:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4358,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4235,"src":"24775:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4361,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4365,"nodeType":"ExpressionStatement","src":"24760:23:18"},{"expression":{"id":4375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4366,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4235,"src":"24869:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4367,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4235,"src":"24875:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4368,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4218,"src":"24880:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4369,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4235,"src":"24884:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4372,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4376,"nodeType":"ExpressionStatement","src":"24869:23:18"},{"expression":{"id":4386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4377,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4235,"src":"24980:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4378,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4235,"src":"24986:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4379,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4218,"src":"24991:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4380,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4235,"src":"24995:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4383,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4387,"nodeType":"ExpressionStatement","src":"24980:23:18"},{"expression":{"id":4397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4388,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4235,"src":"25089:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4389,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4235,"src":"25095:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4390,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4218,"src":"25100:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4391,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4235,"src":"25104:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4394,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4398,"nodeType":"ExpressionStatement","src":"25089:23:18"},{"expression":{"id":4408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4399,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4235,"src":"25199:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4400,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4235,"src":"25205:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4401,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4218,"src":"25210:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4402,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4235,"src":"25214:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4405,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4409,"nodeType":"ExpressionStatement","src":"25199:23:18"},{"expression":{"id":4419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4410,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4235,"src":"25309:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4411,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4235,"src":"25315:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4412,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4218,"src":"25320:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4413,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4235,"src":"25324:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4416,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4420,"nodeType":"ExpressionStatement","src":"25309:23:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4421,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4235,"src":"25698:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4424,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4235,"src":"25719:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4425,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4218,"src":"25724:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4426,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4235,"src":"25728:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4422,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6655,"src":"25703:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6655_$","typeString":"type(library SafeCast)"}},"id":4423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6654,"src":"25703:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4222,"id":4431,"nodeType":"Return","src":"25691:40:18"}]}]},"documentation":{"id":4216,"nodeType":"StructuredDocumentation","src":"20270:292:18","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":4434,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:18","nodeType":"FunctionDefinition","parameters":{"id":4219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4218,"mutability":"mutable","name":"a","nameLocation":"20589:1:18","nodeType":"VariableDeclaration","scope":4434,"src":"20581:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4217,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:18"},"returnParameters":{"id":4222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4221,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4434,"src":"20615:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4220,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:18"},"scope":4890,"src":"20567:5181:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4467,"nodeType":"Block","src":"25921:171:18","statements":[{"id":4466,"nodeType":"UncheckedBlock","src":"25931:155:18","statements":[{"assignments":[4446],"declarations":[{"constant":false,"id":4446,"mutability":"mutable","name":"result","nameLocation":"25963:6:18","nodeType":"VariableDeclaration","scope":4466,"src":"25955:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4445,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4450,"initialValue":{"arguments":[{"id":4448,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"25977:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4447,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4434,4468],"referencedDeclaration":4434,"src":"25972:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4451,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4446,"src":"26000:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4455,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4440,"src":"26042:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3281","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3281","typeString":"enum Math.Rounding"}],"id":4454,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4889,"src":"26025:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3281_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4457,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4446,"src":"26055:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4458,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4446,"src":"26064:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4460,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"26073:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4452,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6655,"src":"26009:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6655_$","typeString":"type(library SafeCast)"}},"id":4453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6654,"src":"26009:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4444,"id":4465,"nodeType":"Return","src":"25993:82:18"}]}]},"documentation":{"id":4435,"nodeType":"StructuredDocumentation","src":"25754:86:18","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":4468,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:18","nodeType":"FunctionDefinition","parameters":{"id":4441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4437,"mutability":"mutable","name":"a","nameLocation":"25867:1:18","nodeType":"VariableDeclaration","scope":4468,"src":"25859:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4436,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4440,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:18","nodeType":"VariableDeclaration","scope":4468,"src":"25870:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3281","typeString":"enum Math.Rounding"},"typeName":{"id":4439,"nodeType":"UserDefinedTypeName","pathNode":{"id":4438,"name":"Rounding","nameLocations":["25870:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":3281,"src":"25870:8:18"},"referencedDeclaration":3281,"src":"25870:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3281","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:18"},"returnParameters":{"id":4444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4443,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4468,"src":"25912:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4442,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:18"},"scope":4890,"src":"25845:247:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4558,"nodeType":"Block","src":"26281:2334:18","statements":[{"expression":{"id":4485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4476,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4474,"src":"26363:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4479,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4471,"src":"26383:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":4480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:18","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4477,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6655,"src":"26367:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6655_$","typeString":"type(library SafeCast)"}},"id":4478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6654,"src":"26367:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":4483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:18","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4486,"nodeType":"ExpressionStatement","src":"26363:64:18"},{"expression":{"id":4499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4487,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4474,"src":"26503:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4490,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4471,"src":"26525:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4491,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4474,"src":"26530:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4493,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":4494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:18","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4488,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6655,"src":"26508:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6655_$","typeString":"type(library SafeCast)"}},"id":4489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6654,"src":"26508:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":4497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:18","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4500,"nodeType":"ExpressionStatement","src":"26503:56:18"},{"expression":{"id":4513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4501,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4474,"src":"26634:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4504,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4471,"src":"26656:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4505,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4474,"src":"26661:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4507,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":4508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:18","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4502,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6655,"src":"26639:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6655_$","typeString":"type(library SafeCast)"}},"id":4503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6654,"src":"26639:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":4511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:18","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4514,"nodeType":"ExpressionStatement","src":"26634:48:18"},{"expression":{"id":4527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4515,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4474,"src":"26757:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4518,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4471,"src":"26779:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4519,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4474,"src":"26784:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4521,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":4522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:18","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4516,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6655,"src":"26762:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6655_$","typeString":"type(library SafeCast)"}},"id":4517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6654,"src":"26762:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4528,"nodeType":"ExpressionStatement","src":"26757:44:18"},{"expression":{"id":4541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4529,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4474,"src":"26874:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4532,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4471,"src":"26896:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4533,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4474,"src":"26901:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4535,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":4536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:18","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4530,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6655,"src":"26879:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6655_$","typeString":"type(library SafeCast)"}},"id":4531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6654,"src":"26879:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:18","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4542,"nodeType":"ExpressionStatement","src":"26874:42:18"},{"expression":{"id":4555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4543,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4474,"src":"26988:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4546,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4471,"src":"27010:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4547,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4474,"src":"27015:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4549,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":4550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:18","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4544,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6655,"src":"26993:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6655_$","typeString":"type(library SafeCast)"}},"id":4545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6654,"src":"26993:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4556,"nodeType":"ExpressionStatement","src":"26988:41:18"},{"AST":{"nodeType":"YulBlock","src":"28490:119:18","statements":[{"nodeType":"YulAssignment","src":"28504:95:18","value":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28512:1:18"},{"arguments":[{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28524:1:18"},{"name":"x","nodeType":"YulIdentifier","src":"28527:1:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"28520:3:18"},"nodeType":"YulFunctionCall","src":"28520:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"28531:66:18","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"28515:4:18"},"nodeType":"YulFunctionCall","src":"28515:83:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"28509:2:18"},"nodeType":"YulFunctionCall","src":"28509:90:18"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"28504:1:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4474,"isOffset":false,"isSlot":false,"src":"28504:1:18","valueSize":1},{"declaration":4474,"isOffset":false,"isSlot":false,"src":"28512:1:18","valueSize":1},{"declaration":4474,"isOffset":false,"isSlot":false,"src":"28524:1:18","valueSize":1},{"declaration":4471,"isOffset":false,"isSlot":false,"src":"28527:1:18","valueSize":1}],"flags":["memory-safe"],"id":4557,"nodeType":"InlineAssembly","src":"28465:144:18"}]},"documentation":{"id":4469,"nodeType":"StructuredDocumentation","src":"26098:119:18","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4559,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:18","nodeType":"FunctionDefinition","parameters":{"id":4472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4471,"mutability":"mutable","name":"x","nameLocation":"26244:1:18","nodeType":"VariableDeclaration","scope":4559,"src":"26236:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4470,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:18"},"returnParameters":{"id":4475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4474,"mutability":"mutable","name":"r","nameLocation":"26278:1:18","nodeType":"VariableDeclaration","scope":4559,"src":"26270:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4473,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:18"},"scope":4890,"src":"26222:2393:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4592,"nodeType":"Block","src":"28848:175:18","statements":[{"id":4591,"nodeType":"UncheckedBlock","src":"28858:159:18","statements":[{"assignments":[4571],"declarations":[{"constant":false,"id":4571,"mutability":"mutable","name":"result","nameLocation":"28890:6:18","nodeType":"VariableDeclaration","scope":4591,"src":"28882:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4570,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4575,"initialValue":{"arguments":[{"id":4573,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"28904:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4572,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4559,4593],"referencedDeclaration":4559,"src":"28899:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4576,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4571,"src":"28931:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4580,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4565,"src":"28973:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3281","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3281","typeString":"enum Math.Rounding"}],"id":4579,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4889,"src":"28956:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3281_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4583,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4571,"src":"28991:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"29000:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4577,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6655,"src":"28940:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6655_$","typeString":"type(library SafeCast)"}},"id":4578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6654,"src":"28940:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4569,"id":4590,"nodeType":"Return","src":"28924:82:18"}]}]},"documentation":{"id":4560,"nodeType":"StructuredDocumentation","src":"28621:142:18","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4593,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:18","nodeType":"FunctionDefinition","parameters":{"id":4566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4562,"mutability":"mutable","name":"value","nameLocation":"28790:5:18","nodeType":"VariableDeclaration","scope":4593,"src":"28782:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4561,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4565,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:18","nodeType":"VariableDeclaration","scope":4593,"src":"28797:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3281","typeString":"enum Math.Rounding"},"typeName":{"id":4564,"nodeType":"UserDefinedTypeName","pathNode":{"id":4563,"name":"Rounding","nameLocations":["28797:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":3281,"src":"28797:8:18"},"referencedDeclaration":3281,"src":"28797:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3281","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:18"},"returnParameters":{"id":4569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4568,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4593,"src":"28839:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4567,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:18"},"scope":4890,"src":"28768:255:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4721,"nodeType":"Block","src":"29216:854:18","statements":[{"assignments":[4602],"declarations":[{"constant":false,"id":4602,"mutability":"mutable","name":"result","nameLocation":"29234:6:18","nodeType":"VariableDeclaration","scope":4721,"src":"29226:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4601,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4604,"initialValue":{"hexValue":"30","id":4603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:18"},{"id":4718,"nodeType":"UncheckedBlock","src":"29254:787:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4605,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4596,"src":"29282:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:18","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4621,"nodeType":"IfStatement","src":"29278:103:18","trueBody":{"id":4620,"nodeType":"Block","src":"29301:80:18","statements":[{"expression":{"id":4614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4610,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4596,"src":"29319:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:18","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4615,"nodeType":"ExpressionStatement","src":"29319:17:18"},{"expression":{"id":4618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4616,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4602,"src":"29354:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4619,"nodeType":"ExpressionStatement","src":"29354:12:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4622,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4596,"src":"29398:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:18","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4638,"nodeType":"IfStatement","src":"29394:103:18","trueBody":{"id":4637,"nodeType":"Block","src":"29417:80:18","statements":[{"expression":{"id":4631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4596,"src":"29435:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:18","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4632,"nodeType":"ExpressionStatement","src":"29435:17:18"},{"expression":{"id":4635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4633,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4602,"src":"29470:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4636,"nodeType":"ExpressionStatement","src":"29470:12:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4639,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4596,"src":"29514:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:18","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4655,"nodeType":"IfStatement","src":"29510:103:18","trueBody":{"id":4654,"nodeType":"Block","src":"29533:80:18","statements":[{"expression":{"id":4648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4644,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4596,"src":"29551:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:18","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4649,"nodeType":"ExpressionStatement","src":"29551:17:18"},{"expression":{"id":4652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4650,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4602,"src":"29586:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4653,"nodeType":"ExpressionStatement","src":"29586:12:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4656,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4596,"src":"29630:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:18","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4672,"nodeType":"IfStatement","src":"29626:100:18","trueBody":{"id":4671,"nodeType":"Block","src":"29648:78:18","statements":[{"expression":{"id":4665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4661,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4596,"src":"29666:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:18","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4666,"nodeType":"ExpressionStatement","src":"29666:16:18"},{"expression":{"id":4669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4667,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4602,"src":"29700:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4670,"nodeType":"ExpressionStatement","src":"29700:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4673,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4596,"src":"29743:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4676,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:18","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4689,"nodeType":"IfStatement","src":"29739:100:18","trueBody":{"id":4688,"nodeType":"Block","src":"29761:78:18","statements":[{"expression":{"id":4682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4678,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4596,"src":"29779:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:18","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4683,"nodeType":"ExpressionStatement","src":"29779:16:18"},{"expression":{"id":4686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4684,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4602,"src":"29813:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4687,"nodeType":"ExpressionStatement","src":"29813:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4690,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4596,"src":"29856:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:18","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4706,"nodeType":"IfStatement","src":"29852:100:18","trueBody":{"id":4705,"nodeType":"Block","src":"29874:78:18","statements":[{"expression":{"id":4699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4695,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4596,"src":"29892:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4698,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:18","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4700,"nodeType":"ExpressionStatement","src":"29892:16:18"},{"expression":{"id":4703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4701,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4602,"src":"29926:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4704,"nodeType":"ExpressionStatement","src":"29926:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4596,"src":"29969:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":4710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":4709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4717,"nodeType":"IfStatement","src":"29965:66:18","trueBody":{"id":4716,"nodeType":"Block","src":"29987:44:18","statements":[{"expression":{"id":4714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4712,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4602,"src":"30005:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4715,"nodeType":"ExpressionStatement","src":"30005:11:18"}]}}]},{"expression":{"id":4719,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4602,"src":"30057:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4600,"id":4720,"nodeType":"Return","src":"30050:13:18"}]},"documentation":{"id":4594,"nodeType":"StructuredDocumentation","src":"29029:120:18","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4722,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:18","nodeType":"FunctionDefinition","parameters":{"id":4597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4596,"mutability":"mutable","name":"value","nameLocation":"29177:5:18","nodeType":"VariableDeclaration","scope":4722,"src":"29169:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4595,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:18"},"returnParameters":{"id":4600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4599,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4722,"src":"29207:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4598,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:18"},"scope":4890,"src":"29154:916:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4755,"nodeType":"Block","src":"30305:177:18","statements":[{"id":4754,"nodeType":"UncheckedBlock","src":"30315:161:18","statements":[{"assignments":[4734],"declarations":[{"constant":false,"id":4734,"mutability":"mutable","name":"result","nameLocation":"30347:6:18","nodeType":"VariableDeclaration","scope":4754,"src":"30339:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4733,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4738,"initialValue":{"arguments":[{"id":4736,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4725,"src":"30362:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4735,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[4722,4756],"referencedDeclaration":4722,"src":"30356:5:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4739,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4734,"src":"30389:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4743,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"30431:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3281","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3281","typeString":"enum Math.Rounding"}],"id":4742,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4889,"src":"30414:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3281_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4746,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4734,"src":"30450:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4748,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4725,"src":"30459:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4740,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6655,"src":"30398:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6655_$","typeString":"type(library SafeCast)"}},"id":4741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6654,"src":"30398:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4732,"id":4753,"nodeType":"Return","src":"30382:83:18"}]}]},"documentation":{"id":4723,"nodeType":"StructuredDocumentation","src":"30076:143:18","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4756,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:18","nodeType":"FunctionDefinition","parameters":{"id":4729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4725,"mutability":"mutable","name":"value","nameLocation":"30247:5:18","nodeType":"VariableDeclaration","scope":4756,"src":"30239:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4724,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4728,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:18","nodeType":"VariableDeclaration","scope":4756,"src":"30254:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3281","typeString":"enum Math.Rounding"},"typeName":{"id":4727,"nodeType":"UserDefinedTypeName","pathNode":{"id":4726,"name":"Rounding","nameLocations":["30254:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":3281,"src":"30254:8:18"},"referencedDeclaration":3281,"src":"30254:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3281","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:18"},"returnParameters":{"id":4732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4731,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4756,"src":"30296:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4730,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:18"},"scope":4890,"src":"30224:258:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4832,"nodeType":"Block","src":"30800:675:18","statements":[{"expression":{"id":4773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4764,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4762,"src":"30882:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4767,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4759,"src":"30902:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":4768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:18","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4765,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6655,"src":"30886:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6655_$","typeString":"type(library SafeCast)"}},"id":4766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6654,"src":"30886:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":4771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:18","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4774,"nodeType":"ExpressionStatement","src":"30882:64:18"},{"expression":{"id":4787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4775,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4762,"src":"31022:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4778,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4759,"src":"31044:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4779,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4762,"src":"31049:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4781,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":4782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:18","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4776,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6655,"src":"31027:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6655_$","typeString":"type(library SafeCast)"}},"id":4777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6654,"src":"31027:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":4785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:18","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4788,"nodeType":"ExpressionStatement","src":"31022:56:18"},{"expression":{"id":4801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4789,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4762,"src":"31153:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4792,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4759,"src":"31175:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4793,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4762,"src":"31180:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4795,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":4796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:18","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4790,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6655,"src":"31158:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6655_$","typeString":"type(library SafeCast)"}},"id":4791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6654,"src":"31158:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":4799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:18","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4802,"nodeType":"ExpressionStatement","src":"31153:48:18"},{"expression":{"id":4815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4803,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4762,"src":"31276:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4806,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4759,"src":"31298:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4807,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4762,"src":"31303:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4809,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":4810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:18","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4804,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6655,"src":"31281:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6655_$","typeString":"type(library SafeCast)"}},"id":4805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6654,"src":"31281:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4816,"nodeType":"ExpressionStatement","src":"31276:44:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4817,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4762,"src":"31426:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":4818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:18","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4820,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4823,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4759,"src":"31453:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4824,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4762,"src":"31458:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4826,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":4827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:18","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4821,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6655,"src":"31436:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6655_$","typeString":"type(library SafeCast)"}},"id":4822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6654,"src":"31436:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4763,"id":4831,"nodeType":"Return","src":"31418:50:18"}]},"documentation":{"id":4757,"nodeType":"StructuredDocumentation","src":"30488:246:18","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":4833,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:18","nodeType":"FunctionDefinition","parameters":{"id":4760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4759,"mutability":"mutable","name":"x","nameLocation":"30763:1:18","nodeType":"VariableDeclaration","scope":4833,"src":"30755:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4758,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:18"},"returnParameters":{"id":4763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4762,"mutability":"mutable","name":"r","nameLocation":"30797:1:18","nodeType":"VariableDeclaration","scope":4833,"src":"30789:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4761,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:18"},"scope":4890,"src":"30739:736:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4869,"nodeType":"Block","src":"31712:184:18","statements":[{"id":4868,"nodeType":"UncheckedBlock","src":"31722:168:18","statements":[{"assignments":[4845],"declarations":[{"constant":false,"id":4845,"mutability":"mutable","name":"result","nameLocation":"31754:6:18","nodeType":"VariableDeclaration","scope":4868,"src":"31746:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4844,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4849,"initialValue":{"arguments":[{"id":4847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4836,"src":"31770:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4846,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[4833,4870],"referencedDeclaration":4833,"src":"31763:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4850,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4845,"src":"31797:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4854,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4839,"src":"31839:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3281","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3281","typeString":"enum Math.Rounding"}],"id":4853,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4889,"src":"31822:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3281_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4857,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4845,"src":"31858:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:18","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4860,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4862,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4836,"src":"31873:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4851,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6655,"src":"31806:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6655_$","typeString":"type(library SafeCast)"}},"id":4852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6654,"src":"31806:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4843,"id":4867,"nodeType":"Return","src":"31790:89:18"}]}]},"documentation":{"id":4834,"nodeType":"StructuredDocumentation","src":"31481:144:18","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4870,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:18","nodeType":"FunctionDefinition","parameters":{"id":4840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4836,"mutability":"mutable","name":"value","nameLocation":"31654:5:18","nodeType":"VariableDeclaration","scope":4870,"src":"31646:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4835,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4839,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:18","nodeType":"VariableDeclaration","scope":4870,"src":"31661:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3281","typeString":"enum Math.Rounding"},"typeName":{"id":4838,"nodeType":"UserDefinedTypeName","pathNode":{"id":4837,"name":"Rounding","nameLocations":["31661:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":3281,"src":"31661:8:18"},"referencedDeclaration":3281,"src":"31661:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3281","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:18"},"returnParameters":{"id":4843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4870,"src":"31703:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4841,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:18"},"scope":4890,"src":"31630:266:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4888,"nodeType":"Block","src":"32094:48:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4881,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4874,"src":"32117:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3281","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3281","typeString":"enum Math.Rounding"}],"id":4880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4879,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:18","typeDescriptions":{}}},"id":4882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":4883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4878,"id":4887,"nodeType":"Return","src":"32104:31:18"}]},"documentation":{"id":4871,"nodeType":"StructuredDocumentation","src":"31902:113:18","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":4889,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:18","nodeType":"FunctionDefinition","parameters":{"id":4875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4874,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:18","nodeType":"VariableDeclaration","scope":4889,"src":"32046:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3281","typeString":"enum Math.Rounding"},"typeName":{"id":4873,"nodeType":"UserDefinedTypeName","pathNode":{"id":4872,"name":"Rounding","nameLocations":["32046:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":3281,"src":"32046:8:18"},"referencedDeclaration":3281,"src":"32046:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3281","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:18"},"returnParameters":{"id":4878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4877,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4889,"src":"32088:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4876,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:18"},"scope":4890,"src":"32020:122:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4891,"src":"281:31863:18","usedErrors":[],"usedEvents":[]}],"src":"103:32042:18"},"id":18},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[6655]},"id":6656,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4892,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:19"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":4893,"nodeType":"StructuredDocumentation","src":"218:550:19","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":6655,"linearizedBaseContracts":[6655],"name":"SafeCast","nameLocation":"777:8:19","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4894,"nodeType":"StructuredDocumentation","src":"792:68:19","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":4900,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:19","nodeType":"ErrorDefinition","parameters":{"id":4899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4896,"mutability":"mutable","name":"bits","nameLocation":"908:4:19","nodeType":"VariableDeclaration","scope":4900,"src":"902:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4895,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4898,"mutability":"mutable","name":"value","nameLocation":"922:5:19","nodeType":"VariableDeclaration","scope":4900,"src":"914:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4897,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:19"},"src":"865:64:19"},{"documentation":{"id":4901,"nodeType":"StructuredDocumentation","src":"935:75:19","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":4905,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:19","nodeType":"ErrorDefinition","parameters":{"id":4904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4903,"mutability":"mutable","name":"value","nameLocation":"1056:5:19","nodeType":"VariableDeclaration","scope":4905,"src":"1049:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4902,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:19"},"src":"1015:48:19"},{"documentation":{"id":4906,"nodeType":"StructuredDocumentation","src":"1069:67:19","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":4912,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:19","nodeType":"ErrorDefinition","parameters":{"id":4911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4908,"mutability":"mutable","name":"bits","nameLocation":"1183:4:19","nodeType":"VariableDeclaration","scope":4912,"src":"1177:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4907,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4910,"mutability":"mutable","name":"value","nameLocation":"1196:5:19","nodeType":"VariableDeclaration","scope":4912,"src":"1189:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4909,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:19"},"src":"1141:62:19"},{"documentation":{"id":4913,"nodeType":"StructuredDocumentation","src":"1209:75:19","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":4917,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:19","nodeType":"ErrorDefinition","parameters":{"id":4916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4915,"mutability":"mutable","name":"value","nameLocation":"1331:5:19","nodeType":"VariableDeclaration","scope":4917,"src":"1323:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4914,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:19"},"src":"1289:49:19"},{"body":{"id":4944,"nodeType":"Block","src":"1695:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4925,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4920,"src":"1709:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4928,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4927,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":4926,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":4930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:19","memberName":"max","nodeType":"MemberAccess","src":"1717:17:19","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4938,"nodeType":"IfStatement","src":"1705:105:19","trueBody":{"id":4937,"nodeType":"Block","src":"1736:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":4933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:19","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":4934,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4920,"src":"1793:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4932,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"1757:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4936,"nodeType":"RevertStatement","src":"1750:49:19"}]}},{"expression":{"arguments":[{"id":4941,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4920,"src":"1834:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4939,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:19","typeDescriptions":{}}},"id":4942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":4924,"id":4943,"nodeType":"Return","src":"1819:21:19"}]},"documentation":{"id":4918,"nodeType":"StructuredDocumentation","src":"1344:280:19","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":4945,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:19","nodeType":"FunctionDefinition","parameters":{"id":4921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4920,"mutability":"mutable","name":"value","nameLocation":"1656:5:19","nodeType":"VariableDeclaration","scope":4945,"src":"1648:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4919,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:19"},"returnParameters":{"id":4924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4923,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4945,"src":"1686:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":4922,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:19","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:19"},"scope":6655,"src":"1629:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4972,"nodeType":"Block","src":"2204:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4953,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4948,"src":"2218:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4956,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4955,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":4954,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":4958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:19","memberName":"max","nodeType":"MemberAccess","src":"2226:17:19","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4966,"nodeType":"IfStatement","src":"2214:105:19","trueBody":{"id":4965,"nodeType":"Block","src":"2245:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":4961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:19","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":4962,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4948,"src":"2302:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4960,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"2266:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4964,"nodeType":"RevertStatement","src":"2259:49:19"}]}},{"expression":{"arguments":[{"id":4969,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4948,"src":"2343:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4967,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:19","typeDescriptions":{}}},"id":4970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":4952,"id":4971,"nodeType":"Return","src":"2328:21:19"}]},"documentation":{"id":4946,"nodeType":"StructuredDocumentation","src":"1853:280:19","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":4973,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:19","nodeType":"FunctionDefinition","parameters":{"id":4949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4948,"mutability":"mutable","name":"value","nameLocation":"2165:5:19","nodeType":"VariableDeclaration","scope":4973,"src":"2157:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4947,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:19"},"returnParameters":{"id":4952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4951,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4973,"src":"2195:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":4950,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:19","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:19"},"scope":6655,"src":"2138:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5000,"nodeType":"Block","src":"2713:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4981,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4976,"src":"2727:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4983,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":4982,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":4986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:19","memberName":"max","nodeType":"MemberAccess","src":"2735:17:19","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4994,"nodeType":"IfStatement","src":"2723:105:19","trueBody":{"id":4993,"nodeType":"Block","src":"2754:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":4989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:19","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":4990,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4976,"src":"2811:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4988,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"2775:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4992,"nodeType":"RevertStatement","src":"2768:49:19"}]}},{"expression":{"arguments":[{"id":4997,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4976,"src":"2852:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4995,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:19","typeDescriptions":{}}},"id":4998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":4980,"id":4999,"nodeType":"Return","src":"2837:21:19"}]},"documentation":{"id":4974,"nodeType":"StructuredDocumentation","src":"2362:280:19","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5001,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:19","nodeType":"FunctionDefinition","parameters":{"id":4977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4976,"mutability":"mutable","name":"value","nameLocation":"2674:5:19","nodeType":"VariableDeclaration","scope":5001,"src":"2666:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4975,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:19"},"returnParameters":{"id":4980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4979,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5001,"src":"2704:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":4978,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:19","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:19"},"scope":6655,"src":"2647:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5028,"nodeType":"Block","src":"3222:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5009,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5004,"src":"3236:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5012,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5011,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":5010,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":5014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:19","memberName":"max","nodeType":"MemberAccess","src":"3244:17:19","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5022,"nodeType":"IfStatement","src":"3232:105:19","trueBody":{"id":5021,"nodeType":"Block","src":"3263:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:19","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5018,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5004,"src":"3320:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5016,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"3284:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5020,"nodeType":"RevertStatement","src":"3277:49:19"}]}},{"expression":{"arguments":[{"id":5025,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5004,"src":"3361:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5024,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5023,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:19","typeDescriptions":{}}},"id":5026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":5008,"id":5027,"nodeType":"Return","src":"3346:21:19"}]},"documentation":{"id":5002,"nodeType":"StructuredDocumentation","src":"2871:280:19","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5029,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:19","nodeType":"FunctionDefinition","parameters":{"id":5005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5004,"mutability":"mutable","name":"value","nameLocation":"3183:5:19","nodeType":"VariableDeclaration","scope":5029,"src":"3175:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5003,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:19"},"returnParameters":{"id":5008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5007,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5029,"src":"3213:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5006,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:19","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:19"},"scope":6655,"src":"3156:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5056,"nodeType":"Block","src":"3731:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5037,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5032,"src":"3745:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5040,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5039,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":5038,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":5042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:19","memberName":"max","nodeType":"MemberAccess","src":"3753:17:19","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5050,"nodeType":"IfStatement","src":"3741:105:19","trueBody":{"id":5049,"nodeType":"Block","src":"3772:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:19","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5046,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5032,"src":"3829:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5044,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"3793:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5048,"nodeType":"RevertStatement","src":"3786:49:19"}]}},{"expression":{"arguments":[{"id":5053,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5032,"src":"3870:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5051,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:19","typeDescriptions":{}}},"id":5054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":5036,"id":5055,"nodeType":"Return","src":"3855:21:19"}]},"documentation":{"id":5030,"nodeType":"StructuredDocumentation","src":"3380:280:19","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5057,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:19","nodeType":"FunctionDefinition","parameters":{"id":5033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5032,"mutability":"mutable","name":"value","nameLocation":"3692:5:19","nodeType":"VariableDeclaration","scope":5057,"src":"3684:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5031,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:19"},"returnParameters":{"id":5036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5035,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5057,"src":"3722:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":5034,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:19","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:19"},"scope":6655,"src":"3665:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5084,"nodeType":"Block","src":"4240:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5065,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5060,"src":"4254:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5068,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5067,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":5066,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":5070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:19","memberName":"max","nodeType":"MemberAccess","src":"4262:17:19","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5078,"nodeType":"IfStatement","src":"4250:105:19","trueBody":{"id":5077,"nodeType":"Block","src":"4281:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:19","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5074,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5060,"src":"4338:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5072,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"4302:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5076,"nodeType":"RevertStatement","src":"4295:49:19"}]}},{"expression":{"arguments":[{"id":5081,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5060,"src":"4379:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5079,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:19","typeDescriptions":{}}},"id":5082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":5064,"id":5083,"nodeType":"Return","src":"4364:21:19"}]},"documentation":{"id":5058,"nodeType":"StructuredDocumentation","src":"3889:280:19","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5085,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:19","nodeType":"FunctionDefinition","parameters":{"id":5061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5060,"mutability":"mutable","name":"value","nameLocation":"4201:5:19","nodeType":"VariableDeclaration","scope":5085,"src":"4193:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5059,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:19"},"returnParameters":{"id":5064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5063,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5085,"src":"4231:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":5062,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:19","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:19"},"scope":6655,"src":"4174:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5112,"nodeType":"Block","src":"4749:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5093,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5088,"src":"4763:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5095,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":5094,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":5098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:19","memberName":"max","nodeType":"MemberAccess","src":"4771:17:19","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5106,"nodeType":"IfStatement","src":"4759:105:19","trueBody":{"id":5105,"nodeType":"Block","src":"4790:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:19","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5102,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5088,"src":"4847:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5100,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"4811:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5104,"nodeType":"RevertStatement","src":"4804:49:19"}]}},{"expression":{"arguments":[{"id":5109,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5088,"src":"4888:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5107,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:19","typeDescriptions":{}}},"id":5110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":5092,"id":5111,"nodeType":"Return","src":"4873:21:19"}]},"documentation":{"id":5086,"nodeType":"StructuredDocumentation","src":"4398:280:19","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5113,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:19","nodeType":"FunctionDefinition","parameters":{"id":5089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5088,"mutability":"mutable","name":"value","nameLocation":"4710:5:19","nodeType":"VariableDeclaration","scope":5113,"src":"4702:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5087,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:19"},"returnParameters":{"id":5092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5091,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5113,"src":"4740:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":5090,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:19","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:19"},"scope":6655,"src":"4683:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5140,"nodeType":"Block","src":"5258:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5121,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5116,"src":"5272:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5123,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":5122,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":5126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:19","memberName":"max","nodeType":"MemberAccess","src":"5280:17:19","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5134,"nodeType":"IfStatement","src":"5268:105:19","trueBody":{"id":5133,"nodeType":"Block","src":"5299:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:19","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5130,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5116,"src":"5356:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5128,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"5320:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5132,"nodeType":"RevertStatement","src":"5313:49:19"}]}},{"expression":{"arguments":[{"id":5137,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5116,"src":"5397:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5135,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:19","typeDescriptions":{}}},"id":5138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":5120,"id":5139,"nodeType":"Return","src":"5382:21:19"}]},"documentation":{"id":5114,"nodeType":"StructuredDocumentation","src":"4907:280:19","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5141,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:19","nodeType":"FunctionDefinition","parameters":{"id":5117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5116,"mutability":"mutable","name":"value","nameLocation":"5219:5:19","nodeType":"VariableDeclaration","scope":5141,"src":"5211:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5115,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:19"},"returnParameters":{"id":5120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5119,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5141,"src":"5249:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":5118,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:19","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:19"},"scope":6655,"src":"5192:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5168,"nodeType":"Block","src":"5767:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5149,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5144,"src":"5781:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5151,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":5150,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":5154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:19","memberName":"max","nodeType":"MemberAccess","src":"5789:17:19","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5162,"nodeType":"IfStatement","src":"5777:105:19","trueBody":{"id":5161,"nodeType":"Block","src":"5808:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:19","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5158,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5144,"src":"5865:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5156,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"5829:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5160,"nodeType":"RevertStatement","src":"5822:49:19"}]}},{"expression":{"arguments":[{"id":5165,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5144,"src":"5906:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5163,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:19","typeDescriptions":{}}},"id":5166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":5148,"id":5167,"nodeType":"Return","src":"5891:21:19"}]},"documentation":{"id":5142,"nodeType":"StructuredDocumentation","src":"5416:280:19","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5169,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:19","nodeType":"FunctionDefinition","parameters":{"id":5145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5144,"mutability":"mutable","name":"value","nameLocation":"5728:5:19","nodeType":"VariableDeclaration","scope":5169,"src":"5720:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5143,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:19"},"returnParameters":{"id":5148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5147,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5169,"src":"5758:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":5146,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:19","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:19"},"scope":6655,"src":"5701:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5196,"nodeType":"Block","src":"6276:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5177,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"6290:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5179,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":5178,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":5182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:19","memberName":"max","nodeType":"MemberAccess","src":"6298:17:19","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5190,"nodeType":"IfStatement","src":"6286:105:19","trueBody":{"id":5189,"nodeType":"Block","src":"6317:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:19","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"6374:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5184,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"6338:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5188,"nodeType":"RevertStatement","src":"6331:49:19"}]}},{"expression":{"arguments":[{"id":5193,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"6415:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5191,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:19","typeDescriptions":{}}},"id":5194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":5176,"id":5195,"nodeType":"Return","src":"6400:21:19"}]},"documentation":{"id":5170,"nodeType":"StructuredDocumentation","src":"5925:280:19","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5197,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:19","nodeType":"FunctionDefinition","parameters":{"id":5173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5172,"mutability":"mutable","name":"value","nameLocation":"6237:5:19","nodeType":"VariableDeclaration","scope":5197,"src":"6229:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5171,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:19"},"returnParameters":{"id":5176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5175,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5197,"src":"6267:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":5174,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:19","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:19"},"scope":6655,"src":"6210:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5224,"nodeType":"Block","src":"6785:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5205,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5200,"src":"6799:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5207,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":5206,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":5210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:19","memberName":"max","nodeType":"MemberAccess","src":"6807:17:19","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5218,"nodeType":"IfStatement","src":"6795:105:19","trueBody":{"id":5217,"nodeType":"Block","src":"6826:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:19","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5214,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5200,"src":"6883:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5212,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"6847:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5216,"nodeType":"RevertStatement","src":"6840:49:19"}]}},{"expression":{"arguments":[{"id":5221,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5200,"src":"6924:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5219,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:19","typeDescriptions":{}}},"id":5222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":5204,"id":5223,"nodeType":"Return","src":"6909:21:19"}]},"documentation":{"id":5198,"nodeType":"StructuredDocumentation","src":"6434:280:19","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5225,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:19","nodeType":"FunctionDefinition","parameters":{"id":5201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5200,"mutability":"mutable","name":"value","nameLocation":"6746:5:19","nodeType":"VariableDeclaration","scope":5225,"src":"6738:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5199,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:19"},"returnParameters":{"id":5204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5203,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5225,"src":"6776:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":5202,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:19","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:19"},"scope":6655,"src":"6719:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5252,"nodeType":"Block","src":"7294:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5233,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5228,"src":"7308:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5235,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":5234,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":5238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:19","memberName":"max","nodeType":"MemberAccess","src":"7316:17:19","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5246,"nodeType":"IfStatement","src":"7304:105:19","trueBody":{"id":5245,"nodeType":"Block","src":"7335:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:19","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5242,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5228,"src":"7392:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5240,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"7356:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5244,"nodeType":"RevertStatement","src":"7349:49:19"}]}},{"expression":{"arguments":[{"id":5249,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5228,"src":"7433:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5247,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:19","typeDescriptions":{}}},"id":5250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5232,"id":5251,"nodeType":"Return","src":"7418:21:19"}]},"documentation":{"id":5226,"nodeType":"StructuredDocumentation","src":"6943:280:19","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5253,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:19","nodeType":"FunctionDefinition","parameters":{"id":5229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5228,"mutability":"mutable","name":"value","nameLocation":"7255:5:19","nodeType":"VariableDeclaration","scope":5253,"src":"7247:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5227,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:19"},"returnParameters":{"id":5232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5231,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5253,"src":"7285:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5230,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:19","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:19"},"scope":6655,"src":"7228:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5280,"nodeType":"Block","src":"7803:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5261,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5256,"src":"7817:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5263,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":5262,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":5266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:19","memberName":"max","nodeType":"MemberAccess","src":"7825:17:19","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5274,"nodeType":"IfStatement","src":"7813:105:19","trueBody":{"id":5273,"nodeType":"Block","src":"7844:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:19","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5270,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5256,"src":"7901:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5268,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"7865:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5272,"nodeType":"RevertStatement","src":"7858:49:19"}]}},{"expression":{"arguments":[{"id":5277,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5256,"src":"7942:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5275,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:19","typeDescriptions":{}}},"id":5278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":5260,"id":5279,"nodeType":"Return","src":"7927:21:19"}]},"documentation":{"id":5254,"nodeType":"StructuredDocumentation","src":"7452:280:19","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5281,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:19","nodeType":"FunctionDefinition","parameters":{"id":5257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5256,"mutability":"mutable","name":"value","nameLocation":"7764:5:19","nodeType":"VariableDeclaration","scope":5281,"src":"7756:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5255,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:19"},"returnParameters":{"id":5260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5259,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5281,"src":"7794:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":5258,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:19","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:19"},"scope":6655,"src":"7737:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5308,"nodeType":"Block","src":"8312:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5289,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5284,"src":"8326:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5291,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":5290,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":5294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:19","memberName":"max","nodeType":"MemberAccess","src":"8334:17:19","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5302,"nodeType":"IfStatement","src":"8322:105:19","trueBody":{"id":5301,"nodeType":"Block","src":"8353:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:19","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5298,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5284,"src":"8410:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5296,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"8374:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5300,"nodeType":"RevertStatement","src":"8367:49:19"}]}},{"expression":{"arguments":[{"id":5305,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5284,"src":"8451:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5303,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:19","typeDescriptions":{}}},"id":5306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":5288,"id":5307,"nodeType":"Return","src":"8436:21:19"}]},"documentation":{"id":5282,"nodeType":"StructuredDocumentation","src":"7961:280:19","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5309,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:19","nodeType":"FunctionDefinition","parameters":{"id":5285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5284,"mutability":"mutable","name":"value","nameLocation":"8273:5:19","nodeType":"VariableDeclaration","scope":5309,"src":"8265:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5283,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:19"},"returnParameters":{"id":5288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5287,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5309,"src":"8303:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":5286,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:19","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:19"},"scope":6655,"src":"8246:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5336,"nodeType":"Block","src":"8821:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5317,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5312,"src":"8835:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5320,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5319,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":5318,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":5322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:19","memberName":"max","nodeType":"MemberAccess","src":"8843:17:19","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5330,"nodeType":"IfStatement","src":"8831:105:19","trueBody":{"id":5329,"nodeType":"Block","src":"8862:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:19","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5326,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5312,"src":"8919:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5324,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"8883:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5328,"nodeType":"RevertStatement","src":"8876:49:19"}]}},{"expression":{"arguments":[{"id":5333,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5312,"src":"8960:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5331,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:19","typeDescriptions":{}}},"id":5334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":5316,"id":5335,"nodeType":"Return","src":"8945:21:19"}]},"documentation":{"id":5310,"nodeType":"StructuredDocumentation","src":"8470:280:19","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5337,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:19","nodeType":"FunctionDefinition","parameters":{"id":5313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5312,"mutability":"mutable","name":"value","nameLocation":"8782:5:19","nodeType":"VariableDeclaration","scope":5337,"src":"8774:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5311,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:19"},"returnParameters":{"id":5316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5315,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5337,"src":"8812:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":5314,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:19","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:19"},"scope":6655,"src":"8755:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5364,"nodeType":"Block","src":"9330:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5345,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5340,"src":"9344:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5348,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5347,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":5346,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":5350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:19","memberName":"max","nodeType":"MemberAccess","src":"9352:17:19","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5358,"nodeType":"IfStatement","src":"9340:105:19","trueBody":{"id":5357,"nodeType":"Block","src":"9371:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5354,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5340,"src":"9428:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5352,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"9392:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5356,"nodeType":"RevertStatement","src":"9385:49:19"}]}},{"expression":{"arguments":[{"id":5361,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5340,"src":"9469:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5359,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:19","typeDescriptions":{}}},"id":5362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":5344,"id":5363,"nodeType":"Return","src":"9454:21:19"}]},"documentation":{"id":5338,"nodeType":"StructuredDocumentation","src":"8979:280:19","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5365,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:19","nodeType":"FunctionDefinition","parameters":{"id":5341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5340,"mutability":"mutable","name":"value","nameLocation":"9291:5:19","nodeType":"VariableDeclaration","scope":5365,"src":"9283:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5339,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:19"},"returnParameters":{"id":5344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5365,"src":"9321:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5342,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:19","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:19"},"scope":6655,"src":"9264:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5392,"nodeType":"Block","src":"9839:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5373,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5368,"src":"9853:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5376,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5375,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":5374,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":5378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:19","memberName":"max","nodeType":"MemberAccess","src":"9861:17:19","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5386,"nodeType":"IfStatement","src":"9849:105:19","trueBody":{"id":5385,"nodeType":"Block","src":"9880:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:19","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5382,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5368,"src":"9937:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5380,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"9901:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5384,"nodeType":"RevertStatement","src":"9894:49:19"}]}},{"expression":{"arguments":[{"id":5389,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5368,"src":"9978:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5387,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:19","typeDescriptions":{}}},"id":5390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":5372,"id":5391,"nodeType":"Return","src":"9963:21:19"}]},"documentation":{"id":5366,"nodeType":"StructuredDocumentation","src":"9488:280:19","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5393,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:19","nodeType":"FunctionDefinition","parameters":{"id":5369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5368,"mutability":"mutable","name":"value","nameLocation":"9800:5:19","nodeType":"VariableDeclaration","scope":5393,"src":"9792:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5367,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:19"},"returnParameters":{"id":5372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5371,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5393,"src":"9830:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":5370,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:19","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:19"},"scope":6655,"src":"9773:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5420,"nodeType":"Block","src":"10348:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5401,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5396,"src":"10362:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5404,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5403,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":5402,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":5406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:19","memberName":"max","nodeType":"MemberAccess","src":"10370:17:19","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5414,"nodeType":"IfStatement","src":"10358:105:19","trueBody":{"id":5413,"nodeType":"Block","src":"10389:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:19","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5410,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5396,"src":"10446:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5408,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"10410:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5412,"nodeType":"RevertStatement","src":"10403:49:19"}]}},{"expression":{"arguments":[{"id":5417,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5396,"src":"10487:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5415,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:19","typeDescriptions":{}}},"id":5418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":5400,"id":5419,"nodeType":"Return","src":"10472:21:19"}]},"documentation":{"id":5394,"nodeType":"StructuredDocumentation","src":"9997:280:19","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5421,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:19","nodeType":"FunctionDefinition","parameters":{"id":5397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5396,"mutability":"mutable","name":"value","nameLocation":"10309:5:19","nodeType":"VariableDeclaration","scope":5421,"src":"10301:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5395,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:19"},"returnParameters":{"id":5400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5399,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5421,"src":"10339:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":5398,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:19","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:19"},"scope":6655,"src":"10282:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5448,"nodeType":"Block","src":"10857:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5429,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5424,"src":"10871:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5431,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":5430,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":5434,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:19","memberName":"max","nodeType":"MemberAccess","src":"10879:17:19","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5442,"nodeType":"IfStatement","src":"10867:105:19","trueBody":{"id":5441,"nodeType":"Block","src":"10898:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:19","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5424,"src":"10955:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5436,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"10919:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5440,"nodeType":"RevertStatement","src":"10912:49:19"}]}},{"expression":{"arguments":[{"id":5445,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5424,"src":"10996:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5443,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:19","typeDescriptions":{}}},"id":5446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":5428,"id":5447,"nodeType":"Return","src":"10981:21:19"}]},"documentation":{"id":5422,"nodeType":"StructuredDocumentation","src":"10506:280:19","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5449,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:19","nodeType":"FunctionDefinition","parameters":{"id":5425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5424,"mutability":"mutable","name":"value","nameLocation":"10818:5:19","nodeType":"VariableDeclaration","scope":5449,"src":"10810:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5423,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:19"},"returnParameters":{"id":5428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5427,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5449,"src":"10848:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":5426,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:19","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:19"},"scope":6655,"src":"10791:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5476,"nodeType":"Block","src":"11360:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5457,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5452,"src":"11374:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5459,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":5458,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":5462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:19","memberName":"max","nodeType":"MemberAccess","src":"11382:16:19","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5470,"nodeType":"IfStatement","src":"11370:103:19","trueBody":{"id":5469,"nodeType":"Block","src":"11400:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:19","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5466,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5452,"src":"11456:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5464,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"11421:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5468,"nodeType":"RevertStatement","src":"11414:48:19"}]}},{"expression":{"arguments":[{"id":5473,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5452,"src":"11496:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5471,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:19","typeDescriptions":{}}},"id":5474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":5456,"id":5475,"nodeType":"Return","src":"11482:20:19"}]},"documentation":{"id":5450,"nodeType":"StructuredDocumentation","src":"11015:276:19","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5477,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:19","nodeType":"FunctionDefinition","parameters":{"id":5453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5452,"mutability":"mutable","name":"value","nameLocation":"11322:5:19","nodeType":"VariableDeclaration","scope":5477,"src":"11314:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5451,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:19"},"returnParameters":{"id":5456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5455,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5477,"src":"11352:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":5454,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:19","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:19"},"scope":6655,"src":"11296:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5504,"nodeType":"Block","src":"11860:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5485,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5480,"src":"11874:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5487,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":5486,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":5490,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:19","memberName":"max","nodeType":"MemberAccess","src":"11882:16:19","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5498,"nodeType":"IfStatement","src":"11870:103:19","trueBody":{"id":5497,"nodeType":"Block","src":"11900:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:19","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5494,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5480,"src":"11956:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5492,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"11921:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5496,"nodeType":"RevertStatement","src":"11914:48:19"}]}},{"expression":{"arguments":[{"id":5501,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5480,"src":"11996:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5499,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:19","typeDescriptions":{}}},"id":5502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":5484,"id":5503,"nodeType":"Return","src":"11982:20:19"}]},"documentation":{"id":5478,"nodeType":"StructuredDocumentation","src":"11515:276:19","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5505,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:19","nodeType":"FunctionDefinition","parameters":{"id":5481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5480,"mutability":"mutable","name":"value","nameLocation":"11822:5:19","nodeType":"VariableDeclaration","scope":5505,"src":"11814:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5479,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:19"},"returnParameters":{"id":5484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5483,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5505,"src":"11852:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":5482,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:19","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:19"},"scope":6655,"src":"11796:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5532,"nodeType":"Block","src":"12360:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5513,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5508,"src":"12374:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5516,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5515,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":5514,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":5518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:19","memberName":"max","nodeType":"MemberAccess","src":"12382:16:19","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5526,"nodeType":"IfStatement","src":"12370:103:19","trueBody":{"id":5525,"nodeType":"Block","src":"12400:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:19","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5522,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5508,"src":"12456:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5520,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"12421:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5524,"nodeType":"RevertStatement","src":"12414:48:19"}]}},{"expression":{"arguments":[{"id":5529,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5508,"src":"12496:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5527,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:19","typeDescriptions":{}}},"id":5530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":5512,"id":5531,"nodeType":"Return","src":"12482:20:19"}]},"documentation":{"id":5506,"nodeType":"StructuredDocumentation","src":"12015:276:19","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5533,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:19","nodeType":"FunctionDefinition","parameters":{"id":5509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5508,"mutability":"mutable","name":"value","nameLocation":"12322:5:19","nodeType":"VariableDeclaration","scope":5533,"src":"12314:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5507,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:19"},"returnParameters":{"id":5512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5511,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5533,"src":"12352:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":5510,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:19","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:19"},"scope":6655,"src":"12296:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5560,"nodeType":"Block","src":"12860:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5541,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5536,"src":"12874:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5543,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":5542,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":5546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:19","memberName":"max","nodeType":"MemberAccess","src":"12882:16:19","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5554,"nodeType":"IfStatement","src":"12870:103:19","trueBody":{"id":5553,"nodeType":"Block","src":"12900:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:19","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5536,"src":"12956:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5548,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"12921:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5552,"nodeType":"RevertStatement","src":"12914:48:19"}]}},{"expression":{"arguments":[{"id":5557,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5536,"src":"12996:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5555,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:19","typeDescriptions":{}}},"id":5558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":5540,"id":5559,"nodeType":"Return","src":"12982:20:19"}]},"documentation":{"id":5534,"nodeType":"StructuredDocumentation","src":"12515:276:19","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5561,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:19","nodeType":"FunctionDefinition","parameters":{"id":5537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5536,"mutability":"mutable","name":"value","nameLocation":"12822:5:19","nodeType":"VariableDeclaration","scope":5561,"src":"12814:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5535,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:19"},"returnParameters":{"id":5540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5539,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5561,"src":"12852:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":5538,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:19","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:19"},"scope":6655,"src":"12796:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5588,"nodeType":"Block","src":"13360:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5569,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5564,"src":"13374:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5571,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":5570,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":5574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:19","memberName":"max","nodeType":"MemberAccess","src":"13382:16:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5582,"nodeType":"IfStatement","src":"13370:103:19","trueBody":{"id":5581,"nodeType":"Block","src":"13400:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5578,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5564,"src":"13456:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5576,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"13421:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5580,"nodeType":"RevertStatement","src":"13414:48:19"}]}},{"expression":{"arguments":[{"id":5585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5564,"src":"13496:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5583,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:19","typeDescriptions":{}}},"id":5586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5568,"id":5587,"nodeType":"Return","src":"13482:20:19"}]},"documentation":{"id":5562,"nodeType":"StructuredDocumentation","src":"13015:276:19","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5589,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:19","nodeType":"FunctionDefinition","parameters":{"id":5565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5564,"mutability":"mutable","name":"value","nameLocation":"13322:5:19","nodeType":"VariableDeclaration","scope":5589,"src":"13314:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5563,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:19"},"returnParameters":{"id":5568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5567,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5589,"src":"13352:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5566,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:19"},"scope":6655,"src":"13296:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5616,"nodeType":"Block","src":"13860:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5597,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5592,"src":"13874:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5600,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5599,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":5598,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":5602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:19","memberName":"max","nodeType":"MemberAccess","src":"13882:16:19","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5610,"nodeType":"IfStatement","src":"13870:103:19","trueBody":{"id":5609,"nodeType":"Block","src":"13900:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:19","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5606,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5592,"src":"13956:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5604,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"13921:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5608,"nodeType":"RevertStatement","src":"13914:48:19"}]}},{"expression":{"arguments":[{"id":5613,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5592,"src":"13996:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5611,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:19","typeDescriptions":{}}},"id":5614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":5596,"id":5615,"nodeType":"Return","src":"13982:20:19"}]},"documentation":{"id":5590,"nodeType":"StructuredDocumentation","src":"13515:276:19","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5617,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:19","nodeType":"FunctionDefinition","parameters":{"id":5593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5592,"mutability":"mutable","name":"value","nameLocation":"13822:5:19","nodeType":"VariableDeclaration","scope":5617,"src":"13814:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5591,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:19"},"returnParameters":{"id":5596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5595,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5617,"src":"13852:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":5594,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:19","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:19"},"scope":6655,"src":"13796:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5644,"nodeType":"Block","src":"14360:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5625,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5620,"src":"14374:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5627,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":5626,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":5630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:19","memberName":"max","nodeType":"MemberAccess","src":"14382:16:19","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5638,"nodeType":"IfStatement","src":"14370:103:19","trueBody":{"id":5637,"nodeType":"Block","src":"14400:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:19","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5634,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5620,"src":"14456:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5632,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"14421:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5636,"nodeType":"RevertStatement","src":"14414:48:19"}]}},{"expression":{"arguments":[{"id":5641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5620,"src":"14496:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5639,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:19","typeDescriptions":{}}},"id":5642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":5624,"id":5643,"nodeType":"Return","src":"14482:20:19"}]},"documentation":{"id":5618,"nodeType":"StructuredDocumentation","src":"14015:276:19","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5645,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:19","nodeType":"FunctionDefinition","parameters":{"id":5621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5620,"mutability":"mutable","name":"value","nameLocation":"14322:5:19","nodeType":"VariableDeclaration","scope":5645,"src":"14314:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5619,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:19"},"returnParameters":{"id":5624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5623,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5645,"src":"14352:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5622,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:19","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:19"},"scope":6655,"src":"14296:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5672,"nodeType":"Block","src":"14860:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5653,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5648,"src":"14874:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5655,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":5654,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":5658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:19","memberName":"max","nodeType":"MemberAccess","src":"14882:16:19","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5666,"nodeType":"IfStatement","src":"14870:103:19","trueBody":{"id":5665,"nodeType":"Block","src":"14900:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":5661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:19","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":5662,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5648,"src":"14956:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5660,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"14921:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5664,"nodeType":"RevertStatement","src":"14914:48:19"}]}},{"expression":{"arguments":[{"id":5669,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5648,"src":"14996:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5667,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:19","typeDescriptions":{}}},"id":5670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":5652,"id":5671,"nodeType":"Return","src":"14982:20:19"}]},"documentation":{"id":5646,"nodeType":"StructuredDocumentation","src":"14515:276:19","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":5673,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:19","nodeType":"FunctionDefinition","parameters":{"id":5649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5648,"mutability":"mutable","name":"value","nameLocation":"14822:5:19","nodeType":"VariableDeclaration","scope":5673,"src":"14814:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5647,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:19"},"returnParameters":{"id":5652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5651,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5673,"src":"14852:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":5650,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:19","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:19"},"scope":6655,"src":"14796:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5700,"nodeType":"Block","src":"15360:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5681,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5676,"src":"15374:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5684,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5683,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":5682,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":5686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:19","memberName":"max","nodeType":"MemberAccess","src":"15382:16:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5694,"nodeType":"IfStatement","src":"15370:103:19","trueBody":{"id":5693,"nodeType":"Block","src":"15400:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":5689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":5690,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5676,"src":"15456:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5688,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"15421:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5692,"nodeType":"RevertStatement","src":"15414:48:19"}]}},{"expression":{"arguments":[{"id":5697,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5676,"src":"15496:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5695,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:19","typeDescriptions":{}}},"id":5698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":5680,"id":5699,"nodeType":"Return","src":"15482:20:19"}]},"documentation":{"id":5674,"nodeType":"StructuredDocumentation","src":"15015:276:19","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":5701,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:19","nodeType":"FunctionDefinition","parameters":{"id":5677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5676,"mutability":"mutable","name":"value","nameLocation":"15322:5:19","nodeType":"VariableDeclaration","scope":5701,"src":"15314:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5675,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:19"},"returnParameters":{"id":5680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5679,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5701,"src":"15352:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5678,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:19"},"scope":6655,"src":"15296:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5728,"nodeType":"Block","src":"15860:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5709,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5704,"src":"15874:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5711,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":5710,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":5714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:19","memberName":"max","nodeType":"MemberAccess","src":"15882:16:19","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5722,"nodeType":"IfStatement","src":"15870:103:19","trueBody":{"id":5721,"nodeType":"Block","src":"15900:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":5717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:19","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":5718,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5704,"src":"15956:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5716,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"15921:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5720,"nodeType":"RevertStatement","src":"15914:48:19"}]}},{"expression":{"arguments":[{"id":5725,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5704,"src":"15996:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5723,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:19","typeDescriptions":{}}},"id":5726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":5708,"id":5727,"nodeType":"Return","src":"15982:20:19"}]},"documentation":{"id":5702,"nodeType":"StructuredDocumentation","src":"15515:276:19","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":5729,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:19","nodeType":"FunctionDefinition","parameters":{"id":5705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5704,"mutability":"mutable","name":"value","nameLocation":"15822:5:19","nodeType":"VariableDeclaration","scope":5729,"src":"15814:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5703,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:19"},"returnParameters":{"id":5708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5707,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5729,"src":"15852:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5706,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:19","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:19"},"scope":6655,"src":"15796:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5756,"nodeType":"Block","src":"16360:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5737,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5732,"src":"16374:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5739,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":5738,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":5742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:19","memberName":"max","nodeType":"MemberAccess","src":"16382:16:19","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5750,"nodeType":"IfStatement","src":"16370:103:19","trueBody":{"id":5749,"nodeType":"Block","src":"16400:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":5745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":5746,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5732,"src":"16456:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5744,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"16421:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5748,"nodeType":"RevertStatement","src":"16414:48:19"}]}},{"expression":{"arguments":[{"id":5753,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5732,"src":"16496:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5751,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:19","typeDescriptions":{}}},"id":5754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":5736,"id":5755,"nodeType":"Return","src":"16482:20:19"}]},"documentation":{"id":5730,"nodeType":"StructuredDocumentation","src":"16015:276:19","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":5757,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:19","nodeType":"FunctionDefinition","parameters":{"id":5733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5732,"mutability":"mutable","name":"value","nameLocation":"16322:5:19","nodeType":"VariableDeclaration","scope":5757,"src":"16314:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5731,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:19"},"returnParameters":{"id":5736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5735,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5757,"src":"16352:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5734,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:19","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:19"},"scope":6655,"src":"16296:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5784,"nodeType":"Block","src":"16854:146:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5765,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5760,"src":"16868:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5767,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":5766,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":5770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:19","memberName":"max","nodeType":"MemberAccess","src":"16876:15:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5778,"nodeType":"IfStatement","src":"16864:101:19","trueBody":{"id":5777,"nodeType":"Block","src":"16893:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":5773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":5774,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5760,"src":"16948:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5772,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"16914:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5776,"nodeType":"RevertStatement","src":"16907:47:19"}]}},{"expression":{"arguments":[{"id":5781,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5760,"src":"16987:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5779,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:19","typeDescriptions":{}}},"id":5782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5764,"id":5783,"nodeType":"Return","src":"16974:19:19"}]},"documentation":{"id":5758,"nodeType":"StructuredDocumentation","src":"16515:272:19","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":5785,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:19","nodeType":"FunctionDefinition","parameters":{"id":5761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5760,"mutability":"mutable","name":"value","nameLocation":"16817:5:19","nodeType":"VariableDeclaration","scope":5785,"src":"16809:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5759,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:19"},"returnParameters":{"id":5764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5763,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5785,"src":"16847:5:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5762,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:19"},"scope":6655,"src":"16792:208:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5807,"nodeType":"Block","src":"17236:128:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"17250:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5801,"nodeType":"IfStatement","src":"17246:81:19","trueBody":{"id":5800,"nodeType":"Block","src":"17261:66:19","statements":[{"errorCall":{"arguments":[{"id":5797,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"17310:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5796,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4905,"src":"17282:27:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":5798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5799,"nodeType":"RevertStatement","src":"17275:41:19"}]}},{"expression":{"arguments":[{"id":5804,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"17351:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5803,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5802,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:19","typeDescriptions":{}}},"id":5805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5792,"id":5806,"nodeType":"Return","src":"17336:21:19"}]},"documentation":{"id":5786,"nodeType":"StructuredDocumentation","src":"17006:160:19","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":5808,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:19","nodeType":"FunctionDefinition","parameters":{"id":5789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5788,"mutability":"mutable","name":"value","nameLocation":"17197:5:19","nodeType":"VariableDeclaration","scope":5808,"src":"17190:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5787,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:19"},"returnParameters":{"id":5792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5791,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5808,"src":"17227:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5790,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:19"},"scope":6655,"src":"17171:193:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5833,"nodeType":"Block","src":"17761:150:19","statements":[{"expression":{"id":5821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5816,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5814,"src":"17771:10:19","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5811,"src":"17791:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":5817,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:19","typeDescriptions":{}}},"id":5820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:19","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":5822,"nodeType":"ExpressionStatement","src":"17771:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5823,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5814,"src":"17811:10:19","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5824,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5811,"src":"17825:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5832,"nodeType":"IfStatement","src":"17807:98:19","trueBody":{"id":5831,"nodeType":"Block","src":"17832:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:19","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5828,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5811,"src":"17888:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5826,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"17853:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5830,"nodeType":"RevertStatement","src":"17846:48:19"}]}}]},"documentation":{"id":5809,"nodeType":"StructuredDocumentation","src":"17370:312:19","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5834,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:19","nodeType":"FunctionDefinition","parameters":{"id":5812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5811,"mutability":"mutable","name":"value","nameLocation":"17712:5:19","nodeType":"VariableDeclaration","scope":5834,"src":"17705:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5810,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:19"},"returnParameters":{"id":5815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5814,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:19","nodeType":"VariableDeclaration","scope":5834,"src":"17742:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":5813,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:19","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:19"},"scope":6655,"src":"17687:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5859,"nodeType":"Block","src":"18308:150:19","statements":[{"expression":{"id":5847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5842,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5840,"src":"18318:10:19","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5845,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"18338:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":5843,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:19","typeDescriptions":{}}},"id":5846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:19","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":5848,"nodeType":"ExpressionStatement","src":"18318:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5849,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5840,"src":"18358:10:19","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5850,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"18372:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5858,"nodeType":"IfStatement","src":"18354:98:19","trueBody":{"id":5857,"nodeType":"Block","src":"18379:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:19","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5854,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"18435:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5852,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"18400:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5856,"nodeType":"RevertStatement","src":"18393:48:19"}]}}]},"documentation":{"id":5835,"nodeType":"StructuredDocumentation","src":"17917:312:19","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5860,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:19","nodeType":"FunctionDefinition","parameters":{"id":5838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5837,"mutability":"mutable","name":"value","nameLocation":"18259:5:19","nodeType":"VariableDeclaration","scope":5860,"src":"18252:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5836,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:19"},"returnParameters":{"id":5841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5840,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:19","nodeType":"VariableDeclaration","scope":5860,"src":"18289:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":5839,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:19","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:19"},"scope":6655,"src":"18234:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5885,"nodeType":"Block","src":"18855:150:19","statements":[{"expression":{"id":5873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5868,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"18865:10:19","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5863,"src":"18885:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":5869,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:19","typeDescriptions":{}}},"id":5872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:19","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":5874,"nodeType":"ExpressionStatement","src":"18865:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5875,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"18905:10:19","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5876,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5863,"src":"18919:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5884,"nodeType":"IfStatement","src":"18901:98:19","trueBody":{"id":5883,"nodeType":"Block","src":"18926:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:19","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5863,"src":"18982:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5878,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"18947:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5882,"nodeType":"RevertStatement","src":"18940:48:19"}]}}]},"documentation":{"id":5861,"nodeType":"StructuredDocumentation","src":"18464:312:19","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5886,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:19","nodeType":"FunctionDefinition","parameters":{"id":5864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5863,"mutability":"mutable","name":"value","nameLocation":"18806:5:19","nodeType":"VariableDeclaration","scope":5886,"src":"18799:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5862,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:19"},"returnParameters":{"id":5867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5866,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:19","nodeType":"VariableDeclaration","scope":5886,"src":"18836:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":5865,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:19","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:19"},"scope":6655,"src":"18781:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5911,"nodeType":"Block","src":"19402:150:19","statements":[{"expression":{"id":5899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5894,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5892,"src":"19412:10:19","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5897,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5889,"src":"19432:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":5895,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:19","typeDescriptions":{}}},"id":5898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:19","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":5900,"nodeType":"ExpressionStatement","src":"19412:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5901,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5892,"src":"19452:10:19","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5902,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5889,"src":"19466:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5910,"nodeType":"IfStatement","src":"19448:98:19","trueBody":{"id":5909,"nodeType":"Block","src":"19473:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:19","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5889,"src":"19529:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5904,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"19494:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5908,"nodeType":"RevertStatement","src":"19487:48:19"}]}}]},"documentation":{"id":5887,"nodeType":"StructuredDocumentation","src":"19011:312:19","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5912,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:19","nodeType":"FunctionDefinition","parameters":{"id":5890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5889,"mutability":"mutable","name":"value","nameLocation":"19353:5:19","nodeType":"VariableDeclaration","scope":5912,"src":"19346:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5888,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:19"},"returnParameters":{"id":5893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5892,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:19","nodeType":"VariableDeclaration","scope":5912,"src":"19383:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":5891,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:19","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:19"},"scope":6655,"src":"19328:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5937,"nodeType":"Block","src":"19949:150:19","statements":[{"expression":{"id":5925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5920,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5918,"src":"19959:10:19","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5923,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5915,"src":"19979:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":5921,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:19","typeDescriptions":{}}},"id":5924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:19","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":5926,"nodeType":"ExpressionStatement","src":"19959:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5927,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5918,"src":"19999:10:19","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5928,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5915,"src":"20013:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5936,"nodeType":"IfStatement","src":"19995:98:19","trueBody":{"id":5935,"nodeType":"Block","src":"20020:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:19","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5932,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5915,"src":"20076:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5930,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"20041:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5934,"nodeType":"RevertStatement","src":"20034:48:19"}]}}]},"documentation":{"id":5913,"nodeType":"StructuredDocumentation","src":"19558:312:19","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5938,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:19","nodeType":"FunctionDefinition","parameters":{"id":5916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5915,"mutability":"mutable","name":"value","nameLocation":"19900:5:19","nodeType":"VariableDeclaration","scope":5938,"src":"19893:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5914,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:19"},"returnParameters":{"id":5919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5918,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:19","nodeType":"VariableDeclaration","scope":5938,"src":"19930:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":5917,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:19","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:19"},"scope":6655,"src":"19875:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5963,"nodeType":"Block","src":"20496:150:19","statements":[{"expression":{"id":5951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5946,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5944,"src":"20506:10:19","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5949,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5941,"src":"20526:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":5947,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:19","typeDescriptions":{}}},"id":5950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:19","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":5952,"nodeType":"ExpressionStatement","src":"20506:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5953,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5944,"src":"20546:10:19","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5954,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5941,"src":"20560:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5962,"nodeType":"IfStatement","src":"20542:98:19","trueBody":{"id":5961,"nodeType":"Block","src":"20567:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:19","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5958,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5941,"src":"20623:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5956,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"20588:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5960,"nodeType":"RevertStatement","src":"20581:48:19"}]}}]},"documentation":{"id":5939,"nodeType":"StructuredDocumentation","src":"20105:312:19","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5964,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:19","nodeType":"FunctionDefinition","parameters":{"id":5942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5941,"mutability":"mutable","name":"value","nameLocation":"20447:5:19","nodeType":"VariableDeclaration","scope":5964,"src":"20440:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5940,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:19"},"returnParameters":{"id":5945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5944,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:19","nodeType":"VariableDeclaration","scope":5964,"src":"20477:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":5943,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:19","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:19"},"scope":6655,"src":"20422:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5989,"nodeType":"Block","src":"21043:150:19","statements":[{"expression":{"id":5977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5972,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5970,"src":"21053:10:19","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5975,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5967,"src":"21073:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":5973,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:19","typeDescriptions":{}}},"id":5976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:19","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":5978,"nodeType":"ExpressionStatement","src":"21053:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5979,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5970,"src":"21093:10:19","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5980,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5967,"src":"21107:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5988,"nodeType":"IfStatement","src":"21089:98:19","trueBody":{"id":5987,"nodeType":"Block","src":"21114:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:19","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5967,"src":"21170:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5982,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"21135:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5986,"nodeType":"RevertStatement","src":"21128:48:19"}]}}]},"documentation":{"id":5965,"nodeType":"StructuredDocumentation","src":"20652:312:19","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5990,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:19","nodeType":"FunctionDefinition","parameters":{"id":5968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5967,"mutability":"mutable","name":"value","nameLocation":"20994:5:19","nodeType":"VariableDeclaration","scope":5990,"src":"20987:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5966,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:19"},"returnParameters":{"id":5971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5970,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:19","nodeType":"VariableDeclaration","scope":5990,"src":"21024:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":5969,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:19","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:19"},"scope":6655,"src":"20969:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6015,"nodeType":"Block","src":"21590:150:19","statements":[{"expression":{"id":6003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5998,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5996,"src":"21600:10:19","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6001,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5993,"src":"21620:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":5999,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:19","typeDescriptions":{}}},"id":6002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:19","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":6004,"nodeType":"ExpressionStatement","src":"21600:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6005,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5996,"src":"21640:10:19","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6006,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5993,"src":"21654:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6014,"nodeType":"IfStatement","src":"21636:98:19","trueBody":{"id":6013,"nodeType":"Block","src":"21661:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:19","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6010,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5993,"src":"21717:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6008,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"21682:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6012,"nodeType":"RevertStatement","src":"21675:48:19"}]}}]},"documentation":{"id":5991,"nodeType":"StructuredDocumentation","src":"21199:312:19","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6016,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:19","nodeType":"FunctionDefinition","parameters":{"id":5994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5993,"mutability":"mutable","name":"value","nameLocation":"21541:5:19","nodeType":"VariableDeclaration","scope":6016,"src":"21534:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5992,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:19"},"returnParameters":{"id":5997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5996,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:19","nodeType":"VariableDeclaration","scope":6016,"src":"21571:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":5995,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:19","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:19"},"scope":6655,"src":"21516:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6041,"nodeType":"Block","src":"22137:150:19","statements":[{"expression":{"id":6029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6024,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6022,"src":"22147:10:19","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6019,"src":"22167:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":6025,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:19","typeDescriptions":{}}},"id":6028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:19","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":6030,"nodeType":"ExpressionStatement","src":"22147:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6031,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6022,"src":"22187:10:19","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6032,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6019,"src":"22201:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6040,"nodeType":"IfStatement","src":"22183:98:19","trueBody":{"id":6039,"nodeType":"Block","src":"22208:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:19","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6019,"src":"22264:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6034,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"22229:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6038,"nodeType":"RevertStatement","src":"22222:48:19"}]}}]},"documentation":{"id":6017,"nodeType":"StructuredDocumentation","src":"21746:312:19","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6042,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:19","nodeType":"FunctionDefinition","parameters":{"id":6020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6019,"mutability":"mutable","name":"value","nameLocation":"22088:5:19","nodeType":"VariableDeclaration","scope":6042,"src":"22081:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6018,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:19"},"returnParameters":{"id":6023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6022,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:19","nodeType":"VariableDeclaration","scope":6042,"src":"22118:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":6021,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:19","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:19"},"scope":6655,"src":"22063:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6067,"nodeType":"Block","src":"22684:150:19","statements":[{"expression":{"id":6055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6050,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6048,"src":"22694:10:19","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6053,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6045,"src":"22714:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":6051,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:19","typeDescriptions":{}}},"id":6054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:19","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":6056,"nodeType":"ExpressionStatement","src":"22694:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6057,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6048,"src":"22734:10:19","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6058,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6045,"src":"22748:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6066,"nodeType":"IfStatement","src":"22730:98:19","trueBody":{"id":6065,"nodeType":"Block","src":"22755:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:19","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6062,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6045,"src":"22811:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6060,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"22776:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6064,"nodeType":"RevertStatement","src":"22769:48:19"}]}}]},"documentation":{"id":6043,"nodeType":"StructuredDocumentation","src":"22293:312:19","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6068,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:19","nodeType":"FunctionDefinition","parameters":{"id":6046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6045,"mutability":"mutable","name":"value","nameLocation":"22635:5:19","nodeType":"VariableDeclaration","scope":6068,"src":"22628:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6044,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:19"},"returnParameters":{"id":6049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6048,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:19","nodeType":"VariableDeclaration","scope":6068,"src":"22665:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":6047,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:19","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:19"},"scope":6655,"src":"22610:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6093,"nodeType":"Block","src":"23231:150:19","statements":[{"expression":{"id":6081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6076,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6074,"src":"23241:10:19","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6079,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6071,"src":"23261:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":6077,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:19","typeDescriptions":{}}},"id":6080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:19","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":6082,"nodeType":"ExpressionStatement","src":"23241:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6083,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6074,"src":"23281:10:19","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6084,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6071,"src":"23295:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6092,"nodeType":"IfStatement","src":"23277:98:19","trueBody":{"id":6091,"nodeType":"Block","src":"23302:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:19","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6088,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6071,"src":"23358:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6086,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"23323:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6090,"nodeType":"RevertStatement","src":"23316:48:19"}]}}]},"documentation":{"id":6069,"nodeType":"StructuredDocumentation","src":"22840:312:19","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6094,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:19","nodeType":"FunctionDefinition","parameters":{"id":6072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6071,"mutability":"mutable","name":"value","nameLocation":"23182:5:19","nodeType":"VariableDeclaration","scope":6094,"src":"23175:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6070,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:19"},"returnParameters":{"id":6075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6074,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:19","nodeType":"VariableDeclaration","scope":6094,"src":"23212:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":6073,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:19","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:19"},"scope":6655,"src":"23157:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6119,"nodeType":"Block","src":"23778:150:19","statements":[{"expression":{"id":6107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6102,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6100,"src":"23788:10:19","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6105,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"23808:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":6103,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:19","typeDescriptions":{}}},"id":6106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:19","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":6108,"nodeType":"ExpressionStatement","src":"23788:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6109,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6100,"src":"23828:10:19","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6110,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"23842:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6118,"nodeType":"IfStatement","src":"23824:98:19","trueBody":{"id":6117,"nodeType":"Block","src":"23849:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:19","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6114,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"23905:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6112,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"23870:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6116,"nodeType":"RevertStatement","src":"23863:48:19"}]}}]},"documentation":{"id":6095,"nodeType":"StructuredDocumentation","src":"23387:312:19","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6120,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:19","nodeType":"FunctionDefinition","parameters":{"id":6098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6097,"mutability":"mutable","name":"value","nameLocation":"23729:5:19","nodeType":"VariableDeclaration","scope":6120,"src":"23722:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6096,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:19"},"returnParameters":{"id":6101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6100,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:19","nodeType":"VariableDeclaration","scope":6120,"src":"23759:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":6099,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:19","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:19"},"scope":6655,"src":"23704:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6145,"nodeType":"Block","src":"24325:150:19","statements":[{"expression":{"id":6133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6128,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6126,"src":"24335:10:19","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6131,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6123,"src":"24355:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":6129,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:19","typeDescriptions":{}}},"id":6132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:19","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":6134,"nodeType":"ExpressionStatement","src":"24335:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6135,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6126,"src":"24375:10:19","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6136,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6123,"src":"24389:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6144,"nodeType":"IfStatement","src":"24371:98:19","trueBody":{"id":6143,"nodeType":"Block","src":"24396:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:19","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6140,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6123,"src":"24452:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6138,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"24417:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6142,"nodeType":"RevertStatement","src":"24410:48:19"}]}}]},"documentation":{"id":6121,"nodeType":"StructuredDocumentation","src":"23934:312:19","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6146,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:19","nodeType":"FunctionDefinition","parameters":{"id":6124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6123,"mutability":"mutable","name":"value","nameLocation":"24276:5:19","nodeType":"VariableDeclaration","scope":6146,"src":"24269:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6122,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:19"},"returnParameters":{"id":6127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6126,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:19","nodeType":"VariableDeclaration","scope":6146,"src":"24306:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":6125,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:19","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:19"},"scope":6655,"src":"24251:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6171,"nodeType":"Block","src":"24872:150:19","statements":[{"expression":{"id":6159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6154,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6152,"src":"24882:10:19","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6157,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6149,"src":"24902:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":6155,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:19","typeDescriptions":{}}},"id":6158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:19","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":6160,"nodeType":"ExpressionStatement","src":"24882:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6161,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6152,"src":"24922:10:19","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6162,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6149,"src":"24936:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6170,"nodeType":"IfStatement","src":"24918:98:19","trueBody":{"id":6169,"nodeType":"Block","src":"24943:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:19","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6166,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6149,"src":"24999:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6164,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"24964:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6168,"nodeType":"RevertStatement","src":"24957:48:19"}]}}]},"documentation":{"id":6147,"nodeType":"StructuredDocumentation","src":"24481:312:19","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6172,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:19","nodeType":"FunctionDefinition","parameters":{"id":6150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6149,"mutability":"mutable","name":"value","nameLocation":"24823:5:19","nodeType":"VariableDeclaration","scope":6172,"src":"24816:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6148,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:19"},"returnParameters":{"id":6153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6152,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:19","nodeType":"VariableDeclaration","scope":6172,"src":"24853:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":6151,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:19","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:19"},"scope":6655,"src":"24798:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6197,"nodeType":"Block","src":"25419:150:19","statements":[{"expression":{"id":6185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6180,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6178,"src":"25429:10:19","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6183,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6175,"src":"25449:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":6181,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:19","typeDescriptions":{}}},"id":6184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:19","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":6186,"nodeType":"ExpressionStatement","src":"25429:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6187,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6178,"src":"25469:10:19","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6188,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6175,"src":"25483:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6196,"nodeType":"IfStatement","src":"25465:98:19","trueBody":{"id":6195,"nodeType":"Block","src":"25490:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:19","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6192,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6175,"src":"25546:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6190,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"25511:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6194,"nodeType":"RevertStatement","src":"25504:48:19"}]}}]},"documentation":{"id":6173,"nodeType":"StructuredDocumentation","src":"25028:312:19","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6198,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:19","nodeType":"FunctionDefinition","parameters":{"id":6176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6175,"mutability":"mutable","name":"value","nameLocation":"25370:5:19","nodeType":"VariableDeclaration","scope":6198,"src":"25363:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6174,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:19"},"returnParameters":{"id":6179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6178,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:19","nodeType":"VariableDeclaration","scope":6198,"src":"25400:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":6177,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:19","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:19"},"scope":6655,"src":"25345:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6223,"nodeType":"Block","src":"25966:150:19","statements":[{"expression":{"id":6211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6206,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"25976:10:19","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6209,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6201,"src":"25996:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":6207,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:19","typeDescriptions":{}}},"id":6210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:19","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":6212,"nodeType":"ExpressionStatement","src":"25976:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6213,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"26016:10:19","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6214,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6201,"src":"26030:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6222,"nodeType":"IfStatement","src":"26012:98:19","trueBody":{"id":6221,"nodeType":"Block","src":"26037:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6218,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6201,"src":"26093:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6216,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"26058:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6220,"nodeType":"RevertStatement","src":"26051:48:19"}]}}]},"documentation":{"id":6199,"nodeType":"StructuredDocumentation","src":"25575:312:19","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6224,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:19","nodeType":"FunctionDefinition","parameters":{"id":6202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6201,"mutability":"mutable","name":"value","nameLocation":"25917:5:19","nodeType":"VariableDeclaration","scope":6224,"src":"25910:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6200,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:19"},"returnParameters":{"id":6205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6204,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:19","nodeType":"VariableDeclaration","scope":6224,"src":"25947:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":6203,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:19","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:19"},"scope":6655,"src":"25892:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6249,"nodeType":"Block","src":"26513:150:19","statements":[{"expression":{"id":6237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6232,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6230,"src":"26523:10:19","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6235,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6227,"src":"26543:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":6233,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:19","typeDescriptions":{}}},"id":6236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:19","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":6238,"nodeType":"ExpressionStatement","src":"26523:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6239,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6230,"src":"26563:10:19","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6240,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6227,"src":"26577:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6248,"nodeType":"IfStatement","src":"26559:98:19","trueBody":{"id":6247,"nodeType":"Block","src":"26584:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:19","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6244,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6227,"src":"26640:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6242,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"26605:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6246,"nodeType":"RevertStatement","src":"26598:48:19"}]}}]},"documentation":{"id":6225,"nodeType":"StructuredDocumentation","src":"26122:312:19","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6250,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:19","nodeType":"FunctionDefinition","parameters":{"id":6228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6227,"mutability":"mutable","name":"value","nameLocation":"26464:5:19","nodeType":"VariableDeclaration","scope":6250,"src":"26457:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6226,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:19"},"returnParameters":{"id":6231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6230,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:19","nodeType":"VariableDeclaration","scope":6250,"src":"26494:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":6229,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:19","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:19"},"scope":6655,"src":"26439:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6275,"nodeType":"Block","src":"27060:150:19","statements":[{"expression":{"id":6263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6258,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6256,"src":"27070:10:19","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6261,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6253,"src":"27090:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":6259,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:19","typeDescriptions":{}}},"id":6262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:19","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":6264,"nodeType":"ExpressionStatement","src":"27070:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6265,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6256,"src":"27110:10:19","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6266,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6253,"src":"27124:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6274,"nodeType":"IfStatement","src":"27106:98:19","trueBody":{"id":6273,"nodeType":"Block","src":"27131:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:19","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6270,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6253,"src":"27187:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6268,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"27152:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6272,"nodeType":"RevertStatement","src":"27145:48:19"}]}}]},"documentation":{"id":6251,"nodeType":"StructuredDocumentation","src":"26669:312:19","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6276,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:19","nodeType":"FunctionDefinition","parameters":{"id":6254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6253,"mutability":"mutable","name":"value","nameLocation":"27011:5:19","nodeType":"VariableDeclaration","scope":6276,"src":"27004:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6252,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:19"},"returnParameters":{"id":6257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6256,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:19","nodeType":"VariableDeclaration","scope":6276,"src":"27041:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":6255,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:19","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:19"},"scope":6655,"src":"26986:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6301,"nodeType":"Block","src":"27607:150:19","statements":[{"expression":{"id":6289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6284,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6282,"src":"27617:10:19","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6287,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6279,"src":"27637:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":6285,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:19","typeDescriptions":{}}},"id":6288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:19","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":6290,"nodeType":"ExpressionStatement","src":"27617:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6291,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6282,"src":"27657:10:19","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6292,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6279,"src":"27671:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6300,"nodeType":"IfStatement","src":"27653:98:19","trueBody":{"id":6299,"nodeType":"Block","src":"27678:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:19","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6279,"src":"27734:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6294,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"27699:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6298,"nodeType":"RevertStatement","src":"27692:48:19"}]}}]},"documentation":{"id":6277,"nodeType":"StructuredDocumentation","src":"27216:312:19","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6302,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:19","nodeType":"FunctionDefinition","parameters":{"id":6280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6279,"mutability":"mutable","name":"value","nameLocation":"27558:5:19","nodeType":"VariableDeclaration","scope":6302,"src":"27551:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6278,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:19"},"returnParameters":{"id":6283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6282,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:19","nodeType":"VariableDeclaration","scope":6302,"src":"27588:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":6281,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:19","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:19"},"scope":6655,"src":"27533:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6327,"nodeType":"Block","src":"28147:148:19","statements":[{"expression":{"id":6315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6310,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6308,"src":"28157:10:19","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6313,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6305,"src":"28176:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6312,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":6311,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:19","typeDescriptions":{}}},"id":6314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:19","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":6316,"nodeType":"ExpressionStatement","src":"28157:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6317,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6308,"src":"28196:10:19","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6318,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6305,"src":"28210:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6326,"nodeType":"IfStatement","src":"28192:97:19","trueBody":{"id":6325,"nodeType":"Block","src":"28217:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:19","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6305,"src":"28272:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6320,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"28238:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6324,"nodeType":"RevertStatement","src":"28231:47:19"}]}}]},"documentation":{"id":6303,"nodeType":"StructuredDocumentation","src":"27763:307:19","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6328,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:19","nodeType":"FunctionDefinition","parameters":{"id":6306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6305,"mutability":"mutable","name":"value","nameLocation":"28099:5:19","nodeType":"VariableDeclaration","scope":6328,"src":"28092:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6304,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:19"},"returnParameters":{"id":6309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6308,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:19","nodeType":"VariableDeclaration","scope":6328,"src":"28129:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":6307,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:19","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:19"},"scope":6655,"src":"28075:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6353,"nodeType":"Block","src":"28685:148:19","statements":[{"expression":{"id":6341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6336,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6334,"src":"28695:10:19","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6339,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6331,"src":"28714:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":6337,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:19","typeDescriptions":{}}},"id":6340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:19","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":6342,"nodeType":"ExpressionStatement","src":"28695:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6343,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6334,"src":"28734:10:19","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6344,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6331,"src":"28748:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6352,"nodeType":"IfStatement","src":"28730:97:19","trueBody":{"id":6351,"nodeType":"Block","src":"28755:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:19","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6348,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6331,"src":"28810:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6346,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"28776:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6350,"nodeType":"RevertStatement","src":"28769:47:19"}]}}]},"documentation":{"id":6329,"nodeType":"StructuredDocumentation","src":"28301:307:19","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6354,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:19","nodeType":"FunctionDefinition","parameters":{"id":6332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6331,"mutability":"mutable","name":"value","nameLocation":"28637:5:19","nodeType":"VariableDeclaration","scope":6354,"src":"28630:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6330,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:19"},"returnParameters":{"id":6335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6334,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:19","nodeType":"VariableDeclaration","scope":6354,"src":"28667:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":6333,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:19","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:19"},"scope":6655,"src":"28613:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6379,"nodeType":"Block","src":"29223:148:19","statements":[{"expression":{"id":6367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6362,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6360,"src":"29233:10:19","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6365,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"29252:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":6363,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:19","typeDescriptions":{}}},"id":6366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:19","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":6368,"nodeType":"ExpressionStatement","src":"29233:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6369,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6360,"src":"29272:10:19","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6370,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"29286:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6378,"nodeType":"IfStatement","src":"29268:97:19","trueBody":{"id":6377,"nodeType":"Block","src":"29293:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:19","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6374,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"29348:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6372,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"29314:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6376,"nodeType":"RevertStatement","src":"29307:47:19"}]}}]},"documentation":{"id":6355,"nodeType":"StructuredDocumentation","src":"28839:307:19","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6380,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:19","nodeType":"FunctionDefinition","parameters":{"id":6358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6357,"mutability":"mutable","name":"value","nameLocation":"29175:5:19","nodeType":"VariableDeclaration","scope":6380,"src":"29168:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6356,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:19"},"returnParameters":{"id":6361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6360,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:19","nodeType":"VariableDeclaration","scope":6380,"src":"29205:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":6359,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:19","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:19"},"scope":6655,"src":"29151:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6405,"nodeType":"Block","src":"29761:148:19","statements":[{"expression":{"id":6393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6388,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6386,"src":"29771:10:19","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6391,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"29790:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":6389,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:19","typeDescriptions":{}}},"id":6392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:19","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":6394,"nodeType":"ExpressionStatement","src":"29771:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6395,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6386,"src":"29810:10:19","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6396,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"29824:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6404,"nodeType":"IfStatement","src":"29806:97:19","trueBody":{"id":6403,"nodeType":"Block","src":"29831:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:19","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6400,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"29886:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6398,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"29852:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6402,"nodeType":"RevertStatement","src":"29845:47:19"}]}}]},"documentation":{"id":6381,"nodeType":"StructuredDocumentation","src":"29377:307:19","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6406,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:19","nodeType":"FunctionDefinition","parameters":{"id":6384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6383,"mutability":"mutable","name":"value","nameLocation":"29713:5:19","nodeType":"VariableDeclaration","scope":6406,"src":"29706:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6382,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:19"},"returnParameters":{"id":6387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6386,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:19","nodeType":"VariableDeclaration","scope":6406,"src":"29743:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":6385,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:19","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:19"},"scope":6655,"src":"29689:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6431,"nodeType":"Block","src":"30299:148:19","statements":[{"expression":{"id":6419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6414,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6412,"src":"30309:10:19","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6417,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6409,"src":"30328:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":6415,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:19","typeDescriptions":{}}},"id":6418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:19","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":6420,"nodeType":"ExpressionStatement","src":"30309:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6421,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6412,"src":"30348:10:19","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6422,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6409,"src":"30362:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6430,"nodeType":"IfStatement","src":"30344:97:19","trueBody":{"id":6429,"nodeType":"Block","src":"30369:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6426,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6409,"src":"30424:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6424,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"30390:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6428,"nodeType":"RevertStatement","src":"30383:47:19"}]}}]},"documentation":{"id":6407,"nodeType":"StructuredDocumentation","src":"29915:307:19","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6432,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:19","nodeType":"FunctionDefinition","parameters":{"id":6410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6409,"mutability":"mutable","name":"value","nameLocation":"30251:5:19","nodeType":"VariableDeclaration","scope":6432,"src":"30244:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6408,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:19"},"returnParameters":{"id":6413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6412,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:19","nodeType":"VariableDeclaration","scope":6432,"src":"30281:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6411,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:19","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:19"},"scope":6655,"src":"30227:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6457,"nodeType":"Block","src":"30837:148:19","statements":[{"expression":{"id":6445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6440,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6438,"src":"30847:10:19","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6443,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6435,"src":"30866:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":6441,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:19","typeDescriptions":{}}},"id":6444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:19","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":6446,"nodeType":"ExpressionStatement","src":"30847:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6447,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6438,"src":"30886:10:19","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6448,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6435,"src":"30900:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6456,"nodeType":"IfStatement","src":"30882:97:19","trueBody":{"id":6455,"nodeType":"Block","src":"30907:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:19","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6452,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6435,"src":"30962:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6450,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"30928:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6454,"nodeType":"RevertStatement","src":"30921:47:19"}]}}]},"documentation":{"id":6433,"nodeType":"StructuredDocumentation","src":"30453:307:19","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6458,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:19","nodeType":"FunctionDefinition","parameters":{"id":6436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6435,"mutability":"mutable","name":"value","nameLocation":"30789:5:19","nodeType":"VariableDeclaration","scope":6458,"src":"30782:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6434,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:19"},"returnParameters":{"id":6439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6438,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:19","nodeType":"VariableDeclaration","scope":6458,"src":"30819:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":6437,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:19","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:19"},"scope":6655,"src":"30765:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6483,"nodeType":"Block","src":"31375:148:19","statements":[{"expression":{"id":6471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6466,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6464,"src":"31385:10:19","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6469,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6461,"src":"31404:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":6467,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:19","typeDescriptions":{}}},"id":6470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:19","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":6472,"nodeType":"ExpressionStatement","src":"31385:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6473,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6464,"src":"31424:10:19","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6474,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6461,"src":"31438:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6482,"nodeType":"IfStatement","src":"31420:97:19","trueBody":{"id":6481,"nodeType":"Block","src":"31445:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:19","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6461,"src":"31500:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6476,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"31466:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6480,"nodeType":"RevertStatement","src":"31459:47:19"}]}}]},"documentation":{"id":6459,"nodeType":"StructuredDocumentation","src":"30991:307:19","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6484,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:19","nodeType":"FunctionDefinition","parameters":{"id":6462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6461,"mutability":"mutable","name":"value","nameLocation":"31327:5:19","nodeType":"VariableDeclaration","scope":6484,"src":"31320:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6460,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:19"},"returnParameters":{"id":6465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6464,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:19","nodeType":"VariableDeclaration","scope":6484,"src":"31357:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":6463,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:19","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:19"},"scope":6655,"src":"31303:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6509,"nodeType":"Block","src":"31913:148:19","statements":[{"expression":{"id":6497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6492,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6490,"src":"31923:10:19","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6487,"src":"31942:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":6493,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:19","typeDescriptions":{}}},"id":6496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:19","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":6498,"nodeType":"ExpressionStatement","src":"31923:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6499,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6490,"src":"31962:10:19","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6500,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6487,"src":"31976:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6508,"nodeType":"IfStatement","src":"31958:97:19","trueBody":{"id":6507,"nodeType":"Block","src":"31983:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:19","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6504,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6487,"src":"32038:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6502,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"32004:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6506,"nodeType":"RevertStatement","src":"31997:47:19"}]}}]},"documentation":{"id":6485,"nodeType":"StructuredDocumentation","src":"31529:307:19","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6510,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:19","nodeType":"FunctionDefinition","parameters":{"id":6488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6487,"mutability":"mutable","name":"value","nameLocation":"31865:5:19","nodeType":"VariableDeclaration","scope":6510,"src":"31858:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6486,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:19"},"returnParameters":{"id":6491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6490,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:19","nodeType":"VariableDeclaration","scope":6510,"src":"31895:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":6489,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:19","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:19"},"scope":6655,"src":"31841:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6535,"nodeType":"Block","src":"32451:148:19","statements":[{"expression":{"id":6523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6518,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6516,"src":"32461:10:19","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6521,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6513,"src":"32480:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":6519,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:19","typeDescriptions":{}}},"id":6522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:19","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":6524,"nodeType":"ExpressionStatement","src":"32461:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6525,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6516,"src":"32500:10:19","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6526,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6513,"src":"32514:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6534,"nodeType":"IfStatement","src":"32496:97:19","trueBody":{"id":6533,"nodeType":"Block","src":"32521:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6530,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6513,"src":"32576:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6528,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"32542:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6532,"nodeType":"RevertStatement","src":"32535:47:19"}]}}]},"documentation":{"id":6511,"nodeType":"StructuredDocumentation","src":"32067:307:19","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6536,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:19","nodeType":"FunctionDefinition","parameters":{"id":6514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6513,"mutability":"mutable","name":"value","nameLocation":"32403:5:19","nodeType":"VariableDeclaration","scope":6536,"src":"32396:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6512,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:19"},"returnParameters":{"id":6517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6516,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:19","nodeType":"VariableDeclaration","scope":6536,"src":"32433:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":6515,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:19","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:19"},"scope":6655,"src":"32379:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6561,"nodeType":"Block","src":"32989:148:19","statements":[{"expression":{"id":6549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6544,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6542,"src":"32999:10:19","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6547,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6539,"src":"33018:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":6545,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:19","typeDescriptions":{}}},"id":6548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:19","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":6550,"nodeType":"ExpressionStatement","src":"32999:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6551,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6542,"src":"33038:10:19","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6552,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6539,"src":"33052:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6560,"nodeType":"IfStatement","src":"33034:97:19","trueBody":{"id":6559,"nodeType":"Block","src":"33059:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:19","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6556,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6539,"src":"33114:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6554,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"33080:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6558,"nodeType":"RevertStatement","src":"33073:47:19"}]}}]},"documentation":{"id":6537,"nodeType":"StructuredDocumentation","src":"32605:307:19","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6562,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:19","nodeType":"FunctionDefinition","parameters":{"id":6540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6539,"mutability":"mutable","name":"value","nameLocation":"32941:5:19","nodeType":"VariableDeclaration","scope":6562,"src":"32934:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6538,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:19"},"returnParameters":{"id":6543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6542,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:19","nodeType":"VariableDeclaration","scope":6562,"src":"32971:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6541,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:19","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:19"},"scope":6655,"src":"32917:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6587,"nodeType":"Block","src":"33527:148:19","statements":[{"expression":{"id":6575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6570,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6568,"src":"33537:10:19","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6573,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6565,"src":"33556:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":6571,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:19","typeDescriptions":{}}},"id":6574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:19","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":6576,"nodeType":"ExpressionStatement","src":"33537:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6577,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6568,"src":"33576:10:19","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6578,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6565,"src":"33590:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6586,"nodeType":"IfStatement","src":"33572:97:19","trueBody":{"id":6585,"nodeType":"Block","src":"33597:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6565,"src":"33652:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6580,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"33618:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6584,"nodeType":"RevertStatement","src":"33611:47:19"}]}}]},"documentation":{"id":6563,"nodeType":"StructuredDocumentation","src":"33143:307:19","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6588,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:19","nodeType":"FunctionDefinition","parameters":{"id":6566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6565,"mutability":"mutable","name":"value","nameLocation":"33479:5:19","nodeType":"VariableDeclaration","scope":6588,"src":"33472:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6564,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:19"},"returnParameters":{"id":6569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6568,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:19","nodeType":"VariableDeclaration","scope":6588,"src":"33509:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":6567,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:19","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:19"},"scope":6655,"src":"33455:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6613,"nodeType":"Block","src":"34058:146:19","statements":[{"expression":{"id":6601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6596,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6594,"src":"34068:10:19","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6599,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6591,"src":"34086:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":6597,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:19","typeDescriptions":{}}},"id":6600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:19","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":6602,"nodeType":"ExpressionStatement","src":"34068:24:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6603,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6594,"src":"34106:10:19","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6604,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6591,"src":"34120:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6612,"nodeType":"IfStatement","src":"34102:96:19","trueBody":{"id":6611,"nodeType":"Block","src":"34127:71:19","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6608,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6591,"src":"34181:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6606,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"34148:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6610,"nodeType":"RevertStatement","src":"34141:46:19"}]}}]},"documentation":{"id":6589,"nodeType":"StructuredDocumentation","src":"33681:302:19","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6614,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:19","nodeType":"FunctionDefinition","parameters":{"id":6592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6591,"mutability":"mutable","name":"value","nameLocation":"34011:5:19","nodeType":"VariableDeclaration","scope":6614,"src":"34004:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6590,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:19"},"returnParameters":{"id":6595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6594,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:19","nodeType":"VariableDeclaration","scope":6614,"src":"34041:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":6593,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:19","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:19"},"scope":6655,"src":"33988:216:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6643,"nodeType":"Block","src":"34444:250:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6622,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6617,"src":"34557:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":6627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6626,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":6625,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":6629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:19","memberName":"max","nodeType":"MemberAccess","src":"34573:16:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6623,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:19","typeDescriptions":{}}},"id":6630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6637,"nodeType":"IfStatement","src":"34553:105:19","trueBody":{"id":6636,"nodeType":"Block","src":"34592:66:19","statements":[{"errorCall":{"arguments":[{"id":6633,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6617,"src":"34641:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6632,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4917,"src":"34613:27:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6635,"nodeType":"RevertStatement","src":"34606:41:19"}]}},{"expression":{"arguments":[{"id":6640,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6617,"src":"34681:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6638,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:19","typeDescriptions":{}}},"id":6641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6621,"id":6642,"nodeType":"Return","src":"34667:20:19"}]},"documentation":{"id":6615,"nodeType":"StructuredDocumentation","src":"34210:165:19","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":6644,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:19","nodeType":"FunctionDefinition","parameters":{"id":6618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6617,"mutability":"mutable","name":"value","nameLocation":"34406:5:19","nodeType":"VariableDeclaration","scope":6644,"src":"34398:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6616,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:19"},"returnParameters":{"id":6621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6620,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6644,"src":"34436:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6619,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:19"},"scope":6655,"src":"34380:314:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6653,"nodeType":"Block","src":"34853:87:19","statements":[{"AST":{"nodeType":"YulBlock","src":"34888:46:19","statements":[{"nodeType":"YulAssignment","src":"34902:22:19","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"34921:1:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34914:6:19"},"nodeType":"YulFunctionCall","src":"34914:9:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34907:6:19"},"nodeType":"YulFunctionCall","src":"34907:17:19"},"variableNames":[{"name":"u","nodeType":"YulIdentifier","src":"34902:1:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6647,"isOffset":false,"isSlot":false,"src":"34921:1:19","valueSize":1},{"declaration":6650,"isOffset":false,"isSlot":false,"src":"34902:1:19","valueSize":1}],"flags":["memory-safe"],"id":6652,"nodeType":"InlineAssembly","src":"34863:71:19"}]},"documentation":{"id":6645,"nodeType":"StructuredDocumentation","src":"34700:90:19","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":6654,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:19","nodeType":"FunctionDefinition","parameters":{"id":6648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6647,"mutability":"mutable","name":"b","nameLocation":"34816:1:19","nodeType":"VariableDeclaration","scope":6654,"src":"34811:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6646,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:19"},"returnParameters":{"id":6651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6650,"mutability":"mutable","name":"u","nameLocation":"34850:1:19","nodeType":"VariableDeclaration","scope":6654,"src":"34842:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6649,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:19"},"scope":6655,"src":"34795:145:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6656,"src":"769:34173:19","usedErrors":[4900,4905,4912,4917],"usedEvents":[]}],"src":"192:34751:19"},"id":19},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[6655],"SignedMath":[6799]},"id":6800,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6657,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:20"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":6659,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6800,"sourceUnit":6656,"src":"135:40:20","symbolAliases":[{"foreign":{"id":6658,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6655,"src":"143:8:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":6660,"nodeType":"StructuredDocumentation","src":"177:80:20","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6799,"linearizedBaseContracts":[6799],"name":"SignedMath","nameLocation":"266:10:20","nodeType":"ContractDefinition","nodes":[{"body":{"id":6689,"nodeType":"Block","src":"746:215:20","statements":[{"id":6688,"nodeType":"UncheckedBlock","src":"756:199:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6672,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6667,"src":"894:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6673,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6665,"src":"900:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6674,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6667,"src":"904:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6676,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":6681,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6663,"src":"932:9:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6679,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6655,"src":"916:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6655_$","typeString":"type(library SafeCast)"}},"id":6680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6654,"src":"916:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6677,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:20","typeDescriptions":{}}},"id":6683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6685,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6671,"id":6687,"nodeType":"Return","src":"887:57:20"}]}]},"documentation":{"id":6661,"nodeType":"StructuredDocumentation","src":"283:374:20","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":6690,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:20","nodeType":"FunctionDefinition","parameters":{"id":6668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6663,"mutability":"mutable","name":"condition","nameLocation":"684:9:20","nodeType":"VariableDeclaration","scope":6690,"src":"679:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6662,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6665,"mutability":"mutable","name":"a","nameLocation":"702:1:20","nodeType":"VariableDeclaration","scope":6690,"src":"695:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6664,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6667,"mutability":"mutable","name":"b","nameLocation":"712:1:20","nodeType":"VariableDeclaration","scope":6690,"src":"705:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6666,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:20"},"returnParameters":{"id":6671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6670,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6690,"src":"738:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6669,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:20"},"scope":6799,"src":"662:299:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6708,"nodeType":"Block","src":"1102:44:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6701,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6693,"src":"1127:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6702,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6695,"src":"1131:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6704,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6693,"src":"1134:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6705,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6695,"src":"1137:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6700,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6690,"src":"1119:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6699,"id":6707,"nodeType":"Return","src":"1112:27:20"}]},"documentation":{"id":6691,"nodeType":"StructuredDocumentation","src":"967:66:20","text":" @dev Returns the largest of two signed numbers."},"id":6709,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:20","nodeType":"FunctionDefinition","parameters":{"id":6696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6693,"mutability":"mutable","name":"a","nameLocation":"1058:1:20","nodeType":"VariableDeclaration","scope":6709,"src":"1051:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6692,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6695,"mutability":"mutable","name":"b","nameLocation":"1068:1:20","nodeType":"VariableDeclaration","scope":6709,"src":"1061:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6694,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:20"},"returnParameters":{"id":6699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6698,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6709,"src":"1094:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6697,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:20"},"scope":6799,"src":"1038:108:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6727,"nodeType":"Block","src":"1288:44:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6720,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6712,"src":"1313:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6721,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6714,"src":"1317:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6723,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6712,"src":"1320:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6724,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6714,"src":"1323:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6719,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6690,"src":"1305:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6718,"id":6726,"nodeType":"Return","src":"1298:27:20"}]},"documentation":{"id":6710,"nodeType":"StructuredDocumentation","src":"1152:67:20","text":" @dev Returns the smallest of two signed numbers."},"id":6728,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:20","nodeType":"FunctionDefinition","parameters":{"id":6715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6712,"mutability":"mutable","name":"a","nameLocation":"1244:1:20","nodeType":"VariableDeclaration","scope":6728,"src":"1237:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6711,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6714,"mutability":"mutable","name":"b","nameLocation":"1254:1:20","nodeType":"VariableDeclaration","scope":6728,"src":"1247:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6713,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:20"},"returnParameters":{"id":6718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6717,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6728,"src":"1280:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6716,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:20"},"scope":6799,"src":"1224:108:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6771,"nodeType":"Block","src":"1537:162:20","statements":[{"assignments":[6739],"declarations":[{"constant":false,"id":6739,"mutability":"mutable","name":"x","nameLocation":"1606:1:20","nodeType":"VariableDeclaration","scope":6771,"src":"1599:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6738,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6752,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6740,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6731,"src":"1611:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":6741,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6733,"src":"1615:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6743,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6744,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6731,"src":"1622:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6745,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6733,"src":"1626:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6747,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6750,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:20"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6753,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6739,"src":"1651:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6758,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6739,"src":"1671:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6756,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:20","typeDescriptions":{}}},"id":6759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:20","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6754,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:20","typeDescriptions":{}}},"id":6762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6763,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6731,"src":"1685:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6764,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6733,"src":"1689:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6766,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6768,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6737,"id":6770,"nodeType":"Return","src":"1644:48:20"}]},"documentation":{"id":6729,"nodeType":"StructuredDocumentation","src":"1338:126:20","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":6772,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:20","nodeType":"FunctionDefinition","parameters":{"id":6734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6731,"mutability":"mutable","name":"a","nameLocation":"1493:1:20","nodeType":"VariableDeclaration","scope":6772,"src":"1486:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6730,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6733,"mutability":"mutable","name":"b","nameLocation":"1503:1:20","nodeType":"VariableDeclaration","scope":6772,"src":"1496:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6732,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:20"},"returnParameters":{"id":6737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6736,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6772,"src":"1529:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6735,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:20"},"scope":6799,"src":"1469:230:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6797,"nodeType":"Block","src":"1843:767:20","statements":[{"id":6796,"nodeType":"UncheckedBlock","src":"1853:751:20","statements":[{"assignments":[6781],"declarations":[{"constant":false,"id":6781,"mutability":"mutable","name":"mask","nameLocation":"2424:4:20","nodeType":"VariableDeclaration","scope":6796,"src":"2417:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6780,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6785,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6782,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6775,"src":"2431:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:20","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6788,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6775,"src":"2576:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6789,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6781,"src":"2580:4:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6791,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6792,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6781,"src":"2588:4:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6786,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:20","typeDescriptions":{}}},"id":6794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6779,"id":6795,"nodeType":"Return","src":"2560:33:20"}]}]},"documentation":{"id":6773,"nodeType":"StructuredDocumentation","src":"1705:78:20","text":" @dev Returns the absolute unsigned value of a signed value."},"id":6798,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:20","nodeType":"FunctionDefinition","parameters":{"id":6776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6775,"mutability":"mutable","name":"n","nameLocation":"1808:1:20","nodeType":"VariableDeclaration","scope":6798,"src":"1801:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6774,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:20"},"returnParameters":{"id":6779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6778,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6798,"src":"1834:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6777,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:20"},"scope":6799,"src":"1788:822:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6800,"src":"258:2354:20","usedErrors":[],"usedEvents":[]}],"src":"109:2504:20"},"id":20},"contracts/AIRiskManager.sol":{"ast":{"absolutePath":"contracts/AIRiskManager.sol","exportedSymbols":{"AIRiskManager":[6866]},"id":6867,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6801,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"33:24:21"},{"abstract":false,"baseContracts":[],"canonicalName":"AIRiskManager","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":6866,"linearizedBaseContracts":[6866],"name":"AIRiskManager","nameLocation":"70:13:21","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AIRiskManager.RiskTier","id":6806,"members":[{"id":6802,"name":"NONE","nameLocation":"107:4:21","nodeType":"EnumValue","src":"107:4:21"},{"id":6803,"name":"C","nameLocation":"113:1:21","nodeType":"EnumValue","src":"113:1:21"},{"id":6804,"name":"B","nameLocation":"116:1:21","nodeType":"EnumValue","src":"116:1:21"},{"id":6805,"name":"A","nameLocation":"119:1:21","nodeType":"EnumValue","src":"119:1:21"}],"name":"RiskTier","nameLocation":"96:8:21","nodeType":"EnumDefinition","src":"91:31:21"},{"constant":false,"functionSelector":"5e5b8752","id":6811,"mutability":"mutable","name":"riskScores","nameLocation":"164:10:21","nodeType":"VariableDeclaration","scope":6866,"src":"128:46:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_enum$_RiskTier_$6806_$","typeString":"mapping(address => enum AIRiskManager.RiskTier)"},"typeName":{"id":6810,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6807,"name":"address","nodeType":"ElementaryTypeName","src":"136:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"128:28:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_enum$_RiskTier_$6806_$","typeString":"mapping(address => enum AIRiskManager.RiskTier)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6809,"nodeType":"UserDefinedTypeName","pathNode":{"id":6808,"name":"RiskTier","nameLocations":["147:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":6806,"src":"147:8:21"},"referencedDeclaration":6806,"src":"147:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_RiskTier_$6806","typeString":"enum AIRiskManager.RiskTier"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"248517b40f7b91692e1a4d22251b5d93cb2813773fbdfed259f89cad4c046057","id":6818,"name":"RiskScored","nameLocation":"187:10:21","nodeType":"EventDefinition","parameters":{"id":6817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6813,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"214:4:21","nodeType":"VariableDeclaration","scope":6818,"src":"198:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6812,"name":"address","nodeType":"ElementaryTypeName","src":"198:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6816,"indexed":false,"mutability":"mutable","name":"tier","nameLocation":"229:4:21","nodeType":"VariableDeclaration","scope":6818,"src":"220:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RiskTier_$6806","typeString":"enum AIRiskManager.RiskTier"},"typeName":{"id":6815,"nodeType":"UserDefinedTypeName","pathNode":{"id":6814,"name":"RiskTier","nameLocations":["220:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":6806,"src":"220:8:21"},"referencedDeclaration":6806,"src":"220:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_RiskTier_$6806","typeString":"enum AIRiskManager.RiskTier"}},"visibility":"internal"}],"src":"197:37:21"},"src":"181:54:21"},{"body":{"id":6851,"nodeType":"Block","src":"359:165:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6826,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6822,"src":"378:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[{"expression":{"id":6829,"name":"RiskTier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6806,"src":"393:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RiskTier_$6806_$","typeString":"type(enum AIRiskManager.RiskTier)"}},"id":6830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"402:1:21","memberName":"A","nodeType":"MemberAccess","referencedDeclaration":6805,"src":"393:10:21","typeDescriptions":{"typeIdentifier":"t_enum$_RiskTier_$6806","typeString":"enum AIRiskManager.RiskTier"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RiskTier_$6806","typeString":"enum AIRiskManager.RiskTier"}],"id":6828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"387:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6827,"name":"uint8","nodeType":"ElementaryTypeName","src":"387:5:21","typeDescriptions":{}}},"id":6831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"387:17:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"378:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642073636f7265","id":6833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"406:15:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_135933132c24f113e2558fd53a3dbb73e17cbef49f2d76fe110cf8eb758e8262","typeString":"literal_string \"Invalid score\""},"value":"Invalid score"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_135933132c24f113e2558fd53a3dbb73e17cbef49f2d76fe110cf8eb758e8262","typeString":"literal_string \"Invalid score\""}],"id":6825,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"370:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"370:52:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6835,"nodeType":"ExpressionStatement","src":"370:52:21"},{"expression":{"id":6842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6836,"name":"riskScores","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6811,"src":"433:10:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_enum$_RiskTier_$6806_$","typeString":"mapping(address => enum AIRiskManager.RiskTier)"}},"id":6838,"indexExpression":{"id":6837,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6820,"src":"444:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"433:16:21","typeDescriptions":{"typeIdentifier":"t_enum$_RiskTier_$6806","typeString":"enum AIRiskManager.RiskTier"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6840,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6822,"src":"461:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":6839,"name":"RiskTier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6806,"src":"452:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RiskTier_$6806_$","typeString":"type(enum AIRiskManager.RiskTier)"}},"id":6841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"452:15:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_RiskTier_$6806","typeString":"enum AIRiskManager.RiskTier"}},"src":"433:34:21","typeDescriptions":{"typeIdentifier":"t_enum$_RiskTier_$6806","typeString":"enum AIRiskManager.RiskTier"}},"id":6843,"nodeType":"ExpressionStatement","src":"433:34:21"},{"eventCall":{"arguments":[{"id":6845,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6820,"src":"494:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":6847,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6822,"src":"509:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":6846,"name":"RiskTier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6806,"src":"500:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RiskTier_$6806_$","typeString":"type(enum AIRiskManager.RiskTier)"}},"id":6848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"500:15:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_RiskTier_$6806","typeString":"enum AIRiskManager.RiskTier"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_RiskTier_$6806","typeString":"enum AIRiskManager.RiskTier"}],"id":6844,"name":"RiskScored","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6818,"src":"483:10:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_enum$_RiskTier_$6806_$returns$__$","typeString":"function (address,enum AIRiskManager.RiskTier)"}},"id":6849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"483:33:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6850,"nodeType":"EmitStatement","src":"478:38:21"}]},"functionSelector":"05ddd11a","id":6852,"implemented":true,"kind":"function","modifiers":[],"name":"setRiskScore","nameLocation":"310:12:21","nodeType":"FunctionDefinition","parameters":{"id":6823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6820,"mutability":"mutable","name":"user","nameLocation":"331:4:21","nodeType":"VariableDeclaration","scope":6852,"src":"323:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6819,"name":"address","nodeType":"ElementaryTypeName","src":"323:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6822,"mutability":"mutable","name":"score","nameLocation":"343:5:21","nodeType":"VariableDeclaration","scope":6852,"src":"337:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6821,"name":"uint8","nodeType":"ElementaryTypeName","src":"337:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"322:27:21"},"returnParameters":{"id":6824,"nodeType":"ParameterList","parameters":[],"src":"359:0:21"},"scope":6866,"src":"301:223:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6864,"nodeType":"Block","src":"601:42:21","statements":[{"expression":{"baseExpression":{"id":6860,"name":"riskScores","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6811,"src":"619:10:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_enum$_RiskTier_$6806_$","typeString":"mapping(address => enum AIRiskManager.RiskTier)"}},"id":6862,"indexExpression":{"id":6861,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6854,"src":"630:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"619:16:21","typeDescriptions":{"typeIdentifier":"t_enum$_RiskTier_$6806","typeString":"enum AIRiskManager.RiskTier"}},"functionReturnParameters":6859,"id":6863,"nodeType":"Return","src":"612:23:21"}]},"functionSelector":"dc08706d","id":6865,"implemented":true,"kind":"function","modifiers":[],"name":"getRiskScore","nameLocation":"541:12:21","nodeType":"FunctionDefinition","parameters":{"id":6855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6854,"mutability":"mutable","name":"user","nameLocation":"562:4:21","nodeType":"VariableDeclaration","scope":6865,"src":"554:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6853,"name":"address","nodeType":"ElementaryTypeName","src":"554:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"553:14:21"},"returnParameters":{"id":6859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6858,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6865,"src":"591:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RiskTier_$6806","typeString":"enum AIRiskManager.RiskTier"},"typeName":{"id":6857,"nodeType":"UserDefinedTypeName","pathNode":{"id":6856,"name":"RiskTier","nameLocations":["591:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":6806,"src":"591:8:21"},"referencedDeclaration":6806,"src":"591:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_RiskTier_$6806","typeString":"enum AIRiskManager.RiskTier"}},"visibility":"internal"}],"src":"590:10:21"},"scope":6866,"src":"532:111:21","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":6867,"src":"61:585:21","usedErrors":[],"usedEvents":[6818]}],"src":"33:617:21"},"id":21},"contracts/CCIPRouter.sol":{"ast":{"absolutePath":"contracts/CCIPRouter.sol","exportedSymbols":{"CCIPRouter":[6906]},"id":6907,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6868,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"62:24:22"},{"abstract":false,"baseContracts":[],"canonicalName":"CCIPRouter","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":6906,"linearizedBaseContracts":[6906],"name":"CCIPRouter","nameLocation":"99:10:22","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"15340f1d3815fc99b59e3b9ed010321f64951d6e6a43c97a9e92713e7cd6ad17","id":6874,"name":"MessageReceived","nameLocation":"123:15:22","nodeType":"EventDefinition","parameters":{"id":6873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6870,"indexed":false,"mutability":"mutable","name":"from","nameLocation":"147:4:22","nodeType":"VariableDeclaration","scope":6874,"src":"139:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6869,"name":"address","nodeType":"ElementaryTypeName","src":"139:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6872,"indexed":false,"mutability":"mutable","name":"data","nameLocation":"160:4:22","nodeType":"VariableDeclaration","scope":6874,"src":"153:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6871,"name":"string","nodeType":"ElementaryTypeName","src":"153:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"138:27:22"},"src":"117:49:22"},{"anonymous":false,"eventSelector":"0d7fccda06d6eb51c23cbd16d49b9b3f3ebafb002dba1b074895cbb35d0e8130","id":6880,"name":"MessageSent","nameLocation":"178:11:22","nodeType":"EventDefinition","parameters":{"id":6879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6876,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"198:2:22","nodeType":"VariableDeclaration","scope":6880,"src":"190:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6875,"name":"address","nodeType":"ElementaryTypeName","src":"190:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6878,"indexed":false,"mutability":"mutable","name":"data","nameLocation":"209:4:22","nodeType":"VariableDeclaration","scope":6880,"src":"202:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6877,"name":"string","nodeType":"ElementaryTypeName","src":"202:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"189:25:22"},"src":"172:43:22"},{"body":{"id":6891,"nodeType":"Block","src":"278:132:22","statements":[{"eventCall":{"arguments":[{"expression":{"id":6886,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"310:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"314:6:22","memberName":"sender","nodeType":"MemberAccess","src":"310:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6888,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6882,"src":"322:4:22","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":6885,"name":"MessageReceived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6874,"src":"294:15:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,string memory)"}},"id":6889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"294:33:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6890,"nodeType":"EmitStatement","src":"289:38:22"}]},"functionSelector":"2f049bf3","id":6892,"implemented":true,"kind":"function","modifiers":[],"name":"receiveMessage","nameLocation":"232:14:22","nodeType":"FunctionDefinition","parameters":{"id":6883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6882,"mutability":"mutable","name":"data","nameLocation":"263:4:22","nodeType":"VariableDeclaration","scope":6892,"src":"247:20:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":6881,"name":"string","nodeType":"ElementaryTypeName","src":"247:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"246:22:22"},"returnParameters":{"id":6884,"nodeType":"ParameterList","parameters":[],"src":"278:0:22"},"scope":6906,"src":"223:187:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6904,"nodeType":"Block","src":"482:108:22","statements":[{"eventCall":{"arguments":[{"id":6900,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6894,"src":"510:2:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6901,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6896,"src":"514:4:22","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":6899,"name":"MessageSent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6880,"src":"498:11:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,string memory)"}},"id":6902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"498:21:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6903,"nodeType":"EmitStatement","src":"493:26:22"}]},"functionSelector":"de6f24bb","id":6905,"implemented":true,"kind":"function","modifiers":[],"name":"sendMessage","nameLocation":"427:11:22","nodeType":"FunctionDefinition","parameters":{"id":6897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6894,"mutability":"mutable","name":"to","nameLocation":"447:2:22","nodeType":"VariableDeclaration","scope":6905,"src":"439:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6893,"name":"address","nodeType":"ElementaryTypeName","src":"439:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6896,"mutability":"mutable","name":"data","nameLocation":"467:4:22","nodeType":"VariableDeclaration","scope":6905,"src":"451:20:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":6895,"name":"string","nodeType":"ElementaryTypeName","src":"451:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"438:34:22"},"returnParameters":{"id":6898,"nodeType":"ParameterList","parameters":[],"src":"482:0:22"},"scope":6906,"src":"418:172:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":6907,"src":"90:503:22","usedErrors":[],"usedEvents":[6874,6880]}],"src":"62:533:22"},"id":22},"contracts/MockRealEstate.sol":{"ast":{"absolutePath":"contracts/MockRealEstate.sol","exportedSymbols":{"Context":[1779],"ERC165":[3257],"ERC721":[1509],"ERC721Utils":[1749],"IERC165":[3269],"IERC721":[1626],"IERC721Errors":[505],"IERC721Metadata":[1672],"MockRealEstate":[6954],"Ownable":[415],"Strings":[3233]},"id":6955,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6908,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:23"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":6909,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6955,"sourceUnit":1510,"src":"61:57:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":6910,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6955,"sourceUnit":416,"src":"120:52:23","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6911,"name":"ERC721","nameLocations":["203:6:23"],"nodeType":"IdentifierPath","referencedDeclaration":1509,"src":"203:6:23"},"id":6912,"nodeType":"InheritanceSpecifier","src":"203:6:23"},{"baseName":{"id":6913,"name":"Ownable","nameLocations":["211:7:23"],"nodeType":"IdentifierPath","referencedDeclaration":415,"src":"211:7:23"},"id":6914,"nodeType":"InheritanceSpecifier","src":"211:7:23"}],"canonicalName":"MockRealEstate","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":6954,"linearizedBaseContracts":[6954,415,1509,505,1672,1626,3257,3269,1779],"name":"MockRealEstate","nameLocation":"185:14:23","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"75794a3c","id":6916,"mutability":"mutable","name":"nextTokenId","nameLocation":"241:11:23","nodeType":"VariableDeclaration","scope":6954,"src":"226:26:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6915,"name":"uint256","nodeType":"ElementaryTypeName","src":"226:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"body":{"id":6928,"nodeType":"Block","src":"375:2:23","statements":[]},"id":6929,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4d6f636b5265616c457374617465","id":6921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"312:16:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_b9e491e4827cc0dff427369fdbfa7f776ba95ee69a97036d4d2ee456593c89c8","typeString":"literal_string \"MockRealEstate\""},"value":"MockRealEstate"},{"hexValue":"4d5245","id":6922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"330:5:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_6a276174106362147b87c12a762f3687580129251ca71e76de954b6d530dfa8f","typeString":"literal_string \"MRE\""},"value":"MRE"}],"id":6923,"kind":"baseConstructorSpecifier","modifierName":{"id":6920,"name":"ERC721","nameLocations":["305:6:23"],"nodeType":"IdentifierPath","referencedDeclaration":1509,"src":"305:6:23"},"nodeType":"ModifierInvocation","src":"305:31:23"},{"arguments":[{"id":6925,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6918,"src":"355:12:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":6926,"kind":"baseConstructorSpecifier","modifierName":{"id":6924,"name":"Ownable","nameLocations":["347:7:23"],"nodeType":"IdentifierPath","referencedDeclaration":415,"src":"347:7:23"},"nodeType":"ModifierInvocation","src":"347:21:23"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6918,"mutability":"mutable","name":"initialOwner","nameLocation":"281:12:23","nodeType":"VariableDeclaration","scope":6929,"src":"273:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6917,"name":"address","nodeType":"ElementaryTypeName","src":"273:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"272:22:23"},"returnParameters":{"id":6927,"nodeType":"ParameterList","parameters":[],"src":"375:0:23"},"scope":6954,"src":"261:116:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6952,"nodeType":"Block","src":"448:126:23","statements":[{"assignments":[6939],"declarations":[{"constant":false,"id":6939,"mutability":"mutable","name":"tokenId","nameLocation":"467:7:23","nodeType":"VariableDeclaration","scope":6952,"src":"459:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6938,"name":"uint256","nodeType":"ElementaryTypeName","src":"459:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6941,"initialValue":{"id":6940,"name":"nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6916,"src":"477:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"459:29:23"},{"expression":{"arguments":[{"id":6943,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6931,"src":"505:2:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6944,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6939,"src":"509:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6942,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"499:5:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"499:18:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6946,"nodeType":"ExpressionStatement","src":"499:18:23"},{"expression":{"id":6948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"528:13:23","subExpression":{"id":6947,"name":"nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6916,"src":"528:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6949,"nodeType":"ExpressionStatement","src":"528:13:23"},{"expression":{"id":6950,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6939,"src":"559:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6937,"id":6951,"nodeType":"Return","src":"552:14:23"}]},"functionSelector":"6a627842","id":6953,"implemented":true,"kind":"function","modifiers":[{"id":6934,"kind":"modifierInvocation","modifierName":{"id":6933,"name":"onlyOwner","nameLocations":["420:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":326,"src":"420:9:23"},"nodeType":"ModifierInvocation","src":"420:9:23"}],"name":"mint","nameLocation":"394:4:23","nodeType":"FunctionDefinition","parameters":{"id":6932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6931,"mutability":"mutable","name":"to","nameLocation":"407:2:23","nodeType":"VariableDeclaration","scope":6953,"src":"399:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6930,"name":"address","nodeType":"ElementaryTypeName","src":"399:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"398:12:23"},"returnParameters":{"id":6937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6936,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6953,"src":"439:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6935,"name":"uint256","nodeType":"ElementaryTypeName","src":"439:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"438:9:23"},"scope":6954,"src":"385:189:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":6955,"src":"176:401:23","usedErrors":[281,286,463,468,477,482,487,494,499,504],"usedEvents":[292,1525,1534,1543]}],"src":"33:546:23"},"id":23},"contracts/RWARegistry.sol":{"ast":{"absolutePath":"contracts/RWARegistry.sol","exportedSymbols":{"RWARegistry":[7031]},"id":7032,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6956,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"33:24:24"},{"abstract":false,"baseContracts":[],"canonicalName":"RWARegistry","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7031,"linearizedBaseContracts":[7031],"name":"RWARegistry","nameLocation":"70:11:24","nodeType":"ContractDefinition","nodes":[{"canonicalName":"RWARegistry.Asset","id":6965,"members":[{"constant":false,"id":6958,"mutability":"mutable","name":"id","nameLocation":"121:2:24","nodeType":"VariableDeclaration","scope":6965,"src":"113:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6957,"name":"uint256","nodeType":"ElementaryTypeName","src":"113:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6960,"mutability":"mutable","name":"owner","nameLocation":"142:5:24","nodeType":"VariableDeclaration","scope":6965,"src":"134:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6959,"name":"address","nodeType":"ElementaryTypeName","src":"134:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6962,"mutability":"mutable","name":"metadataURI","nameLocation":"165:11:24","nodeType":"VariableDeclaration","scope":6965,"src":"158:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6961,"name":"string","nodeType":"ElementaryTypeName","src":"158:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6964,"mutability":"mutable","name":"valuationUSD","nameLocation":"195:12:24","nodeType":"VariableDeclaration","scope":6965,"src":"187:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6963,"name":"uint256","nodeType":"ElementaryTypeName","src":"187:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Asset","nameLocation":"96:5:24","nodeType":"StructDefinition","scope":7031,"src":"89:126:24","visibility":"public"},{"constant":false,"functionSelector":"cf35bdd0","id":6970,"mutability":"mutable","name":"assets","nameLocation":"256:6:24","nodeType":"VariableDeclaration","scope":7031,"src":"223:39:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Asset_$6965_storage_$","typeString":"mapping(uint256 => struct RWARegistry.Asset)"},"typeName":{"id":6969,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6966,"name":"uint256","nodeType":"ElementaryTypeName","src":"231:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"223:25:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Asset_$6965_storage_$","typeString":"mapping(uint256 => struct RWARegistry.Asset)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6968,"nodeType":"UserDefinedTypeName","pathNode":{"id":6967,"name":"Asset","nameLocations":["242:5:24"],"nodeType":"IdentifierPath","referencedDeclaration":6965,"src":"242:5:24"},"referencedDeclaration":6965,"src":"242:5:24","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$6965_storage_ptr","typeString":"struct RWARegistry.Asset"}}},"visibility":"public"},{"constant":false,"functionSelector":"4b918786","id":6972,"mutability":"mutable","name":"assetCounter","nameLocation":"284:12:24","nodeType":"VariableDeclaration","scope":7031,"src":"269:27:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6971,"name":"uint256","nodeType":"ElementaryTypeName","src":"269:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"anonymous":false,"eventSelector":"17bfbb947caca86ac77ea06397ced8c4f77a1a6c82a21b5a05a738ceddc1f660","id":6982,"name":"AssetRegistered","nameLocation":"311:15:24","nodeType":"EventDefinition","parameters":{"id":6981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6974,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"343:2:24","nodeType":"VariableDeclaration","scope":6982,"src":"327:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6973,"name":"uint256","nodeType":"ElementaryTypeName","src":"327:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6976,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"363:5:24","nodeType":"VariableDeclaration","scope":6982,"src":"347:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6975,"name":"address","nodeType":"ElementaryTypeName","src":"347:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6978,"indexed":false,"mutability":"mutable","name":"metadataURI","nameLocation":"377:11:24","nodeType":"VariableDeclaration","scope":6982,"src":"370:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6977,"name":"string","nodeType":"ElementaryTypeName","src":"370:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6980,"indexed":false,"mutability":"mutable","name":"valuationUSD","nameLocation":"398:12:24","nodeType":"VariableDeclaration","scope":6982,"src":"390:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6979,"name":"uint256","nodeType":"ElementaryTypeName","src":"390:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"326:85:24"},"src":"305:107:24"},{"body":{"id":7016,"nodeType":"Block","src":"521:344:24","statements":[{"expression":{"id":6992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"532:14:24","subExpression":{"id":6991,"name":"assetCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6972,"src":"532:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6993,"nodeType":"ExpressionStatement","src":"532:14:24"},{"expression":{"id":7004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6994,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6970,"src":"557:6:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Asset_$6965_storage_$","typeString":"mapping(uint256 => struct RWARegistry.Asset storage ref)"}},"id":6996,"indexExpression":{"id":6995,"name":"assetCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6972,"src":"564:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"557:20:24","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$6965_storage","typeString":"struct RWARegistry.Asset storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6998,"name":"assetCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6972,"src":"605:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6999,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"639:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"643:6:24","memberName":"sender","nodeType":"MemberAccess","src":"639:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7001,"name":"metadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6984,"src":"677:11:24","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":7002,"name":"valuationUSD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6986,"src":"717:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6997,"name":"Asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6965,"src":"580:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Asset_$6965_storage_ptr_$","typeString":"type(struct RWARegistry.Asset storage pointer)"}},"id":7003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["601:2:24","632:5:24","664:11:24","703:12:24"],"names":["id","owner","metadataURI","valuationUSD"],"nodeType":"FunctionCall","src":"580:161:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$6965_memory_ptr","typeString":"struct RWARegistry.Asset memory"}},"src":"557:184:24","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$6965_storage","typeString":"struct RWARegistry.Asset storage ref"}},"id":7005,"nodeType":"ExpressionStatement","src":"557:184:24"},{"eventCall":{"arguments":[{"id":7007,"name":"assetCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6972,"src":"775:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7008,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"789:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"793:6:24","memberName":"sender","nodeType":"MemberAccess","src":"789:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7010,"name":"metadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6984,"src":"801:11:24","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":7011,"name":"valuationUSD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6986,"src":"814:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7006,"name":"AssetRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6982,"src":"759:15:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (uint256,address,string memory,uint256)"}},"id":7012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"759:68:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7013,"nodeType":"EmitStatement","src":"754:73:24"},{"expression":{"id":7014,"name":"assetCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6972,"src":"845:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6990,"id":7015,"nodeType":"Return","src":"838:19:24"}]},"functionSelector":"f65db150","id":7017,"implemented":true,"kind":"function","modifiers":[],"name":"registerAsset","nameLocation":"429:13:24","nodeType":"FunctionDefinition","parameters":{"id":6987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6984,"mutability":"mutable","name":"metadataURI","nameLocation":"459:11:24","nodeType":"VariableDeclaration","scope":7017,"src":"443:27:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":6983,"name":"string","nodeType":"ElementaryTypeName","src":"443:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6986,"mutability":"mutable","name":"valuationUSD","nameLocation":"480:12:24","nodeType":"VariableDeclaration","scope":7017,"src":"472:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6985,"name":"uint256","nodeType":"ElementaryTypeName","src":"472:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"442:51:24"},"returnParameters":{"id":6990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6989,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7017,"src":"512:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6988,"name":"uint256","nodeType":"ElementaryTypeName","src":"512:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"511:9:24"},"scope":7031,"src":"420:445:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7029,"nodeType":"Block","src":"945:41:24","statements":[{"expression":{"baseExpression":{"id":7025,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6970,"src":"963:6:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Asset_$6965_storage_$","typeString":"mapping(uint256 => struct RWARegistry.Asset storage ref)"}},"id":7027,"indexExpression":{"id":7026,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7019,"src":"970:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"963:15:24","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$6965_storage","typeString":"struct RWARegistry.Asset storage ref"}},"functionReturnParameters":7024,"id":7028,"nodeType":"Return","src":"956:22:24"}]},"functionSelector":"eac8f5b8","id":7030,"implemented":true,"kind":"function","modifiers":[],"name":"getAsset","nameLocation":"882:8:24","nodeType":"FunctionDefinition","parameters":{"id":7020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7019,"mutability":"mutable","name":"assetId","nameLocation":"899:7:24","nodeType":"VariableDeclaration","scope":7030,"src":"891:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7018,"name":"uint256","nodeType":"ElementaryTypeName","src":"891:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"890:17:24"},"returnParameters":{"id":7024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7023,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7030,"src":"931:12:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$6965_memory_ptr","typeString":"struct RWARegistry.Asset"},"typeName":{"id":7022,"nodeType":"UserDefinedTypeName","pathNode":{"id":7021,"name":"Asset","nameLocations":["931:5:24"],"nodeType":"IdentifierPath","referencedDeclaration":6965,"src":"931:5:24"},"referencedDeclaration":6965,"src":"931:5:24","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$6965_storage_ptr","typeString":"struct RWARegistry.Asset"}},"visibility":"internal"}],"src":"930:14:24"},"scope":7031,"src":"873:113:24","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":7032,"src":"61:928:24","usedErrors":[],"usedEvents":[6982]}],"src":"33:958:24"},"id":24},"contracts/VaultCore.sol":{"ast":{"absolutePath":"contracts/VaultCore.sol","exportedSymbols":{"AggregatorV3Interface":[113],"AutomationBase":[37],"AutomationCompatible":[48],"AutomationCompatibleInterface":[67],"IAIRiskManager":[7051],"ICCIPRouter":[7043],"VRFConsumerBaseV2":[171],"VRFCoordinatorV2Interface":[267],"VaultCore":[7436]},"id":7437,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7033,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"33:24:25"},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol","file":"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol","id":7034,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7437,"sourceUnit":268,"src":"61:84:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol","file":"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol","id":7035,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7437,"sourceUnit":172,"src":"147:65:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol","file":"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol","id":7036,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7437,"sourceUnit":114,"src":"214:83:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol","file":"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol","id":7037,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7437,"sourceUnit":49,"src":"299:75:25","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ICCIPRouter","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":7043,"linearizedBaseContracts":[7043],"name":"ICCIPRouter","nameLocation":"388:11:25","nodeType":"ContractDefinition","nodes":[{"functionSelector":"2f049bf3","id":7042,"implemented":false,"kind":"function","modifiers":[],"name":"receiveMessage","nameLocation":"416:14:25","nodeType":"FunctionDefinition","parameters":{"id":7040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7039,"mutability":"mutable","name":"data","nameLocation":"447:4:25","nodeType":"VariableDeclaration","scope":7042,"src":"431:20:25","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":7038,"name":"string","nodeType":"ElementaryTypeName","src":"431:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"430:22:25"},"returnParameters":{"id":7041,"nodeType":"ParameterList","parameters":[],"src":"461:0:25"},"scope":7043,"src":"407:55:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":7437,"src":"378:87:25","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IAIRiskManager","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":7051,"linearizedBaseContracts":[7051],"name":"IAIRiskManager","nameLocation":"479:14:25","nodeType":"ContractDefinition","nodes":[{"functionSelector":"dc08706d","id":7050,"implemented":false,"kind":"function","modifiers":[],"name":"getRiskScore","nameLocation":"510:12:25","nodeType":"FunctionDefinition","parameters":{"id":7046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7045,"mutability":"mutable","name":"user","nameLocation":"531:4:25","nodeType":"VariableDeclaration","scope":7050,"src":"523:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7044,"name":"address","nodeType":"ElementaryTypeName","src":"523:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"522:14:25"},"returnParameters":{"id":7049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7048,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7050,"src":"560:5:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7047,"name":"uint8","nodeType":"ElementaryTypeName","src":"560:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"559:7:25"},"scope":7051,"src":"501:66:25","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":7437,"src":"469:101:25","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":7052,"name":"AutomationCompatibleInterface","nameLocations":["596:29:25"],"nodeType":"IdentifierPath","referencedDeclaration":67,"src":"596:29:25"},"id":7053,"nodeType":"InheritanceSpecifier","src":"596:29:25"},{"baseName":{"id":7054,"name":"VRFConsumerBaseV2","nameLocations":["627:17:25"],"nodeType":"IdentifierPath","referencedDeclaration":171,"src":"627:17:25"},"id":7055,"nodeType":"InheritanceSpecifier","src":"627:17:25"}],"canonicalName":"VaultCore","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7436,"linearizedBaseContracts":[7436,171,67],"name":"VaultCore","nameLocation":"583:9:25","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7058,"mutability":"mutable","name":"priceFeed","nameLocation":"683:9:25","nodeType":"VariableDeclaration","scope":7436,"src":"652:40:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$113","typeString":"contract AggregatorV3Interface"},"typeName":{"id":7057,"nodeType":"UserDefinedTypeName","pathNode":{"id":7056,"name":"AggregatorV3Interface","nameLocations":["652:21:25"],"nodeType":"IdentifierPath","referencedDeclaration":113,"src":"652:21:25"},"referencedDeclaration":113,"src":"652:21:25","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$113","typeString":"contract AggregatorV3Interface"}},"visibility":"internal"},{"constant":false,"functionSelector":"47842663","id":7061,"mutability":"mutable","name":"riskManager","nameLocation":"721:11:25","nodeType":"VariableDeclaration","scope":7436,"src":"699:33:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAIRiskManager_$7051","typeString":"contract IAIRiskManager"},"typeName":{"id":7060,"nodeType":"UserDefinedTypeName","pathNode":{"id":7059,"name":"IAIRiskManager","nameLocations":["699:14:25"],"nodeType":"IdentifierPath","referencedDeclaration":7051,"src":"699:14:25"},"referencedDeclaration":7051,"src":"699:14:25","typeDescriptions":{"typeIdentifier":"t_contract$_IAIRiskManager_$7051","typeString":"contract IAIRiskManager"}},"visibility":"public"},{"constant":false,"functionSelector":"0de22984","id":7063,"mutability":"mutable","name":"ccipRouter","nameLocation":"754:10:25","nodeType":"VariableDeclaration","scope":7436,"src":"739:25:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7062,"name":"address","nodeType":"ElementaryTypeName","src":"739:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"id":7066,"mutability":"mutable","name":"COORDINATOR","nameLocation":"821:11:25","nodeType":"VariableDeclaration","scope":7436,"src":"795:37:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$267","typeString":"contract VRFCoordinatorV2Interface"},"typeName":{"id":7065,"nodeType":"UserDefinedTypeName","pathNode":{"id":7064,"name":"VRFCoordinatorV2Interface","nameLocations":["795:25:25"],"nodeType":"IdentifierPath","referencedDeclaration":267,"src":"795:25:25"},"referencedDeclaration":267,"src":"795:25:25","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$267","typeString":"contract VRFCoordinatorV2Interface"}},"visibility":"internal"},{"constant":false,"functionSelector":"61728f39","id":7068,"mutability":"mutable","name":"keyHash","nameLocation":"854:7:25","nodeType":"VariableDeclaration","scope":7436,"src":"839:22:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7067,"name":"bytes32","nodeType":"ElementaryTypeName","src":"839:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"functionSelector":"09c1ba2e","id":7070,"mutability":"mutable","name":"subscriptionId","nameLocation":"882:14:25","nodeType":"VariableDeclaration","scope":7436,"src":"868:28:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":7069,"name":"uint64","nodeType":"ElementaryTypeName","src":"868:6:25","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"public"},{"constant":false,"functionSelector":"24f74697","id":7073,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"917:16:25","nodeType":"VariableDeclaration","scope":7436,"src":"903:39:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7071,"name":"uint32","nodeType":"ElementaryTypeName","src":"903:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"313030303030","id":7072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"936:6:25","typeDescriptions":{"typeIdentifier":"t_rational_100000_by_1","typeString":"int_const 100000"},"value":"100000"},"visibility":"public"},{"constant":false,"functionSelector":"b0fb162f","id":7076,"mutability":"mutable","name":"requestConfirmations","nameLocation":"963:20:25","nodeType":"VariableDeclaration","scope":7436,"src":"949:38:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":7074,"name":"uint16","nodeType":"ElementaryTypeName","src":"949:6:25","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"hexValue":"33","id":7075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"986:1:25","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"public"},{"constant":false,"functionSelector":"7ccfd7fc","id":7079,"mutability":"mutable","name":"numWords","nameLocation":"1008:8:25","nodeType":"VariableDeclaration","scope":7436,"src":"994:26:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7077,"name":"uint32","nodeType":"ElementaryTypeName","src":"994:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"31","id":7078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1019:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"public"},{"canonicalName":"VaultCore.Loan","id":7088,"members":[{"constant":false,"id":7081,"mutability":"mutable","name":"borrower","nameLocation":"1083:8:25","nodeType":"VariableDeclaration","scope":7088,"src":"1075:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7080,"name":"address","nodeType":"ElementaryTypeName","src":"1075:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7083,"mutability":"mutable","name":"amount","nameLocation":"1110:6:25","nodeType":"VariableDeclaration","scope":7088,"src":"1102:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7082,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7085,"mutability":"mutable","name":"repaid","nameLocation":"1132:6:25","nodeType":"VariableDeclaration","scope":7088,"src":"1127:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7084,"name":"bool","nodeType":"ElementaryTypeName","src":"1127:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7087,"mutability":"mutable","name":"riskTier","nameLocation":"1155:8:25","nodeType":"VariableDeclaration","scope":7088,"src":"1149:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7086,"name":"uint8","nodeType":"ElementaryTypeName","src":"1149:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"name":"Loan","nameLocation":"1059:4:25","nodeType":"StructDefinition","scope":7436,"src":"1052:119:25","visibility":"public"},{"constant":false,"functionSelector":"e1ec3c68","id":7093,"mutability":"mutable","name":"loans","nameLocation":"1211:5:25","nodeType":"VariableDeclaration","scope":7436,"src":"1179:37:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Loan_$7088_storage_$","typeString":"mapping(uint256 => struct VaultCore.Loan)"},"typeName":{"id":7092,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7089,"name":"uint256","nodeType":"ElementaryTypeName","src":"1187:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1179:24:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Loan_$7088_storage_$","typeString":"mapping(uint256 => struct VaultCore.Loan)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7091,"nodeType":"UserDefinedTypeName","pathNode":{"id":7090,"name":"Loan","nameLocations":["1198:4:25"],"nodeType":"IdentifierPath","referencedDeclaration":7088,"src":"1198:4:25"},"referencedDeclaration":7088,"src":"1198:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Loan_$7088_storage_ptr","typeString":"struct VaultCore.Loan"}}},"visibility":"public"},{"constant":false,"functionSelector":"c95669a5","id":7095,"mutability":"mutable","name":"loanId","nameLocation":"1238:6:25","nodeType":"VariableDeclaration","scope":7436,"src":"1223:21:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7094,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"anonymous":false,"eventSelector":"2a2a0e30be66d7708fcc027c3528f84a6e08918887209091c74bec2387cb0c2e","id":7105,"name":"LoanIssued","nameLocation":"1274:10:25","nodeType":"EventDefinition","parameters":{"id":7104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7097,"indexed":false,"mutability":"mutable","name":"borrower","nameLocation":"1293:8:25","nodeType":"VariableDeclaration","scope":7105,"src":"1285:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7096,"name":"address","nodeType":"ElementaryTypeName","src":"1285:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7099,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1311:6:25","nodeType":"VariableDeclaration","scope":7105,"src":"1303:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7098,"name":"uint256","nodeType":"ElementaryTypeName","src":"1303:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7101,"indexed":false,"mutability":"mutable","name":"loanId","nameLocation":"1327:6:25","nodeType":"VariableDeclaration","scope":7105,"src":"1319:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7100,"name":"uint256","nodeType":"ElementaryTypeName","src":"1319:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7103,"indexed":false,"mutability":"mutable","name":"riskTier","nameLocation":"1341:8:25","nodeType":"VariableDeclaration","scope":7105,"src":"1335:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7102,"name":"uint8","nodeType":"ElementaryTypeName","src":"1335:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"1284:66:25"},"src":"1268:83:25"},{"anonymous":false,"eventSelector":"af91ffe368225045d42f7c2b4b90feb438133ac1e375e73bc9066652b70a1d77","id":7109,"name":"LoanLiquidated","nameLocation":"1363:14:25","nodeType":"EventDefinition","parameters":{"id":7108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7107,"indexed":false,"mutability":"mutable","name":"loanId","nameLocation":"1386:6:25","nodeType":"VariableDeclaration","scope":7109,"src":"1378:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7106,"name":"uint256","nodeType":"ElementaryTypeName","src":"1378:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1377:16:25"},"src":"1357:37:25"},{"anonymous":false,"eventSelector":"3c227ef12195f88b4263ee086a2732948a4e23244a4277294b8c9b177d56aa5b","id":7117,"name":"CrossChainLoanApproval","nameLocation":"1406:22:25","nodeType":"EventDefinition","parameters":{"id":7116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7111,"indexed":false,"mutability":"mutable","name":"assetId","nameLocation":"1437:7:25","nodeType":"VariableDeclaration","scope":7117,"src":"1429:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7110,"name":"uint256","nodeType":"ElementaryTypeName","src":"1429:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7113,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1454:6:25","nodeType":"VariableDeclaration","scope":7117,"src":"1446:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7112,"name":"uint256","nodeType":"ElementaryTypeName","src":"1446:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7115,"indexed":false,"mutability":"mutable","name":"borrower","nameLocation":"1470:8:25","nodeType":"VariableDeclaration","scope":7117,"src":"1462:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7114,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1428:51:25"},"src":"1400:80:25"},{"anonymous":false,"eventSelector":"b46fced3a6df62223b1457dd73f5a2b175fcaa90e8b757f5ef3dcb74d6794645","id":7121,"name":"RandomLoanSelected","nameLocation":"1492:18:25","nodeType":"EventDefinition","parameters":{"id":7120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7119,"indexed":false,"mutability":"mutable","name":"selectedLoanId","nameLocation":"1519:14:25","nodeType":"VariableDeclaration","scope":7121,"src":"1511:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7118,"name":"uint256","nodeType":"ElementaryTypeName","src":"1511:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:24:25"},"src":"1486:49:25"},{"body":{"id":7169,"nodeType":"Block","src":"1781:293:25","statements":[{"expression":{"id":7143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7139,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7058,"src":"1792:9:25","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$113","typeString":"contract AggregatorV3Interface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7141,"name":"_priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7123,"src":"1826:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7140,"name":"AggregatorV3Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":113,"src":"1804:21:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AggregatorV3Interface_$113_$","typeString":"type(contract AggregatorV3Interface)"}},"id":7142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1804:33:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$113","typeString":"contract AggregatorV3Interface"}},"src":"1792:45:25","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$113","typeString":"contract AggregatorV3Interface"}},"id":7144,"nodeType":"ExpressionStatement","src":"1792:45:25"},{"expression":{"id":7149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7145,"name":"riskManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7061,"src":"1848:11:25","typeDescriptions":{"typeIdentifier":"t_contract$_IAIRiskManager_$7051","typeString":"contract IAIRiskManager"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7147,"name":"_riskManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7125,"src":"1877:12:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7146,"name":"IAIRiskManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7051,"src":"1862:14:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAIRiskManager_$7051_$","typeString":"type(contract IAIRiskManager)"}},"id":7148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1862:28:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAIRiskManager_$7051","typeString":"contract IAIRiskManager"}},"src":"1848:42:25","typeDescriptions":{"typeIdentifier":"t_contract$_IAIRiskManager_$7051","typeString":"contract IAIRiskManager"}},"id":7150,"nodeType":"ExpressionStatement","src":"1848:42:25"},{"expression":{"id":7153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7151,"name":"ccipRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7063,"src":"1901:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7152,"name":"_ccipRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7127,"src":"1914:11:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1901:24:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7154,"nodeType":"ExpressionStatement","src":"1901:24:25"},{"expression":{"id":7159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7155,"name":"COORDINATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7066,"src":"1938:11:25","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$267","typeString":"contract VRFCoordinatorV2Interface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7157,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7129,"src":"1978:15:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7156,"name":"VRFCoordinatorV2Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":267,"src":"1952:25:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VRFCoordinatorV2Interface_$267_$","typeString":"type(contract VRFCoordinatorV2Interface)"}},"id":7158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1952:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$267","typeString":"contract VRFCoordinatorV2Interface"}},"src":"1938:56:25","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$267","typeString":"contract VRFCoordinatorV2Interface"}},"id":7160,"nodeType":"ExpressionStatement","src":"1938:56:25"},{"expression":{"id":7163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7161,"name":"keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7068,"src":"2005:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7162,"name":"_keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7131,"src":"2015:8:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2005:18:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7164,"nodeType":"ExpressionStatement","src":"2005:18:25"},{"expression":{"id":7167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7165,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7070,"src":"2034:14:25","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7166,"name":"_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7133,"src":"2051:15:25","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"2034:32:25","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":7168,"nodeType":"ExpressionStatement","src":"2034:32:25"}]},"id":7170,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":7136,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7129,"src":"1764:15:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":7137,"kind":"baseConstructorSpecifier","modifierName":{"id":7135,"name":"VRFConsumerBaseV2","nameLocations":["1746:17:25"],"nodeType":"IdentifierPath","referencedDeclaration":171,"src":"1746:17:25"},"nodeType":"ModifierInvocation","src":"1746:34:25"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7123,"mutability":"mutable","name":"_priceFeed","nameLocation":"1573:10:25","nodeType":"VariableDeclaration","scope":7170,"src":"1565:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7122,"name":"address","nodeType":"ElementaryTypeName","src":"1565:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7125,"mutability":"mutable","name":"_riskManager","nameLocation":"1602:12:25","nodeType":"VariableDeclaration","scope":7170,"src":"1594:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7124,"name":"address","nodeType":"ElementaryTypeName","src":"1594:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7127,"mutability":"mutable","name":"_ccipRouter","nameLocation":"1633:11:25","nodeType":"VariableDeclaration","scope":7170,"src":"1625:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7126,"name":"address","nodeType":"ElementaryTypeName","src":"1625:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7129,"mutability":"mutable","name":"_vrfCoordinator","nameLocation":"1663:15:25","nodeType":"VariableDeclaration","scope":7170,"src":"1655:23:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7128,"name":"address","nodeType":"ElementaryTypeName","src":"1655:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7131,"mutability":"mutable","name":"_keyHash","nameLocation":"1697:8:25","nodeType":"VariableDeclaration","scope":7170,"src":"1689:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1689:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7133,"mutability":"mutable","name":"_subscriptionId","nameLocation":"1723:15:25","nodeType":"VariableDeclaration","scope":7170,"src":"1716:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":7132,"name":"uint64","nodeType":"ElementaryTypeName","src":"1716:6:25","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"1554:191:25"},"returnParameters":{"id":7138,"nodeType":"ParameterList","parameters":[],"src":"1781:0:25"},"scope":7436,"src":"1543:531:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7213,"nodeType":"Block","src":"2159:288:25","statements":[{"assignments":[7176],"declarations":[{"constant":false,"id":7176,"mutability":"mutable","name":"riskTier","nameLocation":"2176:8:25","nodeType":"VariableDeclaration","scope":7213,"src":"2170:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7175,"name":"uint8","nodeType":"ElementaryTypeName","src":"2170:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":7182,"initialValue":{"arguments":[{"expression":{"id":7179,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2212:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2216:6:25","memberName":"sender","nodeType":"MemberAccess","src":"2212:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7177,"name":"riskManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7061,"src":"2187:11:25","typeDescriptions":{"typeIdentifier":"t_contract$_IAIRiskManager_$7051","typeString":"contract IAIRiskManager"}},"id":7178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2199:12:25","memberName":"getRiskScore","nodeType":"MemberAccess","referencedDeclaration":7050,"src":"2187:24:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint8_$","typeString":"function (address) view external returns (uint8)"}},"id":7181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2187:36:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"2170:53:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7184,"name":"riskTier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7176,"src":"2242:8:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"32","id":7185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2254:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2242:13:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5269736b20746f6f2068696768","id":7187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2257:15:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_ad33effebb8ebd668b493fd4633c03f9cbc09e33c64bafab92287921327885a7","typeString":"literal_string \"Risk too high\""},"value":"Risk too high"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ad33effebb8ebd668b493fd4633c03f9cbc09e33c64bafab92287921327885a7","typeString":"literal_string \"Risk too high\""}],"id":7183,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2234:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2234:39:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7189,"nodeType":"ExpressionStatement","src":"2234:39:25"},{"expression":{"id":7200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7190,"name":"loans","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7093,"src":"2299:5:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Loan_$7088_storage_$","typeString":"mapping(uint256 => struct VaultCore.Loan storage ref)"}},"id":7192,"indexExpression":{"id":7191,"name":"loanId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7095,"src":"2305:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2299:13:25","typeDescriptions":{"typeIdentifier":"t_struct$_Loan_$7088_storage","typeString":"struct VaultCore.Loan storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":7194,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2320:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2324:6:25","memberName":"sender","nodeType":"MemberAccess","src":"2320:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7196,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7172,"src":"2332:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":7197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2340:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"id":7198,"name":"riskTier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7176,"src":"2347:8:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":7193,"name":"Loan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7088,"src":"2315:4:25","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Loan_$7088_storage_ptr_$","typeString":"type(struct VaultCore.Loan storage pointer)"}},"id":7199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2315:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Loan_$7088_memory_ptr","typeString":"struct VaultCore.Loan memory"}},"src":"2299:57:25","typeDescriptions":{"typeIdentifier":"t_struct$_Loan_$7088_storage","typeString":"struct VaultCore.Loan storage ref"}},"id":7201,"nodeType":"ExpressionStatement","src":"2299:57:25"},{"eventCall":{"arguments":[{"expression":{"id":7203,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2383:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2387:6:25","memberName":"sender","nodeType":"MemberAccess","src":"2383:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7205,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7172,"src":"2395:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7206,"name":"loanId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7095,"src":"2403:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7207,"name":"riskTier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7176,"src":"2411:8:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":7202,"name":"LoanIssued","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7105,"src":"2372:10:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$returns$__$","typeString":"function (address,uint256,uint256,uint8)"}},"id":7208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2372:48:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7209,"nodeType":"EmitStatement","src":"2367:53:25"},{"expression":{"id":7211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2431:8:25","subExpression":{"id":7210,"name":"loanId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7095,"src":"2431:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7212,"nodeType":"ExpressionStatement","src":"2431:8:25"}]},"id":7214,"implemented":true,"kind":"function","modifiers":[],"name":"borrow","nameLocation":"2127:6:25","nodeType":"FunctionDefinition","parameters":{"id":7173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7172,"mutability":"mutable","name":"amount","nameLocation":"2142:6:25","nodeType":"VariableDeclaration","scope":7214,"src":"2134:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7171,"name":"uint256","nodeType":"ElementaryTypeName","src":"2134:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2133:16:25"},"returnParameters":{"id":7174,"nodeType":"ParameterList","parameters":[],"src":"2159:0:25"},"scope":7436,"src":"2118:329:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7247,"nodeType":"Block","src":"2526:225:25","statements":[{"assignments":[7222],"declarations":[{"constant":false,"id":7222,"mutability":"mutable","name":"riskTier","nameLocation":"2543:8:25","nodeType":"VariableDeclaration","scope":7247,"src":"2537:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7221,"name":"uint8","nodeType":"ElementaryTypeName","src":"2537:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":7228,"initialValue":{"arguments":[{"expression":{"id":7225,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2579:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2583:6:25","memberName":"sender","nodeType":"MemberAccess","src":"2579:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7223,"name":"riskManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7061,"src":"2554:11:25","typeDescriptions":{"typeIdentifier":"t_contract$_IAIRiskManager_$7051","typeString":"contract IAIRiskManager"}},"id":7224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2566:12:25","memberName":"getRiskScore","nodeType":"MemberAccess","referencedDeclaration":7050,"src":"2554:24:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint8_$","typeString":"function (address) view external returns (uint8)"}},"id":7227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2554:36:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"2537:53:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7230,"name":"riskTier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7222,"src":"2609:8:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"32","id":7231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2621:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2609:13:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5269736b20746f6f20686967682028617070726f76616c29","id":7233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2624:26:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_d0d9a03f66fcd64e921be555242143db26e2859927adcfc5f843c5b20f551002","typeString":"literal_string \"Risk too high (approval)\""},"value":"Risk too high (approval)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d0d9a03f66fcd64e921be555242143db26e2859927adcfc5f843c5b20f551002","typeString":"literal_string \"Risk too high (approval)\""}],"id":7229,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2601:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2601:50:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7235,"nodeType":"ExpressionStatement","src":"2601:50:25"},{"expression":{"arguments":[{"id":7237,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7218,"src":"2669:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7236,"name":"borrow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7214,"src":"2662:6:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":7238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2662:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7239,"nodeType":"ExpressionStatement","src":"2662:14:25"},{"eventCall":{"arguments":[{"id":7241,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7216,"src":"2715:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7242,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7218,"src":"2724:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7243,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2732:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2736:6:25","memberName":"sender","nodeType":"MemberAccess","src":"2732:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7240,"name":"CrossChainLoanApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7117,"src":"2692:22:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,uint256,address)"}},"id":7245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:51:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7246,"nodeType":"EmitStatement","src":"2687:56:25"}]},"functionSelector":"86fcdc19","id":7248,"implemented":true,"kind":"function","modifiers":[],"name":"receiveLoanApproval","nameLocation":"2464:19:25","nodeType":"FunctionDefinition","parameters":{"id":7219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7216,"mutability":"mutable","name":"assetId","nameLocation":"2492:7:25","nodeType":"VariableDeclaration","scope":7248,"src":"2484:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7215,"name":"uint256","nodeType":"ElementaryTypeName","src":"2484:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7218,"mutability":"mutable","name":"amount","nameLocation":"2509:6:25","nodeType":"VariableDeclaration","scope":7248,"src":"2501:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7217,"name":"uint256","nodeType":"ElementaryTypeName","src":"2501:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2483:33:25"},"returnParameters":{"id":7220,"nodeType":"ParameterList","parameters":[],"src":"2526:0:25"},"scope":7436,"src":"2455:296:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7261,"nodeType":"Block","src":"2824:113:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7254,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2843:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2847:6:25","memberName":"sender","nodeType":"MemberAccess","src":"2843:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7256,"name":"ccipRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7063,"src":"2857:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2843:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792043434950526f75746572","id":7258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2869:17:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_d8dc70e524995adb65000818b14e79969a346971ba3f7168cde2ef6ebc093ee6","typeString":"literal_string \"Only CCIPRouter\""},"value":"Only CCIPRouter"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d8dc70e524995adb65000818b14e79969a346971ba3f7168cde2ef6ebc093ee6","typeString":"literal_string \"Only CCIPRouter\""}],"id":7253,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2835:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2835:52:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7260,"nodeType":"ExpressionStatement","src":"2835:52:25"}]},"functionSelector":"e86490e2","id":7262,"implemented":true,"kind":"function","modifiers":[],"name":"receiveCrossChainMessage","nameLocation":"2768:24:25","nodeType":"FunctionDefinition","parameters":{"id":7251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7250,"mutability":"mutable","name":"data","nameLocation":"2809:4:25","nodeType":"VariableDeclaration","scope":7262,"src":"2793:20:25","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":7249,"name":"string","nodeType":"ElementaryTypeName","src":"2793:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2792:22:25"},"returnParameters":{"id":7252,"nodeType":"ParameterList","parameters":[],"src":"2824:0:25"},"scope":7436,"src":"2759:178:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7269,"nodeType":"Block","src":"3030:76:25","statements":[{"expression":{"hexValue":"74727565","id":7267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3048:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":7266,"id":7268,"nodeType":"Return","src":"3041:11:25"}]},"functionSelector":"1753bbd7","id":7270,"implemented":true,"kind":"function","modifiers":[],"name":"checkHealth","nameLocation":"2987:11:25","nodeType":"FunctionDefinition","parameters":{"id":7263,"nodeType":"ParameterList","parameters":[],"src":"2998:2:25"},"returnParameters":{"id":7266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7265,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7270,"src":"3024:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7264,"name":"bool","nodeType":"ElementaryTypeName","src":"3024:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3023:6:25"},"scope":7436,"src":"2978:128:25","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7283,"nodeType":"Block","src":"3169:88:25","statements":[{"assignments":[null,7276,null,null,null],"declarations":[null,{"constant":false,"id":7276,"mutability":"mutable","name":"price","nameLocation":"3187:5:25","nodeType":"VariableDeclaration","scope":7283,"src":"3183:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7275,"name":"int","nodeType":"ElementaryTypeName","src":"3183:3:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},null,null,null],"id":7280,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":7277,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7058,"src":"3199:9:25","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$113","typeString":"contract AggregatorV3Interface"}},"id":7278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3209:15:25","memberName":"latestRoundData","nodeType":"MemberAccess","referencedDeclaration":112,"src":"3199:25:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"function () view external returns (uint80,int256,uint256,uint256,uint80)"}},"id":7279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3199:27:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"tuple(uint80,int256,uint256,uint256,uint80)"}},"nodeType":"VariableDeclarationStatement","src":"3180:46:25"},{"expression":{"id":7281,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7276,"src":"3244:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7274,"id":7282,"nodeType":"Return","src":"3237:12:25"}]},"functionSelector":"777e0d86","id":7284,"implemented":true,"kind":"function","modifiers":[],"name":"getLatestETHPrice","nameLocation":"3123:17:25","nodeType":"FunctionDefinition","parameters":{"id":7271,"nodeType":"ParameterList","parameters":[],"src":"3140:2:25"},"returnParameters":{"id":7274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7273,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7284,"src":"3164:3:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7272,"name":"int","nodeType":"ElementaryTypeName","src":"3164:3:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"3163:5:25"},"scope":7436,"src":"3114:143:25","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[60],"body":{"id":7330,"nodeType":"Block","src":"3420:221:25","statements":[{"body":{"id":7324,"nodeType":"Block","src":"3468:137:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3487:16:25","subExpression":{"expression":{"baseExpression":{"id":7304,"name":"loans","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7093,"src":"3488:5:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Loan_$7088_storage_$","typeString":"mapping(uint256 => struct VaultCore.Loan storage ref)"}},"id":7306,"indexExpression":{"id":7305,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7295,"src":"3494:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3488:8:25","typeDescriptions":{"typeIdentifier":"t_struct$_Loan_$7088_storage","typeString":"struct VaultCore.Loan storage ref"}},"id":7307,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3497:6:25","memberName":"repaid","nodeType":"MemberAccess","referencedDeclaration":7085,"src":"3488:15:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"baseExpression":{"id":7310,"name":"loans","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7093,"src":"3520:5:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Loan_$7088_storage_$","typeString":"mapping(uint256 => struct VaultCore.Loan storage ref)"}},"id":7312,"indexExpression":{"id":7311,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7295,"src":"3526:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3520:8:25","typeDescriptions":{"typeIdentifier":"t_struct$_Loan_$7088_storage","typeString":"struct VaultCore.Loan storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Loan_$7088_storage","typeString":"struct VaultCore.Loan storage ref"}],"id":7309,"name":"_isUnhealthy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7366,"src":"3507:12:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Loan_$7088_memory_ptr_$returns$_t_bool_$","typeString":"function (struct VaultCore.Loan memory) view returns (bool)"}},"id":7313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3507:22:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3487:42:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7323,"nodeType":"IfStatement","src":"3483:111:25","trueBody":{"id":7322,"nodeType":"Block","src":"3531:63:25","statements":[{"expression":{"components":[{"hexValue":"74727565","id":7315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3558:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"arguments":[{"id":7318,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7295,"src":"3575:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7316,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3564:3:25","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3568:6:25","memberName":"encode","nodeType":"MemberAccess","src":"3564:10:25","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3564:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":7320,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3557:21:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":7293,"id":7321,"nodeType":"Return","src":"3550:28:25"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7298,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7295,"src":"3451:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7299,"name":"loanId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7095,"src":"3455:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3451:10:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7325,"initializationExpression":{"assignments":[7295],"declarations":[{"constant":false,"id":7295,"mutability":"mutable","name":"i","nameLocation":"3444:1:25","nodeType":"VariableDeclaration","scope":7325,"src":"3436:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7294,"name":"uint256","nodeType":"ElementaryTypeName","src":"3436:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7297,"initialValue":{"hexValue":"30","id":7296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3448:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3436:13:25"},"loopExpression":{"expression":{"id":7302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3463:3:25","subExpression":{"id":7301,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7295,"src":"3463:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7303,"nodeType":"ExpressionStatement","src":"3463:3:25"},"nodeType":"ForStatement","src":"3431:174:25"},{"expression":{"components":[{"hexValue":"66616c7365","id":7326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3623:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"","id":7327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3630:2:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"id":7328,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3622:11:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_$","typeString":"tuple(bool,literal_string \"\")"}},"functionReturnParameters":7293,"id":7329,"nodeType":"Return","src":"3615:18:25"}]},"functionSelector":"6e04ff0d","id":7331,"implemented":true,"kind":"function","modifiers":[],"name":"checkUpkeep","nameLocation":"3315:11:25","nodeType":"FunctionDefinition","overrides":{"id":7288,"nodeType":"OverrideSpecifier","overrides":[],"src":"3357:8:25"},"parameters":{"id":7287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7286,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7331,"src":"3327:14:25","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":7285,"name":"bytes","nodeType":"ElementaryTypeName","src":"3327:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3326:16:25"},"returnParameters":{"id":7293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7290,"mutability":"mutable","name":"upkeepNeeded","nameLocation":"3380:12:25","nodeType":"VariableDeclaration","scope":7331,"src":"3375:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7289,"name":"bool","nodeType":"ElementaryTypeName","src":"3375:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7292,"mutability":"mutable","name":"performData","nameLocation":"3407:11:25","nodeType":"VariableDeclaration","scope":7331,"src":"3394:24:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7291,"name":"bytes","nodeType":"ElementaryTypeName","src":"3394:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3374:45:25"},"scope":7436,"src":"3306:335:25","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[66],"body":{"id":7351,"nodeType":"Block","src":"3718:108:25","statements":[{"assignments":[7338],"declarations":[{"constant":false,"id":7338,"mutability":"mutable","name":"badLoanId","nameLocation":"3737:9:25","nodeType":"VariableDeclaration","scope":7351,"src":"3729:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7337,"name":"uint256","nodeType":"ElementaryTypeName","src":"3729:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7346,"initialValue":{"arguments":[{"id":7341,"name":"performData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7333,"src":"3760:11:25","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"components":[{"id":7343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3774:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7342,"name":"uint256","nodeType":"ElementaryTypeName","src":"3774:7:25","typeDescriptions":{}}}],"id":7344,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3773:9:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"expression":{"id":7339,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3749:3:25","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3753:6:25","memberName":"decode","nodeType":"MemberAccess","src":"3749:10:25","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":7345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3749:34:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3729:54:25"},{"expression":{"arguments":[{"id":7348,"name":"badLoanId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7338,"src":"3808:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7347,"name":"liquidateLoan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7392,"src":"3794:13:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":7349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3794:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7350,"nodeType":"ExpressionStatement","src":"3794:24:25"}]},"functionSelector":"4585e33b","id":7352,"implemented":true,"kind":"function","modifiers":[],"name":"performUpkeep","nameLocation":"3658:13:25","nodeType":"FunctionDefinition","overrides":{"id":7335,"nodeType":"OverrideSpecifier","overrides":[],"src":"3709:8:25"},"parameters":{"id":7334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7333,"mutability":"mutable","name":"performData","nameLocation":"3687:11:25","nodeType":"VariableDeclaration","scope":7352,"src":"3672:26:25","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":7332,"name":"bytes","nodeType":"ElementaryTypeName","src":"3672:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3671:28:25"},"returnParameters":{"id":7336,"nodeType":"ParameterList","parameters":[],"src":"3718:0:25"},"scope":7436,"src":"3649:177:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7365,"nodeType":"Block","src":"3903:47:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7360,"name":"loan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7355,"src":"3921:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Loan_$7088_memory_ptr","typeString":"struct VaultCore.Loan memory"}},"id":7361,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3926:6:25","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":7083,"src":"3921:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":7362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3935:7:25","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1"},"src":"3921:21:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7359,"id":7364,"nodeType":"Return","src":"3914:28:25"}]},"id":7366,"implemented":true,"kind":"function","modifiers":[],"name":"_isUnhealthy","nameLocation":"3843:12:25","nodeType":"FunctionDefinition","parameters":{"id":7356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7355,"mutability":"mutable","name":"loan","nameLocation":"3868:4:25","nodeType":"VariableDeclaration","scope":7366,"src":"3856:16:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Loan_$7088_memory_ptr","typeString":"struct VaultCore.Loan"},"typeName":{"id":7354,"nodeType":"UserDefinedTypeName","pathNode":{"id":7353,"name":"Loan","nameLocations":["3856:4:25"],"nodeType":"IdentifierPath","referencedDeclaration":7088,"src":"3856:4:25"},"referencedDeclaration":7088,"src":"3856:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_Loan_$7088_storage_ptr","typeString":"struct VaultCore.Loan"}},"visibility":"internal"}],"src":"3855:18:25"},"returnParameters":{"id":7359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7358,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7366,"src":"3897:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7357,"name":"bool","nodeType":"ElementaryTypeName","src":"3897:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3896:6:25"},"scope":7436,"src":"3834:116:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7391,"nodeType":"Block","src":"4005:146:25","statements":[{"expression":{"arguments":[{"id":7376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4024:22:25","subExpression":{"expression":{"baseExpression":{"id":7372,"name":"loans","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7093,"src":"4025:5:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Loan_$7088_storage_$","typeString":"mapping(uint256 => struct VaultCore.Loan storage ref)"}},"id":7374,"indexExpression":{"id":7373,"name":"_loanId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7368,"src":"4031:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4025:14:25","typeDescriptions":{"typeIdentifier":"t_struct$_Loan_$7088_storage","typeString":"struct VaultCore.Loan storage ref"}},"id":7375,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4040:6:25","memberName":"repaid","nodeType":"MemberAccess","referencedDeclaration":7085,"src":"4025:21:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c726561647920726570616964","id":7377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4048:16:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5ece5ace778fd61eeacf62354aa9f048d40c4d9fb74a45da09354f6d9859b46","typeString":"literal_string \"Already repaid\""},"value":"Already repaid"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b5ece5ace778fd61eeacf62354aa9f048d40c4d9fb74a45da09354f6d9859b46","typeString":"literal_string \"Already repaid\""}],"id":7371,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4016:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4016:49:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7379,"nodeType":"ExpressionStatement","src":"4016:49:25"},{"expression":{"id":7385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":7380,"name":"loans","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7093,"src":"4076:5:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Loan_$7088_storage_$","typeString":"mapping(uint256 => struct VaultCore.Loan storage ref)"}},"id":7382,"indexExpression":{"id":7381,"name":"_loanId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7368,"src":"4082:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4076:14:25","typeDescriptions":{"typeIdentifier":"t_struct$_Loan_$7088_storage","typeString":"struct VaultCore.Loan storage ref"}},"id":7383,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4091:6:25","memberName":"repaid","nodeType":"MemberAccess","referencedDeclaration":7085,"src":"4076:21:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4100:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4076:28:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7386,"nodeType":"ExpressionStatement","src":"4076:28:25"},{"eventCall":{"arguments":[{"id":7388,"name":"_loanId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7368,"src":"4135:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7387,"name":"LoanLiquidated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7109,"src":"4120:14:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":7389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4120:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7390,"nodeType":"EmitStatement","src":"4115:28:25"}]},"functionSelector":"ccdd9f5d","id":7392,"implemented":true,"kind":"function","modifiers":[],"name":"liquidateLoan","nameLocation":"3967:13:25","nodeType":"FunctionDefinition","parameters":{"id":7369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7368,"mutability":"mutable","name":"_loanId","nameLocation":"3989:7:25","nodeType":"VariableDeclaration","scope":7392,"src":"3981:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7367,"name":"uint256","nodeType":"ElementaryTypeName","src":"3981:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3980:17:25"},"returnParameters":{"id":7370,"nodeType":"ParameterList","parameters":[],"src":"4005:0:25"},"scope":7436,"src":"3958:193:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7412,"nodeType":"Block","src":"4232:248:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7396,"name":"loanId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7095,"src":"4251:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4260:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4251:10:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f206c6f616e73206578697374","id":7399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4263:16:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_be8e7ee5a75ce3580b3501c720c961ee27e48f0f306b9d3dc09407368147858b","typeString":"literal_string \"No loans exist\""},"value":"No loans exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_be8e7ee5a75ce3580b3501c720c961ee27e48f0f306b9d3dc09407368147858b","typeString":"literal_string \"No loans exist\""}],"id":7395,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4243:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4243:37:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7401,"nodeType":"ExpressionStatement","src":"4243:37:25"},{"expression":{"arguments":[{"id":7405,"name":"keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7068,"src":"4336:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7406,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7070,"src":"4358:14:25","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":7407,"name":"requestConfirmations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7076,"src":"4387:20:25","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":7408,"name":"callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7073,"src":"4422:16:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":7409,"name":"numWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7079,"src":"4453:8:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":7402,"name":"COORDINATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7066,"src":"4291:11:25","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$267","typeString":"contract VRFCoordinatorV2Interface"}},"id":7404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4303:18:25","memberName":"requestRandomWords","nodeType":"MemberAccess","referencedDeclaration":200,"src":"4291:30:25","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_uint64_$_t_uint16_$_t_uint32_$_t_uint32_$returns$_t_uint256_$","typeString":"function (bytes32,uint64,uint16,uint32,uint32) external returns (uint256)"}},"id":7410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4291:181:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7411,"nodeType":"ExpressionStatement","src":"4291:181:25"}]},"functionSelector":"2bdf0038","id":7413,"implemented":true,"kind":"function","modifiers":[],"name":"requestAudit","nameLocation":"4208:12:25","nodeType":"FunctionDefinition","parameters":{"id":7393,"nodeType":"ParameterList","parameters":[],"src":"4220:2:25"},"returnParameters":{"id":7394,"nodeType":"ParameterList","parameters":[],"src":"4232:0:25"},"scope":7436,"src":"4199:281:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[144],"body":{"id":7434,"nodeType":"Block","src":"4573:153:25","statements":[{"assignments":[7423],"declarations":[{"constant":false,"id":7423,"mutability":"mutable","name":"selected","nameLocation":"4592:8:25","nodeType":"VariableDeclaration","scope":7434,"src":"4584:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7422,"name":"uint256","nodeType":"ElementaryTypeName","src":"4584:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7429,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7424,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7418,"src":"4603:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":7426,"indexExpression":{"hexValue":"30","id":7425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4615:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4603:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":7427,"name":"loanId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7095,"src":"4620:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4603:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4584:42:25"},{"eventCall":{"arguments":[{"id":7431,"name":"selected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7423,"src":"4661:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7430,"name":"RandomLoanSelected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7121,"src":"4642:18:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":7432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4642:28:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7433,"nodeType":"EmitStatement","src":"4637:33:25"}]},"id":7435,"implemented":true,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"4497:18:25","nodeType":"FunctionDefinition","overrides":{"id":7420,"nodeType":"OverrideSpecifier","overrides":[],"src":"4564:8:25"},"parameters":{"id":7419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7415,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7435,"src":"4516:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7414,"name":"uint256","nodeType":"ElementaryTypeName","src":"4516:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7418,"mutability":"mutable","name":"randomWords","nameLocation":"4542:11:25","nodeType":"VariableDeclaration","scope":7435,"src":"4525:28:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7416,"name":"uint256","nodeType":"ElementaryTypeName","src":"4525:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7417,"nodeType":"ArrayTypeName","src":"4525:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"4515:39:25"},"returnParameters":{"id":7421,"nodeType":"ParameterList","parameters":[],"src":"4573:0:25"},"scope":7436,"src":"4488:238:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":7437,"src":"574:4155:25","usedErrors":[122],"usedEvents":[7105,7109,7117,7121]}],"src":"33:4698:25"},"id":25}},"contracts":{"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol":{"AutomationBase":{"abi":[{"inputs":[],"name":"OnlySimulatedBackend","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212203d07de7cfcf3a977465b579ac548f61afbc671bc2f47164d23745ec152f7cfee64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE SMOD 0xDE PUSH29 0xFCF3A977465B579AC548F61AFBC671BC2F47164D23745EC152F7CFEE64 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"57:634:0:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea26469706673582212203d07de7cfcf3a977465b579ac548f61afbc671bc2f47164d23745ec152f7cfee64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE SMOD 0xDE PUSH29 0xFCF3A977465B579AC548F61AFBC671BC2F47164D23745EC152F7CFEE64 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"57:634:0:-:0;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"OnlySimulatedBackend\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":\"AutomationBase\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":{\"keccak256\":\"0x8c97744adc25cf30d1a2509bff6c0ddc9b36feb75f8e38c85d5c62b8ec773159\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c53c8736dacbf8c517c63937d556c3e4873a62f509c5d84b89e32fc5c9c6c2c\",\"dweb:/ipfs/QmeR6RSce5dTDcPgbwBnG7E8U89716bqsUcv1NeWnX5RJf\"]}},\"version\":1}"}},"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol":{"AutomationCompatible":{"abi":[{"inputs":[],"name":"OnlySimulatedBackend","type":"error"},{"inputs":[{"internalType":"bytes","name":"checkData","type":"bytes"}],"name":"checkUpkeep","outputs":[{"internalType":"bool","name":"upkeepNeeded","type":"bool"},{"internalType":"bytes","name":"performData","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"performData","type":"bytes"}],"name":"performUpkeep","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"checkUpkeep(bytes)":"6e04ff0d","performUpkeep(bytes)":"4585e33b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"OnlySimulatedBackend\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.\",\"params\":{\"checkData\":\"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract.\"},\"returns\":{\"performData\":\"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.\",\"upkeepNeeded\":\"boolean to indicate whether the keeper should call performUpkeep or not.\"}},\"performUpkeep(bytes)\":{\"details\":\"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.\",\"params\":{\"performData\":\"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkUpkeep(bytes)\":{\"notice\":\"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas.\"},\"performUpkeep(bytes)\":{\"notice\":\"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\":\"AutomationCompatible\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":{\"keccak256\":\"0x8c97744adc25cf30d1a2509bff6c0ddc9b36feb75f8e38c85d5c62b8ec773159\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c53c8736dacbf8c517c63937d556c3e4873a62f509c5d84b89e32fc5c9c6c2c\",\"dweb:/ipfs/QmeR6RSce5dTDcPgbwBnG7E8U89716bqsUcv1NeWnX5RJf\"]},\"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\":{\"keccak256\":\"0xce623f3e7fa4addf240032d2817b2b489ac08e79fae14a5cc5850ed3f1acddf8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0546b2739f3989b897c5cb591d01211e2db22e1a8578f68117f1a8a692abd85c\",\"dweb:/ipfs/QmW6guw8uUk2Dq49PWdjeZeEvnDDRg3CVX2BVcVNcT6QNL\"]},\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0xf504b227c442cd4ed31b336b7bd15cfcb23220c84c26e750975c7e7d959125aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34e35eb46dfadf12396e92dd970547209dfd99f0ae5b1ec7b5a3e81617f620a1\",\"dweb:/ipfs/Qmanoi2CDi9MwkP44HosagvewfMEvCMN1YthGRmCexVjwY\"]}},\"version\":1}"}},"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol":{"AutomationCompatibleInterface":{"abi":[{"inputs":[{"internalType":"bytes","name":"checkData","type":"bytes"}],"name":"checkUpkeep","outputs":[{"internalType":"bool","name":"upkeepNeeded","type":"bool"},{"internalType":"bytes","name":"performData","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"performData","type":"bytes"}],"name":"performUpkeep","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"checkUpkeep(bytes)":"6e04ff0d","performUpkeep(bytes)":"4585e33b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.\",\"params\":{\"checkData\":\"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract.\"},\"returns\":{\"performData\":\"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.\",\"upkeepNeeded\":\"boolean to indicate whether the keeper should call performUpkeep or not.\"}},\"performUpkeep(bytes)\":{\"details\":\"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.\",\"params\":{\"performData\":\"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkUpkeep(bytes)\":{\"notice\":\"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas.\"},\"performUpkeep(bytes)\":{\"notice\":\"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":\"AutomationCompatibleInterface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0xf504b227c442cd4ed31b336b7bd15cfcb23220c84c26e750975c7e7d959125aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34e35eb46dfadf12396e92dd970547209dfd99f0ae5b1ec7b5a3e81617f620a1\",\"dweb:/ipfs/Qmanoi2CDi9MwkP44HosagvewfMEvCMN1YthGRmCexVjwY\"]}},\"version\":1}"}},"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol":{"AggregatorV3Interface":{"abi":[{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"description","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint80","name":"_roundId","type":"uint80"}],"name":"getRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"decimals()":"313ce567","description()":"7284e416","getRoundData(uint80)":"9a6fc8f5","latestRoundData()":"feaf968c","version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d39e11b1dc7b9b8ccdabbc9be442ab7cda4a81c748f57e316dcb1bcb4a28bf9\",\"dweb:/ipfs/QmaG6vz6W6iEUBsbHSBob5mdcitYxWjoygxREHpsJHfWrS\"]}},\"version\":1}"}},"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol":{"VRFConsumerBaseV2":{"abi":[{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"rawFulfillRandomWords(uint256,uint256[])":"1fe543e3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinator2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords),see (VRFCoordinatorInterface for a description of the arguments).Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_vrfCoordinator\":\"address of VRFCoordinator contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":\"VRFConsumerBaseV2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":{\"keccak256\":\"0x5a502a5ce16796565815b295bb2d18a0d26d6f23621f733918c971047c6091d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f03385e076f6c2ad534bffe7c655cf259242e0f133f0ebfd56f914c0dde4a3f4\",\"dweb:/ipfs/QmWkQVSoAoRu1LXQTfDeic9QESjQkjT4G5Kt1VptTaxQDP\"]}},\"version\":1}"}},"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol":{"VRFCoordinatorV2Interface":{"abi":[{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"acceptSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"addConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"to","type":"address"}],"name":"cancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"createSubscription","outputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getRequestConfig","outputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint32","name":"","type":"uint32"},{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"getSubscription","outputs":[{"internalType":"uint96","name":"balance","type":"uint96"},{"internalType":"uint64","name":"reqCount","type":"uint64"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address[]","name":"consumers","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"pendingRequestExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"removeConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"keyHash","type":"bytes32"},{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"uint16","name":"minimumRequestConfirmations","type":"uint16"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"uint32","name":"numWords","type":"uint32"}],"name":"requestRandomWords","outputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"newOwner","type":"address"}],"name":"requestSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"acceptSubscriptionOwnerTransfer(uint64)":"82359740","addConsumer(uint64,address)":"7341c10c","cancelSubscription(uint64,address)":"d7ae1d30","createSubscription()":"a21a23e4","getRequestConfig()":"00012291","getSubscription(uint64)":"a47c7696","pendingRequestExists(uint64)":"e82ad7d4","removeConsumer(uint64,address)":"9f87fad7","requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":"5d3b1d30","requestSubscriptionOwnerTransfer(uint64,address)":"04c357cb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequestConfig\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"pendingRequestExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"}],\"name\":\"requestRandomWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"details\":\"will revert if original owner of subId has not requested that msg.sender become the new owner.\",\"params\":{\"subId\":\"- ID of the subscription\"}},\"addConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- New consumer which can use the subscription\",\"subId\":\"- ID of the subscription\"}},\"cancelSubscription(uint64,address)\":{\"params\":{\"subId\":\"- ID of the subscription\",\"to\":\"- Where to send the remaining LINK to\"}},\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));\",\"returns\":{\"subId\":\"- A unique subscription id.\"}},\"getRequestConfig()\":{\"returns\":{\"_0\":\"minimumRequestConfirmations global min for request confirmations\",\"_1\":\"maxGasLimit global max for request gas limit\",\"_2\":\"s_provingKeyHashes list of registered key hashes\"}},\"getSubscription(uint64)\":{\"params\":{\"subId\":\"- ID of the subscription\"},\"returns\":{\"balance\":\"- LINK balance of the subscription in juels.\",\"consumers\":\"- list of consumer address which are able to use this subscription.\",\"owner\":\"- owner of the subscription.\",\"reqCount\":\"- number of requests for this subscription, determines fee tier.\"}},\"removeConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- Consumer to remove from the subscription\",\"subId\":\"- ID of the subscription\"}},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"params\":{\"callbackGasLimit\":\"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]\",\"keyHash\":\"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.\",\"minimumRequestConfirmations\":\"- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].\",\"numWords\":\"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.\",\"subId\":\"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash.\"},\"returns\":{\"requestId\":\"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords.\"}},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"params\":{\"newOwner\":\"- proposed new owner of the subscription\",\"subId\":\"- ID of the subscription\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"notice\":\"Request subscription owner transfer.\"},\"addConsumer(uint64,address)\":{\"notice\":\"Add a consumer to a VRF subscription.\"},\"cancelSubscription(uint64,address)\":{\"notice\":\"Cancel a subscription\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"getRequestConfig()\":{\"notice\":\"Get configuration relevant for making requests\"},\"getSubscription(uint64)\":{\"notice\":\"Get a VRF subscription.\"},\"removeConsumer(uint64,address)\":{\"notice\":\"Remove a consumer from a VRF subscription.\"},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"notice\":\"Request a set of random words.\"},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"notice\":\"Request subscription owner transfer.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol\":\"VRFCoordinatorV2Interface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol\":{\"keccak256\":\"0x619d9d975540d65ef8d6332a67cbd0dda5b0f95b120b8da56695ed50c2f9fc30\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d13e94e2c3a7e72241c0f10684274b9509d005bc50b247a8a2442b0c12760bc1\",\"dweb:/ipfs/QmXxTc8ngzwFX9RbSe9Fuso8sSScHDUBfgyTvBcgstJiKt\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xddab643169f47a2c5291afafcbfdca045d9e6835553307d090bc048b6dabd0ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0ffbacfee42977167b3c75bd4787f8b72a7ab1176abd544f3dff662c6528e24\",\"dweb:/ipfs/QmUprM1cWCyaQ3LDjHA2DhwiPs3wekQ6MWXHFZdMMxpcyX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC-721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ERC721Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209efd8f35d190e6a3d8c9ee6c5dc31515460653c9b34ccb70cbb94a7bdf6c672064736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 REVERT DUP16 CALLDATALOAD 0xD1 SWAP1 0xE6 LOG3 0xD8 0xC9 0xEE PUSH13 0x5DC31515460653C9B34CCB70CB 0xB9 0x4A PUSH28 0xDF6C672064736F6C6343000814003300000000000000000000000000 ","sourceMap":"431:1488:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209efd8f35d190e6a3d8c9ee6c5dc31515460653c9b34ccb70cbb94a7bdf6c672064736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 REVERT DUP16 CALLDATALOAD 0xD1 SWAP1 0xE6 LOG3 0xD8 0xC9 0xEE PUSH13 0x5DC31515460653C9B34CCB70CB 0xB9 0x4A PUSH28 0xDF6C672064736F6C6343000814003300000000000000000000000000 ","sourceMap":"431:1488:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-721 utility functions. See https://eips.ethereum.org/EIPS/eip-721[ERC-721]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":\"ERC721Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xddab643169f47a2c5291afafcbfdca045d9e6835553307d090bc048b6dabd0ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0ffbacfee42977167b3c75bd4787f8b72a7ab1176abd544f3dff662c6528e24\",\"dweb:/ipfs/QmUprM1cWCyaQ3LDjHA2DhwiPs3wekQ6MWXHFZdMMxpcyX\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202672d2a23e458693f6ba1440f70db5954b011cca38f915e3138b6836c3d4ea7464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 PUSH19 0xD2A23E458693F6BA1440F70DB5954B011CCA38 0xF9 ISZERO 0xE3 SGT DUP12 PUSH9 0x36C3D4EA7464736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"657:1315:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202672d2a23e458693f6ba1440f70db5954b011cca38f915e3138b6836c3d4ea7464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 PUSH19 0xD2A23E458693F6BA1440F70DB5954B011CCA38 0xF9 ISZERO 0xE3 SGT DUP12 PUSH9 0x36C3D4EA7464736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"657:1315:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bb1c62e0c3e7a6559983a340dc7c49df2af9528361710304691b76111e32808164736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB SHR PUSH3 0xE0C3E7 0xA6 SSTORE SWAP10 DUP4 LOG3 BLOCKHASH 0xDC PUSH29 0x49DF2AF9528361710304691B76111E32808164736F6C63430008140033 ","sourceMap":"297:18980:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bb1c62e0c3e7a6559983a340dc7c49df2af9528361710304691b76111e32808164736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB SHR PUSH3 0xE0C3E7 0xA6 SSTORE SWAP10 DUP4 LOG3 BLOCKHASH 0xDC PUSH29 0x49DF2AF9528361710304691B76111E32808164736F6C63430008140033 ","sourceMap":"297:18980:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220edaafa2b4bf2e693fe8ad63e033022e5f66b1ea153282004d8fbf7c3431f804e64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED 0xAA STATICCALL 0x2B 0x4B CALLCODE 0xE6 SWAP4 INVALID DUP11 0xD6 RETURNDATACOPY SUB ADDRESS 0x22 0xE5 0xF6 PUSH12 0x1EA153282004D8FBF7C3431F DUP1 0x4E PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:31863:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220edaafa2b4bf2e693fe8ad63e033022e5f66b1ea153282004d8fbf7c3431f804e64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED 0xAA STATICCALL 0x2B 0x4B CALLCODE 0xE6 SWAP4 INVALID DUP11 0xD6 RETURNDATACOPY SUB ADDRESS 0x22 0xE5 0xF6 PUSH12 0x1EA153282004D8FBF7C3431F DUP1 0x4E PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:31863:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220316339f60b3fd1858de7f836dab11b96a56ba64a0fc65a8a88172d93a655ae7464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE PUSH4 0x39F60B3F 0xD1 DUP6 DUP14 0xE7 0xF8 CALLDATASIZE 0xDA 0xB1 SHL SWAP7 0xA5 PUSH12 0xA64A0FC65A8A88172D93A655 0xAE PUSH21 0x64736F6C6343000814003300000000000000000000 ","sourceMap":"769:34173:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220316339f60b3fd1858de7f836dab11b96a56ba64a0fc65a8a88172d93a655ae7464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE PUSH4 0x39F60B3F 0xD1 DUP6 DUP14 0xE7 0xF8 CALLDATASIZE 0xDA 0xB1 SHL SWAP7 0xA5 PUSH12 0xA64A0FC65A8A88172D93A655 0xAE PUSH21 0x64736F6C6343000814003300000000000000000000 ","sourceMap":"769:34173:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220473cbf930ed596e4ec76a1dda41503ab8a3aef35c98db76f2bcec0ef4066bcb664736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE EXTCODECOPY 0xBF SWAP4 0xE 0xD5 SWAP7 0xE4 0xEC PUSH23 0xA1DDA41503AB8A3AEF35C98DB76F2BCEC0EF4066BCB664 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"258:2354:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220473cbf930ed596e4ec76a1dda41503ab8a3aef35c98db76f2bcec0ef4066bcb664736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE EXTCODECOPY 0xBF SWAP4 0xE 0xD5 SWAP7 0xE4 0xEC PUSH23 0xA1DDA41503AB8A3AEF35C98DB76F2BCEC0EF4066BCB664 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"258:2354:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/AIRiskManager.sol":{"AIRiskManager":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"enum AIRiskManager.RiskTier","name":"tier","type":"uint8"}],"name":"RiskScored","type":"event"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getRiskScore","outputs":[{"internalType":"enum AIRiskManager.RiskTier","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"riskScores","outputs":[{"internalType":"enum AIRiskManager.RiskTier","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint8","name":"score","type":"uint8"}],"name":"setRiskScore","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b506104c2806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806305ddd11a146100465780635e5b875214610062578063dc08706d14610092575b600080fd5b610060600480360381019061005b9190610310565b6100c2565b005b61007c60048036038101906100779190610350565b6101ff565b60405161008991906103f4565b60405180910390f35b6100ac60048036038101906100a79190610350565b61021f565b6040516100b991906103f4565b60405180910390f35b6003808111156100d5576100d461037d565b5b60ff168160ff16111561011d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101149061046c565b60405180910390fd5b8060ff1660038111156101335761013261037d565b5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360038111156101935761019261037d565b5b02179055508173ffffffffffffffffffffffffffffffffffffffff167f248517b40f7b91692e1a4d22251b5d93cb2813773fbdfed259f89cad4c0460578260ff1660038111156101e6576101e561037d565b5b6040516101f391906103f4565b60405180910390a25050565b60006020528060005260406000206000915054906101000a900460ff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102a482610279565b9050919050565b6102b481610299565b81146102bf57600080fd5b50565b6000813590506102d1816102ab565b92915050565b600060ff82169050919050565b6102ed816102d7565b81146102f857600080fd5b50565b60008135905061030a816102e4565b92915050565b6000806040838503121561032757610326610274565b5b6000610335858286016102c2565b9250506020610346858286016102fb565b9150509250929050565b60006020828403121561036657610365610274565b5b6000610374848285016102c2565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600481106103bd576103bc61037d565b5b50565b60008190506103ce826103ac565b919050565b60006103de826103c0565b9050919050565b6103ee816103d3565b82525050565b600060208201905061040960008301846103e5565b92915050565b600082825260208201905092915050565b7f496e76616c69642073636f726500000000000000000000000000000000000000600082015250565b6000610456600d8361040f565b915061046182610420565b602082019050919050565b6000602082019050818103600083015261048581610449565b905091905056fea2646970667358221220626f20df2ab9f5cb9723afdd91df0e780751156c609a56655b22d45285cec08d64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C2 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5DDD11A EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x5E5B8752 EQ PUSH2 0x62 JUMPI DUP1 PUSH4 0xDC08706D EQ PUSH2 0x92 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x310 JUMP JUMPDEST PUSH2 0xC2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x77 SWAP2 SWAP1 PUSH2 0x350 JUMP JUMPDEST PUSH2 0x1FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x89 SWAP2 SWAP1 PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA7 SWAP2 SWAP1 PUSH2 0x350 JUMP JUMPDEST PUSH2 0x21F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB9 SWAP2 SWAP1 PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0xD5 JUMPI PUSH2 0xD4 PUSH2 0x37D JUMP JUMPDEST JUMPDEST PUSH1 0xFF AND DUP2 PUSH1 0xFF AND GT ISZERO PUSH2 0x11D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x114 SWAP1 PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x133 JUMPI PUSH2 0x132 PUSH2 0x37D JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x193 JUMPI PUSH2 0x192 PUSH2 0x37D JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x248517B40F7B91692E1A4D22251B5D93CB2813773FBDFED259F89CAD4C046057 DUP3 PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1E6 JUMPI PUSH2 0x1E5 PUSH2 0x37D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A4 DUP3 PUSH2 0x279 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B4 DUP2 PUSH2 0x299 JUMP JUMPDEST DUP2 EQ PUSH2 0x2BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2D1 DUP2 PUSH2 0x2AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2ED DUP2 PUSH2 0x2D7 JUMP JUMPDEST DUP2 EQ PUSH2 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x30A DUP2 PUSH2 0x2E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x327 JUMPI PUSH2 0x326 PUSH2 0x274 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x335 DUP6 DUP3 DUP7 ADD PUSH2 0x2C2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x346 DUP6 DUP3 DUP7 ADD PUSH2 0x2FB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x366 JUMPI PUSH2 0x365 PUSH2 0x274 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x374 DUP5 DUP3 DUP6 ADD PUSH2 0x2C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x3BD JUMPI PUSH2 0x3BC PUSH2 0x37D JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x3CE DUP3 PUSH2 0x3AC JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DE DUP3 PUSH2 0x3C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3EE DUP2 PUSH2 0x3D3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x409 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C69642073636F726500000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x456 PUSH1 0xD DUP4 PUSH2 0x40F JUMP JUMPDEST SWAP2 POP PUSH2 0x461 DUP3 PUSH2 0x420 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x485 DUP2 PUSH2 0x449 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH3 0x6F20DF 0x2A 0xB9 CREATE2 0xCB SWAP8 0x23 0xAF 0xDD SWAP2 0xDF 0xE PUSH25 0x751156C609A56655B22D45285CEC08D64736F6C6343000814 STOP CALLER ","sourceMap":"61:585:21:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@getRiskScore_6865":{"entryPoint":543,"id":6865,"parameterSlots":1,"returnSlots":1},"@riskScores_6811":{"entryPoint":511,"id":6811,"parameterSlots":0,"returnSlots":0},"@setRiskScore_6852":{"entryPoint":194,"id":6852,"parameterSlots":2,"returnSlots":0},"abi_decode_t_address":{"entryPoint":706,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8":{"entryPoint":763,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":848,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint8":{"entryPoint":784,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_enum$_RiskTier_$6806_to_t_uint8_fromStack":{"entryPoint":997,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_135933132c24f113e2558fd53a3dbb73e17cbef49f2d76fe110cf8eb758e8262_to_t_string_memory_ptr_fromStack":{"entryPoint":1097,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_enum$_RiskTier_$6806__to_t_uint8__fromStack_reversed":{"entryPoint":1012,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_135933132c24f113e2558fd53a3dbb73e17cbef49f2d76fe110cf8eb758e8262__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1132,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1039,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":665,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_enum$_RiskTier_$6806":{"entryPoint":960,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":633,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":727,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_enum$_RiskTier_$6806_to_t_uint8":{"entryPoint":979,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x21":{"entryPoint":893,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":628,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_135933132c24f113e2558fd53a3dbb73e17cbef49f2d76fe110cf8eb758e8262":{"entryPoint":1056,"id":null,"parameterSlots":1,"returnSlots":0},"validator_assert_t_enum$_RiskTier_$6806":{"entryPoint":940,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":683,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":740,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4152:26","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:26","statements":[{"nodeType":"YulAssignment","src":"57:19:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:26"},"nodeType":"YulFunctionCall","src":"67:9:26"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:26"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:26","type":""}],"src":"7:75:26"},{"body":{"nodeType":"YulBlock","src":"177:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:26"},"nodeType":"YulFunctionCall","src":"187:12:26"},"nodeType":"YulExpressionStatement","src":"187:12:26"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:26"},{"body":{"nodeType":"YulBlock","src":"300:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:26"},"nodeType":"YulFunctionCall","src":"310:12:26"},"nodeType":"YulExpressionStatement","src":"310:12:26"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:26"},{"body":{"nodeType":"YulBlock","src":"379:81:26","statements":[{"nodeType":"YulAssignment","src":"389:65:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:26"},"nodeType":"YulFunctionCall","src":"400:54:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:26"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:26","type":""}],"src":"334:126:26"},{"body":{"nodeType":"YulBlock","src":"511:51:26","statements":[{"nodeType":"YulAssignment","src":"521:35:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:26"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:26"},"nodeType":"YulFunctionCall","src":"532:24:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:26"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:26","type":""}],"src":"466:96:26"},{"body":{"nodeType":"YulBlock","src":"611:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:26"},"nodeType":"YulFunctionCall","src":"670:12:26"},"nodeType":"YulExpressionStatement","src":"670:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:26"},"nodeType":"YulFunctionCall","src":"641:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:26"},"nodeType":"YulFunctionCall","src":"631:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:26"},"nodeType":"YulFunctionCall","src":"624:43:26"},"nodeType":"YulIf","src":"621:63:26"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:26","type":""}],"src":"568:122:26"},{"body":{"nodeType":"YulBlock","src":"748:87:26","statements":[{"nodeType":"YulAssignment","src":"758:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"780:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"767:12:26"},"nodeType":"YulFunctionCall","src":"767:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"758:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"823:5:26"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"796:26:26"},"nodeType":"YulFunctionCall","src":"796:33:26"},"nodeType":"YulExpressionStatement","src":"796:33:26"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"726:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"734:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"742:5:26","type":""}],"src":"696:139:26"},{"body":{"nodeType":"YulBlock","src":"884:43:26","statements":[{"nodeType":"YulAssignment","src":"894:27:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"909:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"916:4:26","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"905:3:26"},"nodeType":"YulFunctionCall","src":"905:16:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"894:7:26"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"866:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"876:7:26","type":""}],"src":"841:86:26"},{"body":{"nodeType":"YulBlock","src":"974:77:26","statements":[{"body":{"nodeType":"YulBlock","src":"1029:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1038:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1041:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1031:6:26"},"nodeType":"YulFunctionCall","src":"1031:12:26"},"nodeType":"YulExpressionStatement","src":"1031:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"997:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1020:5:26"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"1004:15:26"},"nodeType":"YulFunctionCall","src":"1004:22:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"994:2:26"},"nodeType":"YulFunctionCall","src":"994:33:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"987:6:26"},"nodeType":"YulFunctionCall","src":"987:41:26"},"nodeType":"YulIf","src":"984:61:26"}]},"name":"validator_revert_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"967:5:26","type":""}],"src":"933:118:26"},{"body":{"nodeType":"YulBlock","src":"1107:85:26","statements":[{"nodeType":"YulAssignment","src":"1117:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1139:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1126:12:26"},"nodeType":"YulFunctionCall","src":"1126:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1117:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1180:5:26"}],"functionName":{"name":"validator_revert_t_uint8","nodeType":"YulIdentifier","src":"1155:24:26"},"nodeType":"YulFunctionCall","src":"1155:31:26"},"nodeType":"YulExpressionStatement","src":"1155:31:26"}]},"name":"abi_decode_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1085:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"1093:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1101:5:26","type":""}],"src":"1057:135:26"},{"body":{"nodeType":"YulBlock","src":"1279:389:26","statements":[{"body":{"nodeType":"YulBlock","src":"1325:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1327:77:26"},"nodeType":"YulFunctionCall","src":"1327:79:26"},"nodeType":"YulExpressionStatement","src":"1327:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1300:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"1309:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1296:3:26"},"nodeType":"YulFunctionCall","src":"1296:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"1321:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1292:3:26"},"nodeType":"YulFunctionCall","src":"1292:32:26"},"nodeType":"YulIf","src":"1289:119:26"},{"nodeType":"YulBlock","src":"1418:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"1433:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"1447:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1437:6:26","type":""}]},{"nodeType":"YulAssignment","src":"1462:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1497:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"1508:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1493:3:26"},"nodeType":"YulFunctionCall","src":"1493:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1517:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1472:20:26"},"nodeType":"YulFunctionCall","src":"1472:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1462:6:26"}]}]},{"nodeType":"YulBlock","src":"1545:116:26","statements":[{"nodeType":"YulVariableDeclaration","src":"1560:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"1574:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1564:6:26","type":""}]},{"nodeType":"YulAssignment","src":"1590:61:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1623:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"1634:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1619:3:26"},"nodeType":"YulFunctionCall","src":"1619:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1643:7:26"}],"functionName":{"name":"abi_decode_t_uint8","nodeType":"YulIdentifier","src":"1600:18:26"},"nodeType":"YulFunctionCall","src":"1600:51:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1590:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1241:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1252:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1264:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1272:6:26","type":""}],"src":"1198:470:26"},{"body":{"nodeType":"YulBlock","src":"1740:263:26","statements":[{"body":{"nodeType":"YulBlock","src":"1786:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1788:77:26"},"nodeType":"YulFunctionCall","src":"1788:79:26"},"nodeType":"YulExpressionStatement","src":"1788:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1761:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"1770:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1757:3:26"},"nodeType":"YulFunctionCall","src":"1757:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"1782:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1753:3:26"},"nodeType":"YulFunctionCall","src":"1753:32:26"},"nodeType":"YulIf","src":"1750:119:26"},{"nodeType":"YulBlock","src":"1879:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"1894:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"1908:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1898:6:26","type":""}]},{"nodeType":"YulAssignment","src":"1923:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1958:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"1969:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1954:3:26"},"nodeType":"YulFunctionCall","src":"1954:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1978:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1933:20:26"},"nodeType":"YulFunctionCall","src":"1933:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1923:6:26"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1710:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1721:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1733:6:26","type":""}],"src":"1674:329:26"},{"body":{"nodeType":"YulBlock","src":"2037:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2054:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2057:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2047:6:26"},"nodeType":"YulFunctionCall","src":"2047:88:26"},"nodeType":"YulExpressionStatement","src":"2047:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2151:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2154:4:26","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2144:6:26"},"nodeType":"YulFunctionCall","src":"2144:15:26"},"nodeType":"YulExpressionStatement","src":"2144:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2175:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2178:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2168:6:26"},"nodeType":"YulFunctionCall","src":"2168:15:26"},"nodeType":"YulExpressionStatement","src":"2168:15:26"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"2009:180:26"},{"body":{"nodeType":"YulBlock","src":"2251:62:26","statements":[{"body":{"nodeType":"YulBlock","src":"2285:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x21","nodeType":"YulIdentifier","src":"2287:16:26"},"nodeType":"YulFunctionCall","src":"2287:18:26"},"nodeType":"YulExpressionStatement","src":"2287:18:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2274:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"2281:1:26","type":"","value":"4"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2271:2:26"},"nodeType":"YulFunctionCall","src":"2271:12:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2264:6:26"},"nodeType":"YulFunctionCall","src":"2264:20:26"},"nodeType":"YulIf","src":"2261:46:26"}]},"name":"validator_assert_t_enum$_RiskTier_$6806","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2244:5:26","type":""}],"src":"2195:118:26"},{"body":{"nodeType":"YulBlock","src":"2377:79:26","statements":[{"nodeType":"YulAssignment","src":"2387:16:26","value":{"name":"value","nodeType":"YulIdentifier","src":"2398:5:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2387:7:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2444:5:26"}],"functionName":{"name":"validator_assert_t_enum$_RiskTier_$6806","nodeType":"YulIdentifier","src":"2404:39:26"},"nodeType":"YulFunctionCall","src":"2404:46:26"},"nodeType":"YulExpressionStatement","src":"2404:46:26"}]},"name":"cleanup_t_enum$_RiskTier_$6806","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2359:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2369:7:26","type":""}],"src":"2319:137:26"},{"body":{"nodeType":"YulBlock","src":"2533:66:26","statements":[{"nodeType":"YulAssignment","src":"2543:50:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2587:5:26"}],"functionName":{"name":"cleanup_t_enum$_RiskTier_$6806","nodeType":"YulIdentifier","src":"2556:30:26"},"nodeType":"YulFunctionCall","src":"2556:37:26"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"2543:9:26"}]}]},"name":"convert_t_enum$_RiskTier_$6806_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2513:5:26","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"2523:9:26","type":""}],"src":"2462:137:26"},{"body":{"nodeType":"YulBlock","src":"2681:77:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2698:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2745:5:26"}],"functionName":{"name":"convert_t_enum$_RiskTier_$6806_to_t_uint8","nodeType":"YulIdentifier","src":"2703:41:26"},"nodeType":"YulFunctionCall","src":"2703:48:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2691:6:26"},"nodeType":"YulFunctionCall","src":"2691:61:26"},"nodeType":"YulExpressionStatement","src":"2691:61:26"}]},"name":"abi_encode_t_enum$_RiskTier_$6806_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2669:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2676:3:26","type":""}],"src":"2605:153:26"},{"body":{"nodeType":"YulBlock","src":"2873:135:26","statements":[{"nodeType":"YulAssignment","src":"2883:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2895:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"2906:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2891:3:26"},"nodeType":"YulFunctionCall","src":"2891:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2883:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2974:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2987:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"2998:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2983:3:26"},"nodeType":"YulFunctionCall","src":"2983:17:26"}],"functionName":{"name":"abi_encode_t_enum$_RiskTier_$6806_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"2919:54:26"},"nodeType":"YulFunctionCall","src":"2919:82:26"},"nodeType":"YulExpressionStatement","src":"2919:82:26"}]},"name":"abi_encode_tuple_t_enum$_RiskTier_$6806__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2845:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2857:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2868:4:26","type":""}],"src":"2764:244:26"},{"body":{"nodeType":"YulBlock","src":"3110:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3127:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"3132:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3120:6:26"},"nodeType":"YulFunctionCall","src":"3120:19:26"},"nodeType":"YulExpressionStatement","src":"3120:19:26"},{"nodeType":"YulAssignment","src":"3148:29:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3167:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"3172:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3163:3:26"},"nodeType":"YulFunctionCall","src":"3163:14:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"3148:11:26"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3082:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"3087:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"3098:11:26","type":""}],"src":"3014:169:26"},{"body":{"nodeType":"YulBlock","src":"3295:57:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3317:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"3325:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3313:3:26"},"nodeType":"YulFunctionCall","src":"3313:14:26"},{"hexValue":"496e76616c69642073636f7265","kind":"string","nodeType":"YulLiteral","src":"3329:15:26","type":"","value":"Invalid score"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3306:6:26"},"nodeType":"YulFunctionCall","src":"3306:39:26"},"nodeType":"YulExpressionStatement","src":"3306:39:26"}]},"name":"store_literal_in_memory_135933132c24f113e2558fd53a3dbb73e17cbef49f2d76fe110cf8eb758e8262","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3287:6:26","type":""}],"src":"3189:163:26"},{"body":{"nodeType":"YulBlock","src":"3504:220:26","statements":[{"nodeType":"YulAssignment","src":"3514:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3580:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"3585:2:26","type":"","value":"13"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3521:58:26"},"nodeType":"YulFunctionCall","src":"3521:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3514:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3686:3:26"}],"functionName":{"name":"store_literal_in_memory_135933132c24f113e2558fd53a3dbb73e17cbef49f2d76fe110cf8eb758e8262","nodeType":"YulIdentifier","src":"3597:88:26"},"nodeType":"YulFunctionCall","src":"3597:93:26"},"nodeType":"YulExpressionStatement","src":"3597:93:26"},{"nodeType":"YulAssignment","src":"3699:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3710:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"3715:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3706:3:26"},"nodeType":"YulFunctionCall","src":"3706:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3699:3:26"}]}]},"name":"abi_encode_t_stringliteral_135933132c24f113e2558fd53a3dbb73e17cbef49f2d76fe110cf8eb758e8262_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3492:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3500:3:26","type":""}],"src":"3358:366:26"},{"body":{"nodeType":"YulBlock","src":"3901:248:26","statements":[{"nodeType":"YulAssignment","src":"3911:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3923:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3934:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3919:3:26"},"nodeType":"YulFunctionCall","src":"3919:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3911:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3958:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3969:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3954:3:26"},"nodeType":"YulFunctionCall","src":"3954:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3977:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"3983:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3973:3:26"},"nodeType":"YulFunctionCall","src":"3973:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3947:6:26"},"nodeType":"YulFunctionCall","src":"3947:47:26"},"nodeType":"YulExpressionStatement","src":"3947:47:26"},{"nodeType":"YulAssignment","src":"4003:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4137:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_135933132c24f113e2558fd53a3dbb73e17cbef49f2d76fe110cf8eb758e8262_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4011:124:26"},"nodeType":"YulFunctionCall","src":"4011:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4003:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_135933132c24f113e2558fd53a3dbb73e17cbef49f2d76fe110cf8eb758e8262__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3881:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3896:4:26","type":""}],"src":"3730:419:26"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint8(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_RiskTier_$6806(value) {\n        if iszero(lt(value, 4)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_RiskTier_$6806(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_RiskTier_$6806(value)\n    }\n\n    function convert_t_enum$_RiskTier_$6806_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_RiskTier_$6806(value)\n    }\n\n    function abi_encode_t_enum$_RiskTier_$6806_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_RiskTier_$6806_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_RiskTier_$6806__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_RiskTier_$6806_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_135933132c24f113e2558fd53a3dbb73e17cbef49f2d76fe110cf8eb758e8262(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid score\")\n\n    }\n\n    function abi_encode_t_stringliteral_135933132c24f113e2558fd53a3dbb73e17cbef49f2d76fe110cf8eb758e8262_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_135933132c24f113e2558fd53a3dbb73e17cbef49f2d76fe110cf8eb758e8262(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_135933132c24f113e2558fd53a3dbb73e17cbef49f2d76fe110cf8eb758e8262__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_135933132c24f113e2558fd53a3dbb73e17cbef49f2d76fe110cf8eb758e8262_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":26,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100415760003560e01c806305ddd11a146100465780635e5b875214610062578063dc08706d14610092575b600080fd5b610060600480360381019061005b9190610310565b6100c2565b005b61007c60048036038101906100779190610350565b6101ff565b60405161008991906103f4565b60405180910390f35b6100ac60048036038101906100a79190610350565b61021f565b6040516100b991906103f4565b60405180910390f35b6003808111156100d5576100d461037d565b5b60ff168160ff16111561011d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101149061046c565b60405180910390fd5b8060ff1660038111156101335761013261037d565b5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360038111156101935761019261037d565b5b02179055508173ffffffffffffffffffffffffffffffffffffffff167f248517b40f7b91692e1a4d22251b5d93cb2813773fbdfed259f89cad4c0460578260ff1660038111156101e6576101e561037d565b5b6040516101f391906103f4565b60405180910390a25050565b60006020528060005260406000206000915054906101000a900460ff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102a482610279565b9050919050565b6102b481610299565b81146102bf57600080fd5b50565b6000813590506102d1816102ab565b92915050565b600060ff82169050919050565b6102ed816102d7565b81146102f857600080fd5b50565b60008135905061030a816102e4565b92915050565b6000806040838503121561032757610326610274565b5b6000610335858286016102c2565b9250506020610346858286016102fb565b9150509250929050565b60006020828403121561036657610365610274565b5b6000610374848285016102c2565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600481106103bd576103bc61037d565b5b50565b60008190506103ce826103ac565b919050565b60006103de826103c0565b9050919050565b6103ee816103d3565b82525050565b600060208201905061040960008301846103e5565b92915050565b600082825260208201905092915050565b7f496e76616c69642073636f726500000000000000000000000000000000000000600082015250565b6000610456600d8361040f565b915061046182610420565b602082019050919050565b6000602082019050818103600083015261048581610449565b905091905056fea2646970667358221220626f20df2ab9f5cb9723afdd91df0e780751156c609a56655b22d45285cec08d64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5DDD11A EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x5E5B8752 EQ PUSH2 0x62 JUMPI DUP1 PUSH4 0xDC08706D EQ PUSH2 0x92 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x310 JUMP JUMPDEST PUSH2 0xC2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x77 SWAP2 SWAP1 PUSH2 0x350 JUMP JUMPDEST PUSH2 0x1FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x89 SWAP2 SWAP1 PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA7 SWAP2 SWAP1 PUSH2 0x350 JUMP JUMPDEST PUSH2 0x21F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB9 SWAP2 SWAP1 PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0xD5 JUMPI PUSH2 0xD4 PUSH2 0x37D JUMP JUMPDEST JUMPDEST PUSH1 0xFF AND DUP2 PUSH1 0xFF AND GT ISZERO PUSH2 0x11D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x114 SWAP1 PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x133 JUMPI PUSH2 0x132 PUSH2 0x37D JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x193 JUMPI PUSH2 0x192 PUSH2 0x37D JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x248517B40F7B91692E1A4D22251B5D93CB2813773FBDFED259F89CAD4C046057 DUP3 PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1E6 JUMPI PUSH2 0x1E5 PUSH2 0x37D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A4 DUP3 PUSH2 0x279 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B4 DUP2 PUSH2 0x299 JUMP JUMPDEST DUP2 EQ PUSH2 0x2BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2D1 DUP2 PUSH2 0x2AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2ED DUP2 PUSH2 0x2D7 JUMP JUMPDEST DUP2 EQ PUSH2 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x30A DUP2 PUSH2 0x2E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x327 JUMPI PUSH2 0x326 PUSH2 0x274 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x335 DUP6 DUP3 DUP7 ADD PUSH2 0x2C2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x346 DUP6 DUP3 DUP7 ADD PUSH2 0x2FB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x366 JUMPI PUSH2 0x365 PUSH2 0x274 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x374 DUP5 DUP3 DUP6 ADD PUSH2 0x2C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x3BD JUMPI PUSH2 0x3BC PUSH2 0x37D JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x3CE DUP3 PUSH2 0x3AC JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DE DUP3 PUSH2 0x3C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3EE DUP2 PUSH2 0x3D3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x409 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C69642073636F726500000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x456 PUSH1 0xD DUP4 PUSH2 0x40F JUMP JUMPDEST SWAP2 POP PUSH2 0x461 DUP3 PUSH2 0x420 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x485 DUP2 PUSH2 0x449 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH3 0x6F20DF 0x2A 0xB9 CREATE2 0xCB SWAP8 0x23 0xAF 0xDD SWAP2 0xDF 0xE PUSH25 0x751156C609A56655B22D45285CEC08D64736F6C6343000814 STOP CALLER ","sourceMap":"61:585:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;301:223;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;128:46;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;532:111;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;301:223;393:10;387:17;;;;;;;;:::i;:::-;;378:26;;:5;:26;;;;370:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;461:5;452:15;;;;;;;;;;:::i;:::-;;433:10;:16;444:4;433:16;;;;;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;494:4;483:33;;;509:5;500:15;;;;;;;;;;:::i;:::-;;483:33;;;;;;:::i;:::-;;;;;;;;301:223;;:::o;128:46::-;;;;;;;;;;;;;;;;;;;;;;:::o;532:111::-;591:8;619:10;:16;630:4;619:16;;;;;;;;;;;;;;;;;;;;;;;;;612:23;;532:111;;;:::o;88:117:26:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:86::-;876:7;916:4;909:5;905:16;894:27;;841:86;;;:::o;933:118::-;1004:22;1020:5;1004:22;:::i;:::-;997:5;994:33;984:61;;1041:1;1038;1031:12;984:61;933:118;:::o;1057:135::-;1101:5;1139:6;1126:20;1117:29;;1155:31;1180:5;1155:31;:::i;:::-;1057:135;;;;:::o;1198:470::-;1264:6;1272;1321:2;1309:9;1300:7;1296:23;1292:32;1289:119;;;1327:79;;:::i;:::-;1289:119;1447:1;1472:53;1517:7;1508:6;1497:9;1493:22;1472:53;:::i;:::-;1462:63;;1418:117;1574:2;1600:51;1643:7;1634:6;1623:9;1619:22;1600:51;:::i;:::-;1590:61;;1545:116;1198:470;;;;;:::o;1674:329::-;1733:6;1782:2;1770:9;1761:7;1757:23;1753:32;1750:119;;;1788:79;;:::i;:::-;1750:119;1908:1;1933:53;1978:7;1969:6;1958:9;1954:22;1933:53;:::i;:::-;1923:63;;1879:117;1674:329;;;;:::o;2009:180::-;2057:77;2054:1;2047:88;2154:4;2151:1;2144:15;2178:4;2175:1;2168:15;2195:118;2281:1;2274:5;2271:12;2261:46;;2287:18;;:::i;:::-;2261:46;2195:118;:::o;2319:137::-;2369:7;2398:5;2387:16;;2404:46;2444:5;2404:46;:::i;:::-;2319:137;;;:::o;2462:::-;2523:9;2556:37;2587:5;2556:37;:::i;:::-;2543:50;;2462:137;;;:::o;2605:153::-;2703:48;2745:5;2703:48;:::i;:::-;2698:3;2691:61;2605:153;;:::o;2764:244::-;2868:4;2906:2;2895:9;2891:18;2883:26;;2919:82;2998:1;2987:9;2983:17;2974:6;2919:82;:::i;:::-;2764:244;;;;:::o;3014:169::-;3098:11;3132:6;3127:3;3120:19;3172:4;3167:3;3163:14;3148:29;;3014:169;;;;:::o;3189:163::-;3329:15;3325:1;3317:6;3313:14;3306:39;3189:163;:::o;3358:366::-;3500:3;3521:67;3585:2;3580:3;3521:67;:::i;:::-;3514:74;;3597:93;3686:3;3597:93;:::i;:::-;3715:2;3710:3;3706:12;3699:19;;3358:366;;;:::o;3730:419::-;3896:4;3934:2;3923:9;3919:18;3911:26;;3983:9;3977:4;3973:20;3969:1;3958:9;3954:17;3947:47;4011:131;4137:4;4011:131;:::i;:::-;4003:139;;3730:419;;;:::o"},"methodIdentifiers":{"getRiskScore(address)":"dc08706d","riskScores(address)":"5e5b8752","setRiskScore(address,uint8)":"05ddd11a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum AIRiskManager.RiskTier\",\"name\":\"tier\",\"type\":\"uint8\"}],\"name\":\"RiskScored\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getRiskScore\",\"outputs\":[{\"internalType\":\"enum AIRiskManager.RiskTier\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"riskScores\",\"outputs\":[{\"internalType\":\"enum AIRiskManager.RiskTier\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"score\",\"type\":\"uint8\"}],\"name\":\"setRiskScore\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AIRiskManager.sol\":\"AIRiskManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AIRiskManager.sol\":{\"keccak256\":\"0x93588640ec096c4c1d8f511260ec136ea60c330e6f851b082347129fcc97d02f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b0ef12803d186a537453d022e3aed90685eaddc4929ec2cc182c3a55ec897868\",\"dweb:/ipfs/QmYMjUMBaSRL1RAbhGx4TMVE4bR26MAXPcbJyG87fKvzSD\"]}},\"version\":1}"}},"contracts/CCIPRouter.sol":{"CCIPRouter":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"string","name":"data","type":"string"}],"name":"MessageReceived","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"string","name":"data","type":"string"}],"name":"MessageSent","type":"event"},{"inputs":[{"internalType":"string","name":"data","type":"string"}],"name":"receiveMessage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"string","name":"data","type":"string"}],"name":"sendMessage","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50610341806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80632f049bf31461003b578063de6f24bb14610057575b600080fd5b61005560048036038101906100509190610161565b610073565b005b610071600480360381019061006c919061020c565b6100b2565b005b7f15340f1d3815fc99b59e3b9ed010321f64951d6e6a43c97a9e92713e7cd6ad173383836040516100a6939291906102d9565b60405180910390a15050565b7f0d7fccda06d6eb51c23cbd16d49b9b3f3ebafb002dba1b074895cbb35d0e81308383836040516100e5939291906102d9565b60405180910390a1505050565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f840112610121576101206100fc565b5b8235905067ffffffffffffffff81111561013e5761013d610101565b5b60208301915083600182028301111561015a57610159610106565b5b9250929050565b60008060208385031215610178576101776100f2565b5b600083013567ffffffffffffffff811115610196576101956100f7565b5b6101a28582860161010b565b92509250509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101d9826101ae565b9050919050565b6101e9816101ce565b81146101f457600080fd5b50565b600081359050610206816101e0565b92915050565b600080600060408486031215610225576102246100f2565b5b6000610233868287016101f7565b935050602084013567ffffffffffffffff811115610254576102536100f7565b5b6102608682870161010b565b92509250509250925092565b610275816101ce565b82525050565b600082825260208201905092915050565b82818337600083830152505050565b6000601f19601f8301169050919050565b60006102b8838561027b565b93506102c583858461028c565b6102ce8361029b565b840190509392505050565b60006040820190506102ee600083018661026c565b81810360208301526103018184866102ac565b905094935050505056fea2646970667358221220f636c6d3588d243d8131d5a2d0a1b19227a1929efc4c676909f205da0b4e6ef764736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x341 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2F049BF3 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xDE6F24BB EQ PUSH2 0x57 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x161 JUMP JUMPDEST PUSH2 0x73 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x71 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6C SWAP2 SWAP1 PUSH2 0x20C JUMP JUMPDEST PUSH2 0xB2 JUMP JUMPDEST STOP JUMPDEST PUSH32 0x15340F1D3815FC99B59E3B9ED010321F64951D6E6A43C97A9E92713E7CD6AD17 CALLER DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xA6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH32 0xD7FCCDA06D6EB51C23CBD16D49B9B3F3EBAFB002DBA1B074895CBB35D0E8130 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xE5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x121 JUMPI PUSH2 0x120 PUSH2 0xFC JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13E JUMPI PUSH2 0x13D PUSH2 0x101 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x15A JUMPI PUSH2 0x159 PUSH2 0x106 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x178 JUMPI PUSH2 0x177 PUSH2 0xF2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x196 JUMPI PUSH2 0x195 PUSH2 0xF7 JUMP JUMPDEST JUMPDEST PUSH2 0x1A2 DUP6 DUP3 DUP7 ADD PUSH2 0x10B JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D9 DUP3 PUSH2 0x1AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E9 DUP2 PUSH2 0x1CE JUMP JUMPDEST DUP2 EQ PUSH2 0x1F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x206 DUP2 PUSH2 0x1E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x225 JUMPI PUSH2 0x224 PUSH2 0xF2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x233 DUP7 DUP3 DUP8 ADD PUSH2 0x1F7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x254 JUMPI PUSH2 0x253 PUSH2 0xF7 JUMP JUMPDEST JUMPDEST PUSH2 0x260 DUP7 DUP3 DUP8 ADD PUSH2 0x10B JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x275 DUP2 PUSH2 0x1CE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B8 DUP4 DUP6 PUSH2 0x27B JUMP JUMPDEST SWAP4 POP PUSH2 0x2C5 DUP4 DUP6 DUP5 PUSH2 0x28C JUMP JUMPDEST PUSH2 0x2CE DUP4 PUSH2 0x29B JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2EE PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x26C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x301 DUP2 DUP5 DUP7 PUSH2 0x2AC JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 CALLDATASIZE 0xC6 0xD3 PC DUP14 0x24 RETURNDATASIZE DUP2 BALANCE 0xD5 LOG2 0xD0 LOG1 0xB1 SWAP3 0x27 LOG1 SWAP3 SWAP15 0xFC 0x4C PUSH8 0x6909F205DA0B4E6E 0xF7 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"90:503:22:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@receiveMessage_6892":{"entryPoint":115,"id":6892,"parameterSlots":2,"returnSlots":0},"@sendMessage_6905":{"entryPoint":178,"id":6905,"parameterSlots":3,"returnSlots":0},"abi_decode_t_address":{"entryPoint":503,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_calldata_ptr":{"entryPoint":267,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_string_calldata_ptr":{"entryPoint":524,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_string_calldata_ptr":{"entryPoint":353,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":620,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":684,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_string_calldata_ptr__to_t_address_t_string_memory_ptr__fromStack_reversed":{"entryPoint":729,"id":null,"parameterSlots":4,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":635,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":462,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":430,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":652,"id":null,"parameterSlots":3,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":257,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":252,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":262,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":247,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":242,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":667,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":480,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4350:26","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:26","statements":[{"nodeType":"YulAssignment","src":"57:19:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:26"},"nodeType":"YulFunctionCall","src":"67:9:26"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:26"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:26","type":""}],"src":"7:75:26"},{"body":{"nodeType":"YulBlock","src":"177:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:26"},"nodeType":"YulFunctionCall","src":"187:12:26"},"nodeType":"YulExpressionStatement","src":"187:12:26"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:26"},{"body":{"nodeType":"YulBlock","src":"300:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:26"},"nodeType":"YulFunctionCall","src":"310:12:26"},"nodeType":"YulExpressionStatement","src":"310:12:26"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:26"},{"body":{"nodeType":"YulBlock","src":"423:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:26"},"nodeType":"YulFunctionCall","src":"433:12:26"},"nodeType":"YulExpressionStatement","src":"433:12:26"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:26"},{"body":{"nodeType":"YulBlock","src":"546:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:26"},"nodeType":"YulFunctionCall","src":"556:12:26"},"nodeType":"YulExpressionStatement","src":"556:12:26"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"457:117:26"},{"body":{"nodeType":"YulBlock","src":"669:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"686:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"689:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"679:6:26"},"nodeType":"YulFunctionCall","src":"679:12:26"},"nodeType":"YulExpressionStatement","src":"679:12:26"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"580:117:26"},{"body":{"nodeType":"YulBlock","src":"792:478:26","statements":[{"body":{"nodeType":"YulBlock","src":"841:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"843:77:26"},"nodeType":"YulFunctionCall","src":"843:79:26"},"nodeType":"YulExpressionStatement","src":"843:79:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"820:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"828:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"816:3:26"},"nodeType":"YulFunctionCall","src":"816:17:26"},{"name":"end","nodeType":"YulIdentifier","src":"835:3:26"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"812:3:26"},"nodeType":"YulFunctionCall","src":"812:27:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"805:6:26"},"nodeType":"YulFunctionCall","src":"805:35:26"},"nodeType":"YulIf","src":"802:122:26"},{"nodeType":"YulAssignment","src":"933:30:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"956:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"943:12:26"},"nodeType":"YulFunctionCall","src":"943:20:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"933:6:26"}]},{"body":{"nodeType":"YulBlock","src":"1006:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"1008:77:26"},"nodeType":"YulFunctionCall","src":"1008:79:26"},"nodeType":"YulExpressionStatement","src":"1008:79:26"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"978:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"986:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"975:2:26"},"nodeType":"YulFunctionCall","src":"975:30:26"},"nodeType":"YulIf","src":"972:117:26"},{"nodeType":"YulAssignment","src":"1098:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1114:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"1122:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1110:3:26"},"nodeType":"YulFunctionCall","src":"1110:17:26"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"1098:8:26"}]},{"body":{"nodeType":"YulBlock","src":"1181:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"1183:77:26"},"nodeType":"YulFunctionCall","src":"1183:79:26"},"nodeType":"YulExpressionStatement","src":"1183:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"1146:8:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1160:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"1168:4:26","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1156:3:26"},"nodeType":"YulFunctionCall","src":"1156:17:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1142:3:26"},"nodeType":"YulFunctionCall","src":"1142:32:26"},{"name":"end","nodeType":"YulIdentifier","src":"1176:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1139:2:26"},"nodeType":"YulFunctionCall","src":"1139:41:26"},"nodeType":"YulIf","src":"1136:128:26"}]},"name":"abi_decode_t_string_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"759:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"767:3:26","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"775:8:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"785:6:26","type":""}],"src":"717:553:26"},{"body":{"nodeType":"YulBlock","src":"1362:443:26","statements":[{"body":{"nodeType":"YulBlock","src":"1408:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1410:77:26"},"nodeType":"YulFunctionCall","src":"1410:79:26"},"nodeType":"YulExpressionStatement","src":"1410:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1383:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"1392:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1379:3:26"},"nodeType":"YulFunctionCall","src":"1379:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"1404:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1375:3:26"},"nodeType":"YulFunctionCall","src":"1375:32:26"},"nodeType":"YulIf","src":"1372:119:26"},{"nodeType":"YulBlock","src":"1501:297:26","statements":[{"nodeType":"YulVariableDeclaration","src":"1516:45:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1547:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1558:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1543:3:26"},"nodeType":"YulFunctionCall","src":"1543:17:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1530:12:26"},"nodeType":"YulFunctionCall","src":"1530:31:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1520:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"1608:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"1610:77:26"},"nodeType":"YulFunctionCall","src":"1610:79:26"},"nodeType":"YulExpressionStatement","src":"1610:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1580:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"1588:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1577:2:26"},"nodeType":"YulFunctionCall","src":"1577:30:26"},"nodeType":"YulIf","src":"1574:117:26"},{"nodeType":"YulAssignment","src":"1705:83:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1760:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"1771:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1756:3:26"},"nodeType":"YulFunctionCall","src":"1756:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1780:7:26"}],"functionName":{"name":"abi_decode_t_string_calldata_ptr","nodeType":"YulIdentifier","src":"1723:32:26"},"nodeType":"YulFunctionCall","src":"1723:65:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1705:6:26"},{"name":"value1","nodeType":"YulIdentifier","src":"1713:6:26"}]}]}]},"name":"abi_decode_tuple_t_string_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1324:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1335:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1347:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1355:6:26","type":""}],"src":"1276:529:26"},{"body":{"nodeType":"YulBlock","src":"1856:81:26","statements":[{"nodeType":"YulAssignment","src":"1866:65:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1881:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"1888:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1877:3:26"},"nodeType":"YulFunctionCall","src":"1877:54:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1866:7:26"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1838:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1848:7:26","type":""}],"src":"1811:126:26"},{"body":{"nodeType":"YulBlock","src":"1988:51:26","statements":[{"nodeType":"YulAssignment","src":"1998:35:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2027:5:26"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"2009:17:26"},"nodeType":"YulFunctionCall","src":"2009:24:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1998:7:26"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1970:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1980:7:26","type":""}],"src":"1943:96:26"},{"body":{"nodeType":"YulBlock","src":"2088:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"2145:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2154:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2157:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2147:6:26"},"nodeType":"YulFunctionCall","src":"2147:12:26"},"nodeType":"YulExpressionStatement","src":"2147:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2111:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2136:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2118:17:26"},"nodeType":"YulFunctionCall","src":"2118:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2108:2:26"},"nodeType":"YulFunctionCall","src":"2108:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2101:6:26"},"nodeType":"YulFunctionCall","src":"2101:43:26"},"nodeType":"YulIf","src":"2098:63:26"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2081:5:26","type":""}],"src":"2045:122:26"},{"body":{"nodeType":"YulBlock","src":"2225:87:26","statements":[{"nodeType":"YulAssignment","src":"2235:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2257:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2244:12:26"},"nodeType":"YulFunctionCall","src":"2244:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2235:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2300:5:26"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2273:26:26"},"nodeType":"YulFunctionCall","src":"2273:33:26"},"nodeType":"YulExpressionStatement","src":"2273:33:26"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2203:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"2211:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2219:5:26","type":""}],"src":"2173:139:26"},{"body":{"nodeType":"YulBlock","src":"2421:571:26","statements":[{"body":{"nodeType":"YulBlock","src":"2467:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2469:77:26"},"nodeType":"YulFunctionCall","src":"2469:79:26"},"nodeType":"YulExpressionStatement","src":"2469:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2442:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"2451:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2438:3:26"},"nodeType":"YulFunctionCall","src":"2438:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"2463:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2434:3:26"},"nodeType":"YulFunctionCall","src":"2434:32:26"},"nodeType":"YulIf","src":"2431:119:26"},{"nodeType":"YulBlock","src":"2560:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2575:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"2589:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2579:6:26","type":""}]},{"nodeType":"YulAssignment","src":"2604:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2639:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"2650:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2635:3:26"},"nodeType":"YulFunctionCall","src":"2635:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2659:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2614:20:26"},"nodeType":"YulFunctionCall","src":"2614:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2604:6:26"}]}]},{"nodeType":"YulBlock","src":"2687:298:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2702:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2733:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"2744:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2729:3:26"},"nodeType":"YulFunctionCall","src":"2729:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2716:12:26"},"nodeType":"YulFunctionCall","src":"2716:32:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2706:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"2795:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"2797:77:26"},"nodeType":"YulFunctionCall","src":"2797:79:26"},"nodeType":"YulExpressionStatement","src":"2797:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2767:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"2775:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2764:2:26"},"nodeType":"YulFunctionCall","src":"2764:30:26"},"nodeType":"YulIf","src":"2761:117:26"},{"nodeType":"YulAssignment","src":"2892:83:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2947:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"2958:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2943:3:26"},"nodeType":"YulFunctionCall","src":"2943:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2967:7:26"}],"functionName":{"name":"abi_decode_t_string_calldata_ptr","nodeType":"YulIdentifier","src":"2910:32:26"},"nodeType":"YulFunctionCall","src":"2910:65:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2892:6:26"},{"name":"value2","nodeType":"YulIdentifier","src":"2900:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_string_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2375:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2386:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2398:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2406:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2414:6:26","type":""}],"src":"2318:674:26"},{"body":{"nodeType":"YulBlock","src":"3063:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3080:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3103:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3085:17:26"},"nodeType":"YulFunctionCall","src":"3085:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3073:6:26"},"nodeType":"YulFunctionCall","src":"3073:37:26"},"nodeType":"YulExpressionStatement","src":"3073:37:26"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3051:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3058:3:26","type":""}],"src":"2998:118:26"},{"body":{"nodeType":"YulBlock","src":"3218:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3235:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"3240:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3228:6:26"},"nodeType":"YulFunctionCall","src":"3228:19:26"},"nodeType":"YulExpressionStatement","src":"3228:19:26"},{"nodeType":"YulAssignment","src":"3256:29:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3275:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"3280:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3271:3:26"},"nodeType":"YulFunctionCall","src":"3271:14:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"3256:11:26"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3190:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"3195:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"3206:11:26","type":""}],"src":"3122:169:26"},{"body":{"nodeType":"YulBlock","src":"3361:82:26","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3384:3:26"},{"name":"src","nodeType":"YulIdentifier","src":"3389:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"3394:6:26"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"3371:12:26"},"nodeType":"YulFunctionCall","src":"3371:30:26"},"nodeType":"YulExpressionStatement","src":"3371:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3421:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"3426:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3417:3:26"},"nodeType":"YulFunctionCall","src":"3417:16:26"},{"kind":"number","nodeType":"YulLiteral","src":"3435:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3410:6:26"},"nodeType":"YulFunctionCall","src":"3410:27:26"},"nodeType":"YulExpressionStatement","src":"3410:27:26"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3343:3:26","type":""},{"name":"dst","nodeType":"YulTypedName","src":"3348:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"3353:6:26","type":""}],"src":"3297:146:26"},{"body":{"nodeType":"YulBlock","src":"3497:54:26","statements":[{"nodeType":"YulAssignment","src":"3507:38:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3525:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"3532:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3521:3:26"},"nodeType":"YulFunctionCall","src":"3521:14:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3541:2:26","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3537:3:26"},"nodeType":"YulFunctionCall","src":"3537:7:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3517:3:26"},"nodeType":"YulFunctionCall","src":"3517:28:26"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3507:6:26"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3480:5:26","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3490:6:26","type":""}],"src":"3449:102:26"},{"body":{"nodeType":"YulBlock","src":"3683:215:26","statements":[{"nodeType":"YulAssignment","src":"3693:78:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3759:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"3764:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3700:58:26"},"nodeType":"YulFunctionCall","src":"3700:71:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3693:3:26"}]},{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3818:5:26"},{"name":"pos","nodeType":"YulIdentifier","src":"3825:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"3830:6:26"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"3781:36:26"},"nodeType":"YulFunctionCall","src":"3781:56:26"},"nodeType":"YulExpressionStatement","src":"3781:56:26"},{"nodeType":"YulAssignment","src":"3846:46:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3857:3:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3884:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"3862:21:26"},"nodeType":"YulFunctionCall","src":"3862:29:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3853:3:26"},"nodeType":"YulFunctionCall","src":"3853:39:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3846:3:26"}]}]},"name":"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"3656:5:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"3663:6:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3671:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3679:3:26","type":""}],"src":"3581:317:26"},{"body":{"nodeType":"YulBlock","src":"4060:287:26","statements":[{"nodeType":"YulAssignment","src":"4070:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4082:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4093:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4078:3:26"},"nodeType":"YulFunctionCall","src":"4078:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4070:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4150:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4163:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4174:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4159:3:26"},"nodeType":"YulFunctionCall","src":"4159:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4106:43:26"},"nodeType":"YulFunctionCall","src":"4106:71:26"},"nodeType":"YulExpressionStatement","src":"4106:71:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4198:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4209:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4194:3:26"},"nodeType":"YulFunctionCall","src":"4194:18:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4218:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"4224:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4214:3:26"},"nodeType":"YulFunctionCall","src":"4214:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4187:6:26"},"nodeType":"YulFunctionCall","src":"4187:48:26"},"nodeType":"YulExpressionStatement","src":"4187:48:26"},{"nodeType":"YulAssignment","src":"4244:96:26","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4318:6:26"},{"name":"value2","nodeType":"YulIdentifier","src":"4326:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"4335:4:26"}],"functionName":{"name":"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4252:65:26"},"nodeType":"YulFunctionCall","src":"4252:88:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4244:4:26"}]}]},"name":"abi_encode_tuple_t_address_t_string_calldata_ptr__to_t_address_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4016:9:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4028:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4036:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4044:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4055:4:26","type":""}],"src":"3904:443:26"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // string\n    function abi_decode_t_string_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_string_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1, value2 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    // string -> string\n    function abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_string_calldata_ptr__to_t_address_t_string_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(value1, value2,  tail)\n\n    }\n\n}\n","id":26,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100365760003560e01c80632f049bf31461003b578063de6f24bb14610057575b600080fd5b61005560048036038101906100509190610161565b610073565b005b610071600480360381019061006c919061020c565b6100b2565b005b7f15340f1d3815fc99b59e3b9ed010321f64951d6e6a43c97a9e92713e7cd6ad173383836040516100a6939291906102d9565b60405180910390a15050565b7f0d7fccda06d6eb51c23cbd16d49b9b3f3ebafb002dba1b074895cbb35d0e81308383836040516100e5939291906102d9565b60405180910390a1505050565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f840112610121576101206100fc565b5b8235905067ffffffffffffffff81111561013e5761013d610101565b5b60208301915083600182028301111561015a57610159610106565b5b9250929050565b60008060208385031215610178576101776100f2565b5b600083013567ffffffffffffffff811115610196576101956100f7565b5b6101a28582860161010b565b92509250509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101d9826101ae565b9050919050565b6101e9816101ce565b81146101f457600080fd5b50565b600081359050610206816101e0565b92915050565b600080600060408486031215610225576102246100f2565b5b6000610233868287016101f7565b935050602084013567ffffffffffffffff811115610254576102536100f7565b5b6102608682870161010b565b92509250509250925092565b610275816101ce565b82525050565b600082825260208201905092915050565b82818337600083830152505050565b6000601f19601f8301169050919050565b60006102b8838561027b565b93506102c583858461028c565b6102ce8361029b565b840190509392505050565b60006040820190506102ee600083018661026c565b81810360208301526103018184866102ac565b905094935050505056fea2646970667358221220f636c6d3588d243d8131d5a2d0a1b19227a1929efc4c676909f205da0b4e6ef764736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2F049BF3 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xDE6F24BB EQ PUSH2 0x57 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x161 JUMP JUMPDEST PUSH2 0x73 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x71 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6C SWAP2 SWAP1 PUSH2 0x20C JUMP JUMPDEST PUSH2 0xB2 JUMP JUMPDEST STOP JUMPDEST PUSH32 0x15340F1D3815FC99B59E3B9ED010321F64951D6E6A43C97A9E92713E7CD6AD17 CALLER DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xA6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH32 0xD7FCCDA06D6EB51C23CBD16D49B9B3F3EBAFB002DBA1B074895CBB35D0E8130 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xE5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x121 JUMPI PUSH2 0x120 PUSH2 0xFC JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13E JUMPI PUSH2 0x13D PUSH2 0x101 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x15A JUMPI PUSH2 0x159 PUSH2 0x106 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x178 JUMPI PUSH2 0x177 PUSH2 0xF2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x196 JUMPI PUSH2 0x195 PUSH2 0xF7 JUMP JUMPDEST JUMPDEST PUSH2 0x1A2 DUP6 DUP3 DUP7 ADD PUSH2 0x10B JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D9 DUP3 PUSH2 0x1AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E9 DUP2 PUSH2 0x1CE JUMP JUMPDEST DUP2 EQ PUSH2 0x1F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x206 DUP2 PUSH2 0x1E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x225 JUMPI PUSH2 0x224 PUSH2 0xF2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x233 DUP7 DUP3 DUP8 ADD PUSH2 0x1F7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x254 JUMPI PUSH2 0x253 PUSH2 0xF7 JUMP JUMPDEST JUMPDEST PUSH2 0x260 DUP7 DUP3 DUP8 ADD PUSH2 0x10B JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x275 DUP2 PUSH2 0x1CE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B8 DUP4 DUP6 PUSH2 0x27B JUMP JUMPDEST SWAP4 POP PUSH2 0x2C5 DUP4 DUP6 DUP5 PUSH2 0x28C JUMP JUMPDEST PUSH2 0x2CE DUP4 PUSH2 0x29B JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2EE PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x26C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x301 DUP2 DUP5 DUP7 PUSH2 0x2AC JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 CALLDATASIZE 0xC6 0xD3 PC DUP14 0x24 RETURNDATASIZE DUP2 BALANCE 0xD5 LOG2 0xD0 LOG1 0xB1 SWAP3 0x27 LOG1 SWAP3 SWAP15 0xFC 0x4C PUSH8 0x6909F205DA0B4E6E 0xF7 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"90:503:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;223:187;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;418:172;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;223:187;294:33;310:10;322:4;;294:33;;;;;;;;:::i;:::-;;;;;;;;223:187;;:::o;418:172::-;498:21;510:2;514:4;;498:21;;;;;;;;:::i;:::-;;;;;;;;418:172;;;:::o;88:117:26:-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:117;689:1;686;679:12;717:553;775:8;785:6;835:3;828:4;820:6;816:17;812:27;802:122;;843:79;;:::i;:::-;802:122;956:6;943:20;933:30;;986:18;978:6;975:30;972:117;;;1008:79;;:::i;:::-;972:117;1122:4;1114:6;1110:17;1098:29;;1176:3;1168:4;1160:6;1156:17;1146:8;1142:32;1139:41;1136:128;;;1183:79;;:::i;:::-;1136:128;717:553;;;;;:::o;1276:529::-;1347:6;1355;1404:2;1392:9;1383:7;1379:23;1375:32;1372:119;;;1410:79;;:::i;:::-;1372:119;1558:1;1547:9;1543:17;1530:31;1588:18;1580:6;1577:30;1574:117;;;1610:79;;:::i;:::-;1574:117;1723:65;1780:7;1771:6;1760:9;1756:22;1723:65;:::i;:::-;1705:83;;;;1501:297;1276:529;;;;;:::o;1811:126::-;1848:7;1888:42;1881:5;1877:54;1866:65;;1811:126;;;:::o;1943:96::-;1980:7;2009:24;2027:5;2009:24;:::i;:::-;1998:35;;1943:96;;;:::o;2045:122::-;2118:24;2136:5;2118:24;:::i;:::-;2111:5;2108:35;2098:63;;2157:1;2154;2147:12;2098:63;2045:122;:::o;2173:139::-;2219:5;2257:6;2244:20;2235:29;;2273:33;2300:5;2273:33;:::i;:::-;2173:139;;;;:::o;2318:674::-;2398:6;2406;2414;2463:2;2451:9;2442:7;2438:23;2434:32;2431:119;;;2469:79;;:::i;:::-;2431:119;2589:1;2614:53;2659:7;2650:6;2639:9;2635:22;2614:53;:::i;:::-;2604:63;;2560:117;2744:2;2733:9;2729:18;2716:32;2775:18;2767:6;2764:30;2761:117;;;2797:79;;:::i;:::-;2761:117;2910:65;2967:7;2958:6;2947:9;2943:22;2910:65;:::i;:::-;2892:83;;;;2687:298;2318:674;;;;;:::o;2998:118::-;3085:24;3103:5;3085:24;:::i;:::-;3080:3;3073:37;2998:118;;:::o;3122:169::-;3206:11;3240:6;3235:3;3228:19;3280:4;3275:3;3271:14;3256:29;;3122:169;;;;:::o;3297:146::-;3394:6;3389:3;3384;3371:30;3435:1;3426:6;3421:3;3417:16;3410:27;3297:146;;;:::o;3449:102::-;3490:6;3541:2;3537:7;3532:2;3525:5;3521:14;3517:28;3507:38;;3449:102;;;:::o;3581:317::-;3679:3;3700:71;3764:6;3759:3;3700:71;:::i;:::-;3693:78;;3781:56;3830:6;3825:3;3818:5;3781:56;:::i;:::-;3862:29;3884:6;3862:29;:::i;:::-;3857:3;3853:39;3846:46;;3581:317;;;;;:::o;3904:443::-;4055:4;4093:2;4082:9;4078:18;4070:26;;4106:71;4174:1;4163:9;4159:17;4150:6;4106:71;:::i;:::-;4224:9;4218:4;4214:20;4209:2;4198:9;4194:18;4187:48;4252:88;4335:4;4326:6;4318;4252:88;:::i;:::-;4244:96;;3904:443;;;;;;:::o"},"methodIdentifiers":{"receiveMessage(string)":"2f049bf3","sendMessage(address,string)":"de6f24bb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"MessageReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"MessageSent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"receiveMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"sendMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CCIPRouter.sol\":\"CCIPRouter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CCIPRouter.sol\":{\"keccak256\":\"0xa9dd9fa9bf51b248e3f0035dd9f851ee8b7aec6bc88678de7f32beb8e17328ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a9c809cd4ad1b5497c07b0ec853a369b39937e61cade7c8cb461a29d8d12be1\",\"dweb:/ipfs/QmcG8E7Fdzj6aRyGRF6yrST31F3tbrqhCFfiPA4MHPUnRF\"]}},\"version\":1}"}},"contracts/MockRealEstate.sol":{"MockRealEstate":{"abi":[{"inputs":[{"internalType":"address","name":"initialOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"mint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nextTokenId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_318":{"entryPoint":null,"id":318,"parameterSlots":1,"returnSlots":0},"@_622":{"entryPoint":null,"id":622,"parameterSlots":2,"returnSlots":0},"@_6929":{"entryPoint":null,"id":6929,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_414":{"entryPoint":344,"id":414,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":625,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":648,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1563,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1580,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":856,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":698,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1177,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":579,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":547,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":992,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1138,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":1012,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1332,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":877,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":803,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1302,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":1002,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1270,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":756,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":709,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":1052,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":542,"id":null,"parameterSlots":0,"returnSlots":0},"shift_left_dynamic":{"entryPoint":893,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1257,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1110,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":906,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1062,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":599,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1105,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:6778:26","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:26","statements":[{"nodeType":"YulAssignment","src":"57:19:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:26"},"nodeType":"YulFunctionCall","src":"67:9:26"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:26"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:26","type":""}],"src":"7:75:26"},{"body":{"nodeType":"YulBlock","src":"177:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:26"},"nodeType":"YulFunctionCall","src":"187:12:26"},"nodeType":"YulExpressionStatement","src":"187:12:26"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:26"},{"body":{"nodeType":"YulBlock","src":"300:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:26"},"nodeType":"YulFunctionCall","src":"310:12:26"},"nodeType":"YulExpressionStatement","src":"310:12:26"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:26"},{"body":{"nodeType":"YulBlock","src":"379:81:26","statements":[{"nodeType":"YulAssignment","src":"389:65:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:26"},"nodeType":"YulFunctionCall","src":"400:54:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:26"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:26","type":""}],"src":"334:126:26"},{"body":{"nodeType":"YulBlock","src":"511:51:26","statements":[{"nodeType":"YulAssignment","src":"521:35:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:26"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:26"},"nodeType":"YulFunctionCall","src":"532:24:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:26"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:26","type":""}],"src":"466:96:26"},{"body":{"nodeType":"YulBlock","src":"611:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:26"},"nodeType":"YulFunctionCall","src":"670:12:26"},"nodeType":"YulExpressionStatement","src":"670:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:26"},"nodeType":"YulFunctionCall","src":"641:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:26"},"nodeType":"YulFunctionCall","src":"631:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:26"},"nodeType":"YulFunctionCall","src":"624:43:26"},"nodeType":"YulIf","src":"621:63:26"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:26","type":""}],"src":"568:122:26"},{"body":{"nodeType":"YulBlock","src":"759:80:26","statements":[{"nodeType":"YulAssignment","src":"769:22:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:26"},"nodeType":"YulFunctionCall","src":"778:13:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:26"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:26"},"nodeType":"YulFunctionCall","src":"800:33:26"},"nodeType":"YulExpressionStatement","src":"800:33:26"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:26","type":""}],"src":"696:143:26"},{"body":{"nodeType":"YulBlock","src":"922:274:26","statements":[{"body":{"nodeType":"YulBlock","src":"968:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"970:77:26"},"nodeType":"YulFunctionCall","src":"970:79:26"},"nodeType":"YulExpressionStatement","src":"970:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"943:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"952:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"939:3:26"},"nodeType":"YulFunctionCall","src":"939:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"964:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"935:3:26"},"nodeType":"YulFunctionCall","src":"935:32:26"},"nodeType":"YulIf","src":"932:119:26"},{"nodeType":"YulBlock","src":"1061:128:26","statements":[{"nodeType":"YulVariableDeclaration","src":"1076:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"1090:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1080:6:26","type":""}]},{"nodeType":"YulAssignment","src":"1105:74:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"1162:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1147:3:26"},"nodeType":"YulFunctionCall","src":"1147:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1171:7:26"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1115:31:26"},"nodeType":"YulFunctionCall","src":"1115:64:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1105:6:26"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"892:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"903:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"915:6:26","type":""}],"src":"845:351:26"},{"body":{"nodeType":"YulBlock","src":"1261:40:26","statements":[{"nodeType":"YulAssignment","src":"1272:22:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1288:5:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1282:5:26"},"nodeType":"YulFunctionCall","src":"1282:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1272:6:26"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1244:5:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1254:6:26","type":""}],"src":"1202:99:26"},{"body":{"nodeType":"YulBlock","src":"1335:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1352:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1355:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1345:6:26"},"nodeType":"YulFunctionCall","src":"1345:88:26"},"nodeType":"YulExpressionStatement","src":"1345:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1449:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1452:4:26","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1442:6:26"},"nodeType":"YulFunctionCall","src":"1442:15:26"},"nodeType":"YulExpressionStatement","src":"1442:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1473:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1476:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1466:6:26"},"nodeType":"YulFunctionCall","src":"1466:15:26"},"nodeType":"YulExpressionStatement","src":"1466:15:26"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1307:180:26"},{"body":{"nodeType":"YulBlock","src":"1521:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1538:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1541:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1531:6:26"},"nodeType":"YulFunctionCall","src":"1531:88:26"},"nodeType":"YulExpressionStatement","src":"1531:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1635:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1638:4:26","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1628:6:26"},"nodeType":"YulFunctionCall","src":"1628:15:26"},"nodeType":"YulExpressionStatement","src":"1628:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1659:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1652:6:26"},"nodeType":"YulFunctionCall","src":"1652:15:26"},"nodeType":"YulExpressionStatement","src":"1652:15:26"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"1493:180:26"},{"body":{"nodeType":"YulBlock","src":"1730:269:26","statements":[{"nodeType":"YulAssignment","src":"1740:22:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1754:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"1760:1:26","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1750:3:26"},"nodeType":"YulFunctionCall","src":"1750:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1740:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"1771:38:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1801:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"1807:1:26","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1797:3:26"},"nodeType":"YulFunctionCall","src":"1797:12:26"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1775:18:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"1848:51:26","statements":[{"nodeType":"YulAssignment","src":"1862:27:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1876:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"1884:4:26","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1872:3:26"},"nodeType":"YulFunctionCall","src":"1872:17:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1862:6:26"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1828:18:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1821:6:26"},"nodeType":"YulFunctionCall","src":"1821:26:26"},"nodeType":"YulIf","src":"1818:81:26"},{"body":{"nodeType":"YulBlock","src":"1951:42:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"1965:16:26"},"nodeType":"YulFunctionCall","src":"1965:18:26"},"nodeType":"YulExpressionStatement","src":"1965:18:26"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1915:18:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1938:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"1946:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1935:2:26"},"nodeType":"YulFunctionCall","src":"1935:14:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1912:2:26"},"nodeType":"YulFunctionCall","src":"1912:38:26"},"nodeType":"YulIf","src":"1909:84:26"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1714:4:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1723:6:26","type":""}],"src":"1679:320:26"},{"body":{"nodeType":"YulBlock","src":"2059:87:26","statements":[{"nodeType":"YulAssignment","src":"2069:11:26","value":{"name":"ptr","nodeType":"YulIdentifier","src":"2077:3:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2069:4:26"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2097:1:26","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2100:3:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2090:6:26"},"nodeType":"YulFunctionCall","src":"2090:14:26"},"nodeType":"YulExpressionStatement","src":"2090:14:26"},{"nodeType":"YulAssignment","src":"2113:26:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2131:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2134:4:26","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2121:9:26"},"nodeType":"YulFunctionCall","src":"2121:18:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2113:4:26"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"2046:3:26","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"2054:4:26","type":""}],"src":"2005:141:26"},{"body":{"nodeType":"YulBlock","src":"2196:49:26","statements":[{"nodeType":"YulAssignment","src":"2206:33:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2224:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"2231:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2220:3:26"},"nodeType":"YulFunctionCall","src":"2220:14:26"},{"kind":"number","nodeType":"YulLiteral","src":"2236:2:26","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2216:3:26"},"nodeType":"YulFunctionCall","src":"2216:23:26"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2206:6:26"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2179:5:26","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2189:6:26","type":""}],"src":"2152:93:26"},{"body":{"nodeType":"YulBlock","src":"2304:54:26","statements":[{"nodeType":"YulAssignment","src":"2314:37:26","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"2339:4:26"},{"name":"value","nodeType":"YulIdentifier","src":"2345:5:26"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2335:3:26"},"nodeType":"YulFunctionCall","src":"2335:16:26"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"2314:8:26"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"2279:4:26","type":""},{"name":"value","nodeType":"YulTypedName","src":"2285:5:26","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"2295:8:26","type":""}],"src":"2251:107:26"},{"body":{"nodeType":"YulBlock","src":"2440:317:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2450:35:26","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"2471:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"2483:1:26","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2467:3:26"},"nodeType":"YulFunctionCall","src":"2467:18:26"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"2454:9:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2494:109:26","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"2525:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"2536:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"2506:18:26"},"nodeType":"YulFunctionCall","src":"2506:97:26"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"2498:4:26","type":""}]},{"nodeType":"YulAssignment","src":"2612:51:26","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"2643:9:26"},{"name":"toInsert","nodeType":"YulIdentifier","src":"2654:8:26"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"2624:18:26"},"nodeType":"YulFunctionCall","src":"2624:39:26"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"2612:8:26"}]},{"nodeType":"YulAssignment","src":"2672:30:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2685:5:26"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"2696:4:26"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2692:3:26"},"nodeType":"YulFunctionCall","src":"2692:9:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2681:3:26"},"nodeType":"YulFunctionCall","src":"2681:21:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2672:5:26"}]},{"nodeType":"YulAssignment","src":"2711:40:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2724:5:26"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"2735:8:26"},{"name":"mask","nodeType":"YulIdentifier","src":"2745:4:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2731:3:26"},"nodeType":"YulFunctionCall","src":"2731:19:26"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2721:2:26"},"nodeType":"YulFunctionCall","src":"2721:30:26"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2711:6:26"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2401:5:26","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"2408:10:26","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"2420:8:26","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2433:6:26","type":""}],"src":"2364:393:26"},{"body":{"nodeType":"YulBlock","src":"2808:32:26","statements":[{"nodeType":"YulAssignment","src":"2818:16:26","value":{"name":"value","nodeType":"YulIdentifier","src":"2829:5:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2818:7:26"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2790:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2800:7:26","type":""}],"src":"2763:77:26"},{"body":{"nodeType":"YulBlock","src":"2878:28:26","statements":[{"nodeType":"YulAssignment","src":"2888:12:26","value":{"name":"value","nodeType":"YulIdentifier","src":"2895:5:26"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2888:3:26"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2864:5:26","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2874:3:26","type":""}],"src":"2846:60:26"},{"body":{"nodeType":"YulBlock","src":"2972:82:26","statements":[{"nodeType":"YulAssignment","src":"2982:66:26","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3040:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3022:17:26"},"nodeType":"YulFunctionCall","src":"3022:24:26"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"3013:8:26"},"nodeType":"YulFunctionCall","src":"3013:34:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2995:17:26"},"nodeType":"YulFunctionCall","src":"2995:53:26"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"2982:9:26"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2952:5:26","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"2962:9:26","type":""}],"src":"2912:142:26"},{"body":{"nodeType":"YulBlock","src":"3107:28:26","statements":[{"nodeType":"YulAssignment","src":"3117:12:26","value":{"name":"value","nodeType":"YulIdentifier","src":"3124:5:26"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3117:3:26"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3093:5:26","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3103:3:26","type":""}],"src":"3060:75:26"},{"body":{"nodeType":"YulBlock","src":"3217:193:26","statements":[{"nodeType":"YulVariableDeclaration","src":"3227:63:26","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"3282:7:26"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3251:30:26"},"nodeType":"YulFunctionCall","src":"3251:39:26"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"3231:16:26","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3306:4:26"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3346:4:26"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3340:5:26"},"nodeType":"YulFunctionCall","src":"3340:11:26"},{"name":"offset","nodeType":"YulIdentifier","src":"3353:6:26"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"3385:16:26"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"3361:23:26"},"nodeType":"YulFunctionCall","src":"3361:41:26"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"3312:27:26"},"nodeType":"YulFunctionCall","src":"3312:91:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3299:6:26"},"nodeType":"YulFunctionCall","src":"3299:105:26"},"nodeType":"YulExpressionStatement","src":"3299:105:26"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3194:4:26","type":""},{"name":"offset","nodeType":"YulTypedName","src":"3200:6:26","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"3208:7:26","type":""}],"src":"3141:269:26"},{"body":{"nodeType":"YulBlock","src":"3465:24:26","statements":[{"nodeType":"YulAssignment","src":"3475:8:26","value":{"kind":"number","nodeType":"YulLiteral","src":"3482:1:26","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3475:3:26"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3461:3:26","type":""}],"src":"3416:73:26"},{"body":{"nodeType":"YulBlock","src":"3548:136:26","statements":[{"nodeType":"YulVariableDeclaration","src":"3558:46:26","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"3572:30:26"},"nodeType":"YulFunctionCall","src":"3572:32:26"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"3562:6:26","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3657:4:26"},{"name":"offset","nodeType":"YulIdentifier","src":"3663:6:26"},{"name":"zero_0","nodeType":"YulIdentifier","src":"3671:6:26"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3613:43:26"},"nodeType":"YulFunctionCall","src":"3613:65:26"},"nodeType":"YulExpressionStatement","src":"3613:65:26"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3534:4:26","type":""},{"name":"offset","nodeType":"YulTypedName","src":"3540:6:26","type":""}],"src":"3495:189:26"},{"body":{"nodeType":"YulBlock","src":"3740:136:26","statements":[{"body":{"nodeType":"YulBlock","src":"3807:63:26","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3851:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"3858:1:26","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"3821:29:26"},"nodeType":"YulFunctionCall","src":"3821:39:26"},"nodeType":"YulExpressionStatement","src":"3821:39:26"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3760:5:26"},{"name":"end","nodeType":"YulIdentifier","src":"3767:3:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3757:2:26"},"nodeType":"YulFunctionCall","src":"3757:14:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3772:26:26","statements":[{"nodeType":"YulAssignment","src":"3774:22:26","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3787:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"3794:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3783:3:26"},"nodeType":"YulFunctionCall","src":"3783:13:26"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"3774:5:26"}]}]},"pre":{"nodeType":"YulBlock","src":"3754:2:26","statements":[]},"src":"3750:120:26"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"3728:5:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"3735:3:26","type":""}],"src":"3690:186:26"},{"body":{"nodeType":"YulBlock","src":"3961:464:26","statements":[{"body":{"nodeType":"YulBlock","src":"3987:431:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4001:54:26","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4049:5:26"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"4017:31:26"},"nodeType":"YulFunctionCall","src":"4017:38:26"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"4005:8:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4068:63:26","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"4091:8:26"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"4119:10:26"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"4101:17:26"},"nodeType":"YulFunctionCall","src":"4101:29:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4087:3:26"},"nodeType":"YulFunctionCall","src":"4087:44:26"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"4072:11:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"4288:27:26","statements":[{"nodeType":"YulAssignment","src":"4290:23:26","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"4305:8:26"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"4290:11:26"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"4272:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"4284:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4269:2:26"},"nodeType":"YulFunctionCall","src":"4269:18:26"},"nodeType":"YulIf","src":"4266:49:26"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"4357:11:26"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"4374:8:26"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"4402:3:26"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"4384:17:26"},"nodeType":"YulFunctionCall","src":"4384:22:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4370:3:26"},"nodeType":"YulFunctionCall","src":"4370:37:26"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"4328:28:26"},"nodeType":"YulFunctionCall","src":"4328:80:26"},"nodeType":"YulExpressionStatement","src":"4328:80:26"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3978:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"3983:2:26","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3975:2:26"},"nodeType":"YulFunctionCall","src":"3975:11:26"},"nodeType":"YulIf","src":"3972:446:26"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"3937:5:26","type":""},{"name":"len","nodeType":"YulTypedName","src":"3944:3:26","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"3949:10:26","type":""}],"src":"3882:543:26"},{"body":{"nodeType":"YulBlock","src":"4494:54:26","statements":[{"nodeType":"YulAssignment","src":"4504:37:26","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"4529:4:26"},{"name":"value","nodeType":"YulIdentifier","src":"4535:5:26"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4525:3:26"},"nodeType":"YulFunctionCall","src":"4525:16:26"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4504:8:26"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4469:4:26","type":""},{"name":"value","nodeType":"YulTypedName","src":"4475:5:26","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4485:8:26","type":""}],"src":"4431:117:26"},{"body":{"nodeType":"YulBlock","src":"4605:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4615:68:26","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4664:1:26","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"4667:5:26"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4660:3:26"},"nodeType":"YulFunctionCall","src":"4660:13:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4679:1:26","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4675:3:26"},"nodeType":"YulFunctionCall","src":"4675:6:26"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"4631:28:26"},"nodeType":"YulFunctionCall","src":"4631:51:26"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4627:3:26"},"nodeType":"YulFunctionCall","src":"4627:56:26"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4619:4:26","type":""}]},{"nodeType":"YulAssignment","src":"4692:25:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4706:4:26"},{"name":"mask","nodeType":"YulIdentifier","src":"4712:4:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4702:3:26"},"nodeType":"YulFunctionCall","src":"4702:15:26"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4692:6:26"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4582:4:26","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"4588:5:26","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4598:6:26","type":""}],"src":"4554:169:26"},{"body":{"nodeType":"YulBlock","src":"4809:214:26","statements":[{"nodeType":"YulAssignment","src":"4942:37:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4969:4:26"},{"name":"len","nodeType":"YulIdentifier","src":"4975:3:26"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"4950:18:26"},"nodeType":"YulFunctionCall","src":"4950:29:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4942:4:26"}]},{"nodeType":"YulAssignment","src":"4988:29:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4999:4:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5009:1:26","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"5012:3:26"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5005:3:26"},"nodeType":"YulFunctionCall","src":"5005:11:26"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4996:2:26"},"nodeType":"YulFunctionCall","src":"4996:21:26"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"4988:4:26"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4790:4:26","type":""},{"name":"len","nodeType":"YulTypedName","src":"4796:3:26","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"4804:4:26","type":""}],"src":"4728:295:26"},{"body":{"nodeType":"YulBlock","src":"5120:1303:26","statements":[{"nodeType":"YulVariableDeclaration","src":"5131:51:26","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5178:3:26"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5145:32:26"},"nodeType":"YulFunctionCall","src":"5145:37:26"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"5135:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"5267:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5269:16:26"},"nodeType":"YulFunctionCall","src":"5269:18:26"},"nodeType":"YulExpressionStatement","src":"5269:18:26"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5239:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"5247:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5236:2:26"},"nodeType":"YulFunctionCall","src":"5236:30:26"},"nodeType":"YulIf","src":"5233:56:26"},{"nodeType":"YulVariableDeclaration","src":"5299:52:26","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5345:4:26"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5339:5:26"},"nodeType":"YulFunctionCall","src":"5339:11:26"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"5313:25:26"},"nodeType":"YulFunctionCall","src":"5313:38:26"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"5303:6:26","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5444:4:26"},{"name":"oldLen","nodeType":"YulIdentifier","src":"5450:6:26"},{"name":"newLen","nodeType":"YulIdentifier","src":"5458:6:26"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"5398:45:26"},"nodeType":"YulFunctionCall","src":"5398:67:26"},"nodeType":"YulExpressionStatement","src":"5398:67:26"},{"nodeType":"YulVariableDeclaration","src":"5475:18:26","value":{"kind":"number","nodeType":"YulLiteral","src":"5492:1:26","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"5479:9:26","type":""}]},{"nodeType":"YulAssignment","src":"5503:17:26","value":{"kind":"number","nodeType":"YulLiteral","src":"5516:4:26","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"5503:9:26"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"5567:611:26","statements":[{"nodeType":"YulVariableDeclaration","src":"5581:37:26","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5600:6:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5612:4:26","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5608:3:26"},"nodeType":"YulFunctionCall","src":"5608:9:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5596:3:26"},"nodeType":"YulFunctionCall","src":"5596:22:26"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"5585:7:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5632:51:26","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5678:4:26"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"5646:31:26"},"nodeType":"YulFunctionCall","src":"5646:37:26"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"5636:6:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5696:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"5705:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5700:1:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"5764:163:26","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5789:6:26"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5807:3:26"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5812:9:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5803:3:26"},"nodeType":"YulFunctionCall","src":"5803:19:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5797:5:26"},"nodeType":"YulFunctionCall","src":"5797:26:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5782:6:26"},"nodeType":"YulFunctionCall","src":"5782:42:26"},"nodeType":"YulExpressionStatement","src":"5782:42:26"},{"nodeType":"YulAssignment","src":"5841:24:26","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5855:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"5863:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5851:3:26"},"nodeType":"YulFunctionCall","src":"5851:14:26"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5841:6:26"}]},{"nodeType":"YulAssignment","src":"5882:31:26","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"5899:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5910:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5895:3:26"},"nodeType":"YulFunctionCall","src":"5895:18:26"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"5882:9:26"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5730:1:26"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"5733:7:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5727:2:26"},"nodeType":"YulFunctionCall","src":"5727:14:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5742:21:26","statements":[{"nodeType":"YulAssignment","src":"5744:17:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5753:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"5756:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5749:3:26"},"nodeType":"YulFunctionCall","src":"5749:12:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5744:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"5723:3:26","statements":[]},"src":"5719:208:26"},{"body":{"nodeType":"YulBlock","src":"5963:156:26","statements":[{"nodeType":"YulVariableDeclaration","src":"5981:43:26","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6008:3:26"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"6013:9:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6004:3:26"},"nodeType":"YulFunctionCall","src":"6004:19:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5998:5:26"},"nodeType":"YulFunctionCall","src":"5998:26:26"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"5985:9:26","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"6048:6:26"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"6075:9:26"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"6090:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"6098:4:26","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6086:3:26"},"nodeType":"YulFunctionCall","src":"6086:17:26"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"6056:18:26"},"nodeType":"YulFunctionCall","src":"6056:48:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6041:6:26"},"nodeType":"YulFunctionCall","src":"6041:64:26"},"nodeType":"YulExpressionStatement","src":"6041:64:26"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"5946:7:26"},{"name":"newLen","nodeType":"YulIdentifier","src":"5955:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5943:2:26"},"nodeType":"YulFunctionCall","src":"5943:19:26"},"nodeType":"YulIf","src":"5940:179:26"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6139:4:26"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"6153:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"6161:1:26","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6149:3:26"},"nodeType":"YulFunctionCall","src":"6149:14:26"},{"kind":"number","nodeType":"YulLiteral","src":"6165:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6145:3:26"},"nodeType":"YulFunctionCall","src":"6145:22:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6132:6:26"},"nodeType":"YulFunctionCall","src":"6132:36:26"},"nodeType":"YulExpressionStatement","src":"6132:36:26"}]},"nodeType":"YulCase","src":"5560:618:26","value":{"kind":"number","nodeType":"YulLiteral","src":"5565:1:26","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"6195:222:26","statements":[{"nodeType":"YulVariableDeclaration","src":"6209:14:26","value":{"kind":"number","nodeType":"YulLiteral","src":"6222:1:26","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6213:5:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"6246:67:26","statements":[{"nodeType":"YulAssignment","src":"6264:35:26","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6283:3:26"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"6288:9:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6279:3:26"},"nodeType":"YulFunctionCall","src":"6279:19:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6273:5:26"},"nodeType":"YulFunctionCall","src":"6273:26:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6264:5:26"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"6239:6:26"},"nodeType":"YulIf","src":"6236:77:26"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6333:4:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6392:5:26"},{"name":"newLen","nodeType":"YulIdentifier","src":"6399:6:26"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"6339:52:26"},"nodeType":"YulFunctionCall","src":"6339:67:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6326:6:26"},"nodeType":"YulFunctionCall","src":"6326:81:26"},"nodeType":"YulExpressionStatement","src":"6326:81:26"}]},"nodeType":"YulCase","src":"6187:230:26","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5540:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"5548:2:26","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5537:2:26"},"nodeType":"YulFunctionCall","src":"5537:14:26"},"nodeType":"YulSwitch","src":"5530:887:26"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5109:4:26","type":""},{"name":"src","nodeType":"YulTypedName","src":"5115:3:26","type":""}],"src":"5028:1395:26"},{"body":{"nodeType":"YulBlock","src":"6494:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6511:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6534:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"6516:17:26"},"nodeType":"YulFunctionCall","src":"6516:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6504:6:26"},"nodeType":"YulFunctionCall","src":"6504:37:26"},"nodeType":"YulExpressionStatement","src":"6504:37:26"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6482:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6489:3:26","type":""}],"src":"6429:118:26"},{"body":{"nodeType":"YulBlock","src":"6651:124:26","statements":[{"nodeType":"YulAssignment","src":"6661:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6673:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"6684:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6669:3:26"},"nodeType":"YulFunctionCall","src":"6669:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6661:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6741:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6754:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"6765:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6750:3:26"},"nodeType":"YulFunctionCall","src":"6750:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6697:43:26"},"nodeType":"YulFunctionCall","src":"6697:71:26"},"nodeType":"YulExpressionStatement","src":"6697:71:26"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6623:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6635:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6646:4:26","type":""}],"src":"6553:222:26"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":26,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2773 CODESIZE SUB DUP1 PUSH3 0x2773 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x288 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D6F636B5265616C457374617465000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D52450000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH3 0xB5 SWAP2 SWAP1 PUSH3 0x534 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0xC7 SWAP2 SWAP1 PUSH3 0x534 JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x13F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x136 SWAP2 SWAP1 PUSH3 0x62C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x150 DUP2 PUSH3 0x158 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH3 0x649 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x250 DUP3 PUSH3 0x223 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x262 DUP2 PUSH3 0x243 JUMP JUMPDEST DUP2 EQ PUSH3 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x282 DUP2 PUSH3 0x257 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x2A1 JUMPI PUSH3 0x2A0 PUSH3 0x21E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2B1 DUP5 DUP3 DUP6 ADD PUSH3 0x271 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x33C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x352 JUMPI PUSH3 0x351 PUSH3 0x2F4 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x3BC PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x37D JUMP JUMPDEST PUSH3 0x3C8 DUP7 DUP4 PUSH3 0x37D JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x415 PUSH3 0x40F PUSH3 0x409 DUP5 PUSH3 0x3E0 JUMP JUMPDEST PUSH3 0x3EA JUMP JUMPDEST PUSH3 0x3E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x431 DUP4 PUSH3 0x3F4 JUMP JUMPDEST PUSH3 0x449 PUSH3 0x440 DUP3 PUSH3 0x41C JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x38A JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x460 PUSH3 0x451 JUMP JUMPDEST PUSH3 0x46D DUP2 DUP5 DUP5 PUSH3 0x426 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x495 JUMPI PUSH3 0x489 PUSH1 0x0 DUP3 PUSH3 0x456 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x473 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x4E4 JUMPI PUSH3 0x4AE DUP2 PUSH3 0x358 JUMP JUMPDEST PUSH3 0x4B9 DUP5 PUSH3 0x36D JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x4C9 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x4E1 PUSH3 0x4D8 DUP6 PUSH3 0x36D JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x472 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x509 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x4E9 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x524 DUP4 DUP4 PUSH3 0x4F6 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x53F DUP3 PUSH3 0x2BA JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x55B JUMPI PUSH3 0x55A PUSH3 0x2C5 JUMP JUMPDEST JUMPDEST PUSH3 0x567 DUP3 SLOAD PUSH3 0x323 JUMP JUMPDEST PUSH3 0x574 DUP3 DUP3 DUP6 PUSH3 0x499 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x5AC JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x597 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x5A3 DUP6 DUP3 PUSH3 0x516 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x613 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x5BC DUP7 PUSH3 0x358 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x5E6 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x5BF JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x606 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x602 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x4F6 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x626 DUP2 PUSH3 0x243 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x643 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x61B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x211A DUP1 PUSH3 0x659 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x379 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0x75794A3C EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2C3 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x24D JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x199 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x135 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x18ED JUMP JUMPDEST PUSH2 0x395 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x1935 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x153 PUSH2 0x477 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x19E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x1A38 JUMP JUMPDEST PUSH2 0x509 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x1AA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x1AED JUMP JUMPDEST PUSH2 0x525 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x1B2D JUMP JUMPDEST PUSH2 0x53B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x1B2D JUMP JUMPDEST PUSH2 0x63D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x207 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x202 SWAP2 SWAP1 PUSH2 0x1A38 JUMP JUMPDEST PUSH2 0x65D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x1AA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x237 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x232 SWAP2 SWAP1 PUSH2 0x1B80 JUMP JUMPDEST PUSH2 0x66F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x244 SWAP2 SWAP1 PUSH2 0x1BBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x267 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x1B80 JUMP JUMPDEST PUSH2 0x6AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x1BBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x285 PUSH2 0x765 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28F PUSH2 0x779 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29C SWAP2 SWAP1 PUSH2 0x1BBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AD PUSH2 0x77F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x1AA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CB PUSH2 0x7A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0x19E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F6 SWAP2 SWAP1 PUSH2 0x1C03 JUMP JUMPDEST PUSH2 0x83B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x317 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x312 SWAP2 SWAP1 PUSH2 0x1D78 JUMP JUMPDEST PUSH2 0x851 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x333 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32E SWAP2 SWAP1 PUSH2 0x1A38 JUMP JUMPDEST PUSH2 0x876 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x340 SWAP2 SWAP1 PUSH2 0x19E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x363 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35E SWAP2 SWAP1 PUSH2 0x1DFB JUMP JUMPDEST PUSH2 0x8DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x370 SWAP2 SWAP1 PUSH2 0x1935 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x393 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38E SWAP2 SWAP1 PUSH2 0x1B80 JUMP JUMPDEST PUSH2 0x973 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x460 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x470 JUMPI POP PUSH2 0x46F DUP3 PUSH2 0x9F9 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x486 SWAP1 PUSH2 0x1E6A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4B2 SWAP1 PUSH2 0x1E6A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4FF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4D4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4FF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4E2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x514 DUP3 PUSH2 0xA63 JUMP JUMPDEST POP PUSH2 0x51E DUP3 PUSH2 0xAEB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x537 DUP3 DUP3 PUSH2 0x532 PUSH2 0xB28 JUMP JUMPDEST PUSH2 0xB30 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5AD JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A4 SWAP2 SWAP1 PUSH2 0x1AA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5C1 DUP4 DUP4 PUSH2 0x5BC PUSH2 0xB28 JUMP JUMPDEST PUSH2 0xB42 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x637 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x62E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x658 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x851 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x668 DUP3 PUSH2 0xA63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x679 PUSH2 0xD5C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD SWAP1 POP PUSH2 0x68A DUP4 DUP3 PUSH2 0xDE3 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x69D SWAP1 PUSH2 0x1F01 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x71E JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP2 SWAP1 PUSH2 0x1AA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x76D PUSH2 0xD5C JUMP JUMPDEST PUSH2 0x777 PUSH1 0x0 PUSH2 0xEDC JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x7B8 SWAP1 PUSH2 0x1E6A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7E4 SWAP1 PUSH2 0x1E6A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x831 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x806 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x831 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x814 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x84D PUSH2 0x846 PUSH2 0xB28 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xFA2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x85C DUP5 DUP5 DUP5 PUSH2 0x53B JUMP JUMPDEST PUSH2 0x870 PUSH2 0x867 PUSH2 0xB28 JUMP JUMPDEST DUP6 DUP6 DUP6 DUP6 PUSH2 0x1111 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x881 DUP3 PUSH2 0xA63 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x88C PUSH2 0x12C2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x8AC JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8D7 JUMP JUMPDEST DUP1 PUSH2 0x8B6 DUP5 PUSH2 0x12D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8C7 SWAP3 SWAP2 SWAP1 PUSH2 0x1F85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x97B PUSH2 0xD5C JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9ED JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E4 SWAP2 SWAP1 PUSH2 0x1AA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9F6 DUP2 PUSH2 0xEDC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA6F DUP4 PUSH2 0x13A7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAE2 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD9 SWAP2 SWAP1 PUSH2 0x1BBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB3D DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x13E4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB4E DUP5 PUSH2 0x13A7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB90 JUMPI PUSH2 0xB8F DUP2 DUP5 DUP7 PUSH2 0x15A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC21 JUMPI PUSH2 0xBD2 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x13E4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCA4 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xD64 PUSH2 0xB28 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD82 PUSH2 0x77F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDE1 JUMPI PUSH2 0xDA5 PUSH2 0xB28 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD8 SWAP2 SWAP1 PUSH2 0x1AA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE55 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE4C SWAP2 SWAP1 PUSH2 0x1AA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE63 DUP4 DUP4 PUSH1 0x0 PUSH2 0xB42 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xED7 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xECE SWAP2 SWAP1 PUSH2 0x1AA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1013 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x100A SWAP2 SWAP1 PUSH2 0x1AA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1104 SWAP2 SWAP1 PUSH2 0x1935 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x12BB JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 DUP7 DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1170 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FFE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x11AC JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11A9 SWAP2 SWAP1 PUSH2 0x205F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1230 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x11DC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x11E1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1228 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121F SWAP2 SWAP1 PUSH2 0x1AA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x12B9 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12B0 SWAP2 SWAP1 PUSH2 0x1AA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x12E8 DUP5 PUSH2 0x166D JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1307 JUMPI PUSH2 0x1306 PUSH2 0x1C4D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1339 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x139C JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1390 JUMPI PUSH2 0x138F PUSH2 0x208C JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x1347 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x141D JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1551 JUMPI PUSH1 0x0 PUSH2 0x142D DUP5 PUSH2 0xA63 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1498 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x14AB JUMPI POP PUSH2 0x14A9 DUP2 DUP5 PUSH2 0x8DF JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x14ED JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14E4 SWAP2 SWAP1 PUSH2 0x1AA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x154F JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x15B4 DUP4 DUP4 DUP4 PUSH2 0x17C0 JUMP JUMPDEST PUSH2 0x1668 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1629 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1620 SWAP2 SWAP1 PUSH2 0x1BBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x165F SWAP3 SWAP2 SWAP1 PUSH2 0x20BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x16CB JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x16C1 JUMPI PUSH2 0x16C0 PUSH2 0x208C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1708 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x16FE JUMPI PUSH2 0x16FD PUSH2 0x208C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1737 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x172D JUMPI PUSH2 0x172C PUSH2 0x208C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1760 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1756 JUMPI PUSH2 0x1755 PUSH2 0x208C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1785 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x177B JUMPI PUSH2 0x177A PUSH2 0x208C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x17A8 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x179E JUMPI PUSH2 0x179D PUSH2 0x208C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x17B7 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1878 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1839 JUMPI POP PUSH2 0x1838 DUP5 DUP5 PUSH2 0x8DF JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1877 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x185F DUP4 PUSH2 0xAEB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18CA DUP2 PUSH2 0x1895 JUMP JUMPDEST DUP2 EQ PUSH2 0x18D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18E7 DUP2 PUSH2 0x18C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1903 JUMPI PUSH2 0x1902 PUSH2 0x188B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1911 DUP5 DUP3 DUP6 ADD PUSH2 0x18D8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x192F DUP2 PUSH2 0x191A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x194A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1926 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x198A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x196F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B2 DUP3 PUSH2 0x1950 JUMP JUMPDEST PUSH2 0x19BC DUP2 DUP6 PUSH2 0x195B JUMP JUMPDEST SWAP4 POP PUSH2 0x19CC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x196C JUMP JUMPDEST PUSH2 0x19D5 DUP2 PUSH2 0x1996 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19FA DUP2 DUP5 PUSH2 0x19A7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A15 DUP2 PUSH2 0x1A02 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A32 DUP2 PUSH2 0x1A0C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A4E JUMPI PUSH2 0x1A4D PUSH2 0x188B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A5C DUP5 DUP3 DUP6 ADD PUSH2 0x1A23 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A90 DUP3 PUSH2 0x1A65 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AA0 DUP2 PUSH2 0x1A85 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1ABB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A97 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1ACA DUP2 PUSH2 0x1A85 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AE7 DUP2 PUSH2 0x1AC1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B04 JUMPI PUSH2 0x1B03 PUSH2 0x188B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B12 DUP6 DUP3 DUP7 ADD PUSH2 0x1AD8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B23 DUP6 DUP3 DUP7 ADD PUSH2 0x1A23 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B46 JUMPI PUSH2 0x1B45 PUSH2 0x188B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B54 DUP7 DUP3 DUP8 ADD PUSH2 0x1AD8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1B65 DUP7 DUP3 DUP8 ADD PUSH2 0x1AD8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1B76 DUP7 DUP3 DUP8 ADD PUSH2 0x1A23 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B96 JUMPI PUSH2 0x1B95 PUSH2 0x188B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BA4 DUP5 DUP3 DUP6 ADD PUSH2 0x1AD8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BB6 DUP2 PUSH2 0x1A02 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BD1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1BAD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BE0 DUP2 PUSH2 0x191A JUMP JUMPDEST DUP2 EQ PUSH2 0x1BEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BFD DUP2 PUSH2 0x1BD7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C1A JUMPI PUSH2 0x1C19 PUSH2 0x188B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C28 DUP6 DUP3 DUP7 ADD PUSH2 0x1AD8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C39 DUP6 DUP3 DUP7 ADD PUSH2 0x1BEE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1C85 DUP3 PUSH2 0x1996 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1CA4 JUMPI PUSH2 0x1CA3 PUSH2 0x1C4D JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CB7 PUSH2 0x1881 JUMP JUMPDEST SWAP1 POP PUSH2 0x1CC3 DUP3 DUP3 PUSH2 0x1C7C JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1CE3 JUMPI PUSH2 0x1CE2 PUSH2 0x1C4D JUMP JUMPDEST JUMPDEST PUSH2 0x1CEC DUP3 PUSH2 0x1996 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D1B PUSH2 0x1D16 DUP5 PUSH2 0x1CC8 JUMP JUMPDEST PUSH2 0x1CAD JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1D37 JUMPI PUSH2 0x1D36 PUSH2 0x1C48 JUMP JUMPDEST JUMPDEST PUSH2 0x1D42 DUP5 DUP3 DUP6 PUSH2 0x1CF9 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1D5F JUMPI PUSH2 0x1D5E PUSH2 0x1C43 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1D6F DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1D08 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1D92 JUMPI PUSH2 0x1D91 PUSH2 0x188B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1DA0 DUP8 DUP3 DUP9 ADD PUSH2 0x1AD8 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1DB1 DUP8 DUP3 DUP9 ADD PUSH2 0x1AD8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1DC2 DUP8 DUP3 DUP9 ADD PUSH2 0x1A23 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DE3 JUMPI PUSH2 0x1DE2 PUSH2 0x1890 JUMP JUMPDEST JUMPDEST PUSH2 0x1DEF DUP8 DUP3 DUP9 ADD PUSH2 0x1D4A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E12 JUMPI PUSH2 0x1E11 PUSH2 0x188B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E20 DUP6 DUP3 DUP7 ADD PUSH2 0x1AD8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E31 DUP6 DUP3 DUP7 ADD PUSH2 0x1AD8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1E82 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1E95 JUMPI PUSH2 0x1E94 PUSH2 0x1E3B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1EB0 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1A97 JUMP JUMPDEST PUSH2 0x1EBD PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1BAD JUMP JUMPDEST PUSH2 0x1ECA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1A97 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1F0C DUP3 PUSH2 0x1A02 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1F3E JUMPI PUSH2 0x1F3D PUSH2 0x1ED2 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F5F DUP3 PUSH2 0x1950 JUMP JUMPDEST PUSH2 0x1F69 DUP2 DUP6 PUSH2 0x1F49 JUMP JUMPDEST SWAP4 POP PUSH2 0x1F79 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x196C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F91 DUP3 DUP6 PUSH2 0x1F54 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F9D DUP3 DUP5 PUSH2 0x1F54 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FD0 DUP3 PUSH2 0x1FA9 JUMP JUMPDEST PUSH2 0x1FDA DUP2 DUP6 PUSH2 0x1FB4 JUMP JUMPDEST SWAP4 POP PUSH2 0x1FEA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x196C JUMP JUMPDEST PUSH2 0x1FF3 DUP2 PUSH2 0x1996 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2013 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1A97 JUMP JUMPDEST PUSH2 0x2020 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1A97 JUMP JUMPDEST PUSH2 0x202D PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1BAD JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x203F DUP2 DUP5 PUSH2 0x1FC5 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2059 DUP2 PUSH2 0x18C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2075 JUMPI PUSH2 0x2074 PUSH2 0x188B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2083 DUP5 DUP3 DUP6 ADD PUSH2 0x204A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x20D0 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1A97 JUMP JUMPDEST PUSH2 0x20DD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1BAD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 DUP7 SLT PUSH27 0x7F2E901709FF7C9B8B563D43641AC56614C50C274B3B736C5A9B05 SWAP1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"176:401:23:-:0;;;261:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;355:12;1380:113:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1454:5;1446;:13;;;;;;:::i;:::-;;1479:7;1469;:17;;;;;;:::i;:::-;;1380:113;;1297:1:6;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;261:116:23;176:401;;2912:187:6;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:26:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:99::-;1254:6;1288:5;1282:12;1272:22;;1202:99;;;:::o;1307:180::-;1355:77;1352:1;1345:88;1452:4;1449:1;1442:15;1476:4;1473:1;1466:15;1493:180;1541:77;1538:1;1531:88;1638:4;1635:1;1628:15;1662:4;1659:1;1652:15;1679:320;1723:6;1760:1;1754:4;1750:12;1740:22;;1807:1;1801:4;1797:12;1828:18;1818:81;;1884:4;1876:6;1872:17;1862:27;;1818:81;1946:2;1938:6;1935:14;1915:18;1912:38;1909:84;;1965:18;;:::i;:::-;1909:84;1730:269;1679:320;;;:::o;2005:141::-;2054:4;2077:3;2069:11;;2100:3;2097:1;2090:14;2134:4;2131:1;2121:18;2113:26;;2005:141;;;:::o;2152:93::-;2189:6;2236:2;2231;2224:5;2220:14;2216:23;2206:33;;2152:93;;;:::o;2251:107::-;2295:8;2345:5;2339:4;2335:16;2314:37;;2251:107;;;;:::o;2364:393::-;2433:6;2483:1;2471:10;2467:18;2506:97;2536:66;2525:9;2506:97;:::i;:::-;2624:39;2654:8;2643:9;2624:39;:::i;:::-;2612:51;;2696:4;2692:9;2685:5;2681:21;2672:30;;2745:4;2735:8;2731:19;2724:5;2721:30;2711:40;;2440:317;;2364:393;;;;;:::o;2763:77::-;2800:7;2829:5;2818:16;;2763:77;;;:::o;2846:60::-;2874:3;2895:5;2888:12;;2846:60;;;:::o;2912:142::-;2962:9;2995:53;3013:34;3022:24;3040:5;3022:24;:::i;:::-;3013:34;:::i;:::-;2995:53;:::i;:::-;2982:66;;2912:142;;;:::o;3060:75::-;3103:3;3124:5;3117:12;;3060:75;;;:::o;3141:269::-;3251:39;3282:7;3251:39;:::i;:::-;3312:91;3361:41;3385:16;3361:41;:::i;:::-;3353:6;3346:4;3340:11;3312:91;:::i;:::-;3306:4;3299:105;3217:193;3141:269;;;:::o;3416:73::-;3461:3;3416:73;:::o;3495:189::-;3572:32;;:::i;:::-;3613:65;3671:6;3663;3657:4;3613:65;:::i;:::-;3548:136;3495:189;;:::o;3690:186::-;3750:120;3767:3;3760:5;3757:14;3750:120;;;3821:39;3858:1;3851:5;3821:39;:::i;:::-;3794:1;3787:5;3783:13;3774:22;;3750:120;;;3690:186;;:::o;3882:543::-;3983:2;3978:3;3975:11;3972:446;;;4017:38;4049:5;4017:38;:::i;:::-;4101:29;4119:10;4101:29;:::i;:::-;4091:8;4087:44;4284:2;4272:10;4269:18;4266:49;;;4305:8;4290:23;;4266:49;4328:80;4384:22;4402:3;4384:22;:::i;:::-;4374:8;4370:37;4357:11;4328:80;:::i;:::-;3987:431;;3972:446;3882:543;;;:::o;4431:117::-;4485:8;4535:5;4529:4;4525:16;4504:37;;4431:117;;;;:::o;4554:169::-;4598:6;4631:51;4679:1;4675:6;4667:5;4664:1;4660:13;4631:51;:::i;:::-;4627:56;4712:4;4706;4702:15;4692:25;;4605:118;4554:169;;;;:::o;4728:295::-;4804:4;4950:29;4975:3;4969:4;4950:29;:::i;:::-;4942:37;;5012:3;5009:1;5005:11;4999:4;4996:21;4988:29;;4728:295;;;;:::o;5028:1395::-;5145:37;5178:3;5145:37;:::i;:::-;5247:18;5239:6;5236:30;5233:56;;;5269:18;;:::i;:::-;5233:56;5313:38;5345:4;5339:11;5313:38;:::i;:::-;5398:67;5458:6;5450;5444:4;5398:67;:::i;:::-;5492:1;5516:4;5503:17;;5548:2;5540:6;5537:14;5565:1;5560:618;;;;6222:1;6239:6;6236:77;;;6288:9;6283:3;6279:19;6273:26;6264:35;;6236:77;6339:67;6399:6;6392:5;6339:67;:::i;:::-;6333:4;6326:81;6195:222;5530:887;;5560:618;5612:4;5608:9;5600:6;5596:22;5646:37;5678:4;5646:37;:::i;:::-;5705:1;5719:208;5733:7;5730:1;5727:14;5719:208;;;5812:9;5807:3;5803:19;5797:26;5789:6;5782:42;5863:1;5855:6;5851:14;5841:24;;5910:2;5899:9;5895:18;5882:31;;5756:4;5753:1;5749:12;5744:17;;5719:208;;;5955:6;5946:7;5943:19;5940:179;;;6013:9;6008:3;6004:19;5998:26;6056:48;6098:4;6090:6;6086:17;6075:9;6056:48;:::i;:::-;6048:6;6041:64;5963:156;5940:179;6165:1;6161;6153:6;6149:14;6145:22;6139:4;6132:36;5567:611;;;5530:887;;5120:1303;;;5028:1395;;:::o;6429:118::-;6516:24;6534:5;6516:24;:::i;:::-;6511:3;6504:37;6429:118;;:::o;6553:222::-;6646:4;6684:2;6673:9;6669:18;6661:26;;6697:71;6765:1;6754:9;6750:17;6741:6;6697:71;:::i;:::-;6553:222;;;;:::o;176:401:23:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_1376":{"entryPoint":2864,"id":1376,"parameterSlots":3,"returnSlots":0},"@_approve_1442":{"entryPoint":5092,"id":1442,"parameterSlots":4,"returnSlots":0},"@_baseURI_757":{"entryPoint":4802,"id":757,"parameterSlots":0,"returnSlots":1},"@_checkAuthorized_1016":{"entryPoint":5545,"id":1016,"parameterSlots":3,"returnSlots":0},"@_checkOwner_352":{"entryPoint":3420,"id":352,"parameterSlots":0,"returnSlots":0},"@_getApproved_943":{"entryPoint":2795,"id":943,"parameterSlots":1,"returnSlots":1},"@_isAuthorized_979":{"entryPoint":6080,"id":979,"parameterSlots":3,"returnSlots":1},"@_mint_1172":{"entryPoint":3555,"id":1172,"parameterSlots":2,"returnSlots":0},"@_msgSender_1761":{"entryPoint":2856,"id":1761,"parameterSlots":0,"returnSlots":1},"@_ownerOf_930":{"entryPoint":5031,"id":930,"parameterSlots":1,"returnSlots":1},"@_requireOwned_1508":{"entryPoint":2659,"id":1508,"parameterSlots":1,"returnSlots":1},"@_setApprovalForAll_1479":{"entryPoint":4002,"id":1479,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_414":{"entryPoint":3804,"id":414,"parameterSlots":1,"returnSlots":0},"@_update_1122":{"entryPoint":2882,"id":1122,"parameterSlots":3,"returnSlots":1},"@approve_773":{"entryPoint":1317,"id":773,"parameterSlots":2,"returnSlots":0},"@balanceOf_681":{"entryPoint":1707,"id":681,"parameterSlots":1,"returnSlots":1},"@checkOnERC721Received_1748":{"entryPoint":4369,"id":1748,"parameterSlots":5,"returnSlots":0},"@getApproved_790":{"entryPoint":1289,"id":790,"parameterSlots":1,"returnSlots":1},"@isApprovedForAll_823":{"entryPoint":2271,"id":823,"parameterSlots":2,"returnSlots":1},"@log10_4722":{"entryPoint":5741,"id":4722,"parameterSlots":1,"returnSlots":1},"@mint_6953":{"entryPoint":1647,"id":6953,"parameterSlots":1,"returnSlots":1},"@name_703":{"entryPoint":1143,"id":703,"parameterSlots":0,"returnSlots":1},"@nextTokenId_6916":{"entryPoint":1913,"id":6916,"parameterSlots":0,"returnSlots":0},"@ownerOf_694":{"entryPoint":1629,"id":694,"parameterSlots":1,"returnSlots":1},"@owner_335":{"entryPoint":1919,"id":335,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_366":{"entryPoint":1893,"id":366,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_887":{"entryPoint":1597,"id":887,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_917":{"entryPoint":2129,"id":917,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_806":{"entryPoint":2107,"id":806,"parameterSlots":2,"returnSlots":0},"@supportsInterface_3256":{"entryPoint":2553,"id":3256,"parameterSlots":1,"returnSlots":1},"@supportsInterface_653":{"entryPoint":917,"id":653,"parameterSlots":1,"returnSlots":1},"@symbol_712":{"entryPoint":1961,"id":712,"parameterSlots":0,"returnSlots":1},"@toString_1945":{"entryPoint":4825,"id":1945,"parameterSlots":1,"returnSlots":1},"@tokenURI_748":{"entryPoint":2166,"id":748,"parameterSlots":1,"returnSlots":1},"@transferFrom_869":{"entryPoint":1339,"id":869,"parameterSlots":3,"returnSlots":0},"@transferOwnership_394":{"entryPoint":2419,"id":394,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":7432,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":6872,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":7150,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":6360,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":8266,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":7498,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":6691,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":7040,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":7675,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":6957,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":7544,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":7171,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":6893,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":6381,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":8287,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":6712,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":6807,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":6438,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":8133,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":6567,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":8020,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":7085,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":8069,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":6822,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":8190,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":8379,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed":{"entryPoint":7835,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":6453,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6624,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":7100,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":7341,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":6273,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":7368,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":8105,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":6480,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":8116,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":6491,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":8009,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":6789,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":6426,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":6293,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":6757,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":6658,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":7417,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":6508,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":7786,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":7292,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":7937,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":7890,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":8332,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":7739,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":7245,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":7235,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":7240,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":6288,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":6283,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":6550,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":6849,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":7127,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":6337,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":6668,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:15173:26","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:26","statements":[{"nodeType":"YulAssignment","src":"57:19:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:26"},"nodeType":"YulFunctionCall","src":"67:9:26"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:26"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:26","type":""}],"src":"7:75:26"},{"body":{"nodeType":"YulBlock","src":"177:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:26"},"nodeType":"YulFunctionCall","src":"187:12:26"},"nodeType":"YulExpressionStatement","src":"187:12:26"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:26"},{"body":{"nodeType":"YulBlock","src":"300:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:26"},"nodeType":"YulFunctionCall","src":"310:12:26"},"nodeType":"YulExpressionStatement","src":"310:12:26"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:26"},{"body":{"nodeType":"YulBlock","src":"378:105:26","statements":[{"nodeType":"YulAssignment","src":"388:89:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:26","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:26"},"nodeType":"YulFunctionCall","src":"399:78:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:26"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:26","type":""}],"src":"334:149:26"},{"body":{"nodeType":"YulBlock","src":"531:78:26","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:26"},"nodeType":"YulFunctionCall","src":"589:12:26"},"nodeType":"YulExpressionStatement","src":"589:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:26"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:26"},"nodeType":"YulFunctionCall","src":"561:23:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:26"},"nodeType":"YulFunctionCall","src":"551:34:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:26"},"nodeType":"YulFunctionCall","src":"544:42:26"},"nodeType":"YulIf","src":"541:62:26"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:26","type":""}],"src":"489:120:26"},{"body":{"nodeType":"YulBlock","src":"666:86:26","statements":[{"nodeType":"YulAssignment","src":"676:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:26"},"nodeType":"YulFunctionCall","src":"685:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:26"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:26"},"nodeType":"YulFunctionCall","src":"714:32:26"},"nodeType":"YulExpressionStatement","src":"714:32:26"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:26","type":""}],"src":"615:137:26"},{"body":{"nodeType":"YulBlock","src":"823:262:26","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:26"},"nodeType":"YulFunctionCall","src":"871:79:26"},"nodeType":"YulExpressionStatement","src":"871:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:26"},"nodeType":"YulFunctionCall","src":"840:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:26"},"nodeType":"YulFunctionCall","src":"836:32:26"},"nodeType":"YulIf","src":"833:119:26"},{"nodeType":"YulBlock","src":"962:116:26","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:26","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:26"},"nodeType":"YulFunctionCall","src":"1036:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:26"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:26"},"nodeType":"YulFunctionCall","src":"1016:52:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:26"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:26","type":""}],"src":"758:327:26"},{"body":{"nodeType":"YulBlock","src":"1133:48:26","statements":[{"nodeType":"YulAssignment","src":"1143:32:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:26"},"nodeType":"YulFunctionCall","src":"1161:13:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:26"},"nodeType":"YulFunctionCall","src":"1154:21:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:26"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:26","type":""}],"src":"1091:90:26"},{"body":{"nodeType":"YulBlock","src":"1246:50:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:26"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:26"},"nodeType":"YulFunctionCall","src":"1268:21:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:26"},"nodeType":"YulFunctionCall","src":"1256:34:26"},"nodeType":"YulExpressionStatement","src":"1256:34:26"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:26","type":""}],"src":"1187:109:26"},{"body":{"nodeType":"YulBlock","src":"1394:118:26","statements":[{"nodeType":"YulAssignment","src":"1404:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:26"},"nodeType":"YulFunctionCall","src":"1412:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:26"},"nodeType":"YulFunctionCall","src":"1487:17:26"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:26"},"nodeType":"YulFunctionCall","src":"1440:65:26"},"nodeType":"YulExpressionStatement","src":"1440:65:26"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:26","type":""}],"src":"1302:210:26"},{"body":{"nodeType":"YulBlock","src":"1577:40:26","statements":[{"nodeType":"YulAssignment","src":"1588:22:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1604:5:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1598:5:26"},"nodeType":"YulFunctionCall","src":"1598:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1588:6:26"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1560:5:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1570:6:26","type":""}],"src":"1518:99:26"},{"body":{"nodeType":"YulBlock","src":"1719:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1736:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"1741:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1729:6:26"},"nodeType":"YulFunctionCall","src":"1729:19:26"},"nodeType":"YulExpressionStatement","src":"1729:19:26"},{"nodeType":"YulAssignment","src":"1757:29:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1776:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"1781:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:26"},"nodeType":"YulFunctionCall","src":"1772:14:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1757:11:26"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1691:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"1696:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1707:11:26","type":""}],"src":"1623:169:26"},{"body":{"nodeType":"YulBlock","src":"1860:184:26","statements":[{"nodeType":"YulVariableDeclaration","src":"1870:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"1879:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1874:1:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"1939:63:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1964:3:26"},{"name":"i","nodeType":"YulIdentifier","src":"1969:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1960:3:26"},"nodeType":"YulFunctionCall","src":"1960:11:26"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1983:3:26"},{"name":"i","nodeType":"YulIdentifier","src":"1988:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1979:3:26"},"nodeType":"YulFunctionCall","src":"1979:11:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1973:5:26"},"nodeType":"YulFunctionCall","src":"1973:18:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1953:6:26"},"nodeType":"YulFunctionCall","src":"1953:39:26"},"nodeType":"YulExpressionStatement","src":"1953:39:26"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1900:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"1903:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1897:2:26"},"nodeType":"YulFunctionCall","src":"1897:13:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1911:19:26","statements":[{"nodeType":"YulAssignment","src":"1913:15:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1922:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"1925:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1918:3:26"},"nodeType":"YulFunctionCall","src":"1918:10:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1913:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"1893:3:26","statements":[]},"src":"1889:113:26"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2022:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"2027:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2018:3:26"},"nodeType":"YulFunctionCall","src":"2018:16:26"},{"kind":"number","nodeType":"YulLiteral","src":"2036:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2011:6:26"},"nodeType":"YulFunctionCall","src":"2011:27:26"},"nodeType":"YulExpressionStatement","src":"2011:27:26"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1842:3:26","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1847:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"1852:6:26","type":""}],"src":"1798:246:26"},{"body":{"nodeType":"YulBlock","src":"2098:54:26","statements":[{"nodeType":"YulAssignment","src":"2108:38:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2126:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"2133:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2122:3:26"},"nodeType":"YulFunctionCall","src":"2122:14:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2142:2:26","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2138:3:26"},"nodeType":"YulFunctionCall","src":"2138:7:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2118:3:26"},"nodeType":"YulFunctionCall","src":"2118:28:26"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2108:6:26"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2081:5:26","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2091:6:26","type":""}],"src":"2050:102:26"},{"body":{"nodeType":"YulBlock","src":"2250:285:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2260:53:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2307:5:26"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2274:32:26"},"nodeType":"YulFunctionCall","src":"2274:39:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2264:6:26","type":""}]},{"nodeType":"YulAssignment","src":"2322:78:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2388:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"2393:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2329:58:26"},"nodeType":"YulFunctionCall","src":"2329:71:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2322:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2448:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"2455:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2444:3:26"},"nodeType":"YulFunctionCall","src":"2444:16:26"},{"name":"pos","nodeType":"YulIdentifier","src":"2462:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"2467:6:26"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2409:34:26"},"nodeType":"YulFunctionCall","src":"2409:65:26"},"nodeType":"YulExpressionStatement","src":"2409:65:26"},{"nodeType":"YulAssignment","src":"2483:46:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2494:3:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2521:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2499:21:26"},"nodeType":"YulFunctionCall","src":"2499:29:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2490:3:26"},"nodeType":"YulFunctionCall","src":"2490:39:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2483:3:26"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2231:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2238:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2246:3:26","type":""}],"src":"2158:377:26"},{"body":{"nodeType":"YulBlock","src":"2659:195:26","statements":[{"nodeType":"YulAssignment","src":"2669:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2681:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"2692:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2677:3:26"},"nodeType":"YulFunctionCall","src":"2677:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2669:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2716:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"2727:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2712:3:26"},"nodeType":"YulFunctionCall","src":"2712:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2735:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"2741:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2731:3:26"},"nodeType":"YulFunctionCall","src":"2731:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2705:6:26"},"nodeType":"YulFunctionCall","src":"2705:47:26"},"nodeType":"YulExpressionStatement","src":"2705:47:26"},{"nodeType":"YulAssignment","src":"2761:86:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2833:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"2842:4:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2769:63:26"},"nodeType":"YulFunctionCall","src":"2769:78:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2761:4:26"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2631:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2643:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2654:4:26","type":""}],"src":"2541:313:26"},{"body":{"nodeType":"YulBlock","src":"2905:32:26","statements":[{"nodeType":"YulAssignment","src":"2915:16:26","value":{"name":"value","nodeType":"YulIdentifier","src":"2926:5:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2915:7:26"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2887:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2897:7:26","type":""}],"src":"2860:77:26"},{"body":{"nodeType":"YulBlock","src":"2986:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"3043:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3052:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3055:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3045:6:26"},"nodeType":"YulFunctionCall","src":"3045:12:26"},"nodeType":"YulExpressionStatement","src":"3045:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3009:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3034:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3016:17:26"},"nodeType":"YulFunctionCall","src":"3016:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3006:2:26"},"nodeType":"YulFunctionCall","src":"3006:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2999:6:26"},"nodeType":"YulFunctionCall","src":"2999:43:26"},"nodeType":"YulIf","src":"2996:63:26"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2979:5:26","type":""}],"src":"2943:122:26"},{"body":{"nodeType":"YulBlock","src":"3123:87:26","statements":[{"nodeType":"YulAssignment","src":"3133:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3155:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3142:12:26"},"nodeType":"YulFunctionCall","src":"3142:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3133:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3198:5:26"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3171:26:26"},"nodeType":"YulFunctionCall","src":"3171:33:26"},"nodeType":"YulExpressionStatement","src":"3171:33:26"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3101:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"3109:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3117:5:26","type":""}],"src":"3071:139:26"},{"body":{"nodeType":"YulBlock","src":"3282:263:26","statements":[{"body":{"nodeType":"YulBlock","src":"3328:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3330:77:26"},"nodeType":"YulFunctionCall","src":"3330:79:26"},"nodeType":"YulExpressionStatement","src":"3330:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3303:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"3312:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3299:3:26"},"nodeType":"YulFunctionCall","src":"3299:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"3324:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3295:3:26"},"nodeType":"YulFunctionCall","src":"3295:32:26"},"nodeType":"YulIf","src":"3292:119:26"},{"nodeType":"YulBlock","src":"3421:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"3436:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"3450:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3440:6:26","type":""}]},{"nodeType":"YulAssignment","src":"3465:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3500:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"3511:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3496:3:26"},"nodeType":"YulFunctionCall","src":"3496:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3520:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3475:20:26"},"nodeType":"YulFunctionCall","src":"3475:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3465:6:26"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3252:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3263:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3275:6:26","type":""}],"src":"3216:329:26"},{"body":{"nodeType":"YulBlock","src":"3596:81:26","statements":[{"nodeType":"YulAssignment","src":"3606:65:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3621:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"3628:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3617:3:26"},"nodeType":"YulFunctionCall","src":"3617:54:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3606:7:26"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3578:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3588:7:26","type":""}],"src":"3551:126:26"},{"body":{"nodeType":"YulBlock","src":"3728:51:26","statements":[{"nodeType":"YulAssignment","src":"3738:35:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3767:5:26"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3749:17:26"},"nodeType":"YulFunctionCall","src":"3749:24:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3738:7:26"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3710:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3720:7:26","type":""}],"src":"3683:96:26"},{"body":{"nodeType":"YulBlock","src":"3850:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3867:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3890:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3872:17:26"},"nodeType":"YulFunctionCall","src":"3872:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3860:6:26"},"nodeType":"YulFunctionCall","src":"3860:37:26"},"nodeType":"YulExpressionStatement","src":"3860:37:26"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3838:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3845:3:26","type":""}],"src":"3785:118:26"},{"body":{"nodeType":"YulBlock","src":"4007:124:26","statements":[{"nodeType":"YulAssignment","src":"4017:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4029:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4040:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4025:3:26"},"nodeType":"YulFunctionCall","src":"4025:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4017:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4097:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4110:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4121:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4106:3:26"},"nodeType":"YulFunctionCall","src":"4106:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4053:43:26"},"nodeType":"YulFunctionCall","src":"4053:71:26"},"nodeType":"YulExpressionStatement","src":"4053:71:26"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3979:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3991:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4002:4:26","type":""}],"src":"3909:222:26"},{"body":{"nodeType":"YulBlock","src":"4180:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"4237:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4246:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4249:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4239:6:26"},"nodeType":"YulFunctionCall","src":"4239:12:26"},"nodeType":"YulExpressionStatement","src":"4239:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4203:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4228:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4210:17:26"},"nodeType":"YulFunctionCall","src":"4210:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4200:2:26"},"nodeType":"YulFunctionCall","src":"4200:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4193:6:26"},"nodeType":"YulFunctionCall","src":"4193:43:26"},"nodeType":"YulIf","src":"4190:63:26"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4173:5:26","type":""}],"src":"4137:122:26"},{"body":{"nodeType":"YulBlock","src":"4317:87:26","statements":[{"nodeType":"YulAssignment","src":"4327:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4349:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4336:12:26"},"nodeType":"YulFunctionCall","src":"4336:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4327:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4392:5:26"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"4365:26:26"},"nodeType":"YulFunctionCall","src":"4365:33:26"},"nodeType":"YulExpressionStatement","src":"4365:33:26"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4295:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"4303:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4311:5:26","type":""}],"src":"4265:139:26"},{"body":{"nodeType":"YulBlock","src":"4493:391:26","statements":[{"body":{"nodeType":"YulBlock","src":"4539:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4541:77:26"},"nodeType":"YulFunctionCall","src":"4541:79:26"},"nodeType":"YulExpressionStatement","src":"4541:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4514:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"4523:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4510:3:26"},"nodeType":"YulFunctionCall","src":"4510:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"4535:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4506:3:26"},"nodeType":"YulFunctionCall","src":"4506:32:26"},"nodeType":"YulIf","src":"4503:119:26"},{"nodeType":"YulBlock","src":"4632:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4647:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"4661:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4651:6:26","type":""}]},{"nodeType":"YulAssignment","src":"4676:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4711:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"4722:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4707:3:26"},"nodeType":"YulFunctionCall","src":"4707:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4731:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4686:20:26"},"nodeType":"YulFunctionCall","src":"4686:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4676:6:26"}]}]},{"nodeType":"YulBlock","src":"4759:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4774:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"4788:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4778:6:26","type":""}]},{"nodeType":"YulAssignment","src":"4804:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4839:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"4850:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4835:3:26"},"nodeType":"YulFunctionCall","src":"4835:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4859:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4814:20:26"},"nodeType":"YulFunctionCall","src":"4814:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4804:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4455:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4466:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4478:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4486:6:26","type":""}],"src":"4410:474:26"},{"body":{"nodeType":"YulBlock","src":"4990:519:26","statements":[{"body":{"nodeType":"YulBlock","src":"5036:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5038:77:26"},"nodeType":"YulFunctionCall","src":"5038:79:26"},"nodeType":"YulExpressionStatement","src":"5038:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5011:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"5020:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5007:3:26"},"nodeType":"YulFunctionCall","src":"5007:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"5032:2:26","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5003:3:26"},"nodeType":"YulFunctionCall","src":"5003:32:26"},"nodeType":"YulIf","src":"5000:119:26"},{"nodeType":"YulBlock","src":"5129:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"5144:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"5158:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5148:6:26","type":""}]},{"nodeType":"YulAssignment","src":"5173:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5208:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"5219:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5204:3:26"},"nodeType":"YulFunctionCall","src":"5204:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5228:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5183:20:26"},"nodeType":"YulFunctionCall","src":"5183:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5173:6:26"}]}]},{"nodeType":"YulBlock","src":"5256:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"5271:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"5285:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5275:6:26","type":""}]},{"nodeType":"YulAssignment","src":"5301:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5336:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"5347:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5332:3:26"},"nodeType":"YulFunctionCall","src":"5332:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5356:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5311:20:26"},"nodeType":"YulFunctionCall","src":"5311:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5301:6:26"}]}]},{"nodeType":"YulBlock","src":"5384:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"5399:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"5413:2:26","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5403:6:26","type":""}]},{"nodeType":"YulAssignment","src":"5429:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5464:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"5475:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5460:3:26"},"nodeType":"YulFunctionCall","src":"5460:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5484:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5439:20:26"},"nodeType":"YulFunctionCall","src":"5439:53:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5429:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4944:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4955:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4967:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4975:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4983:6:26","type":""}],"src":"4890:619:26"},{"body":{"nodeType":"YulBlock","src":"5581:263:26","statements":[{"body":{"nodeType":"YulBlock","src":"5627:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5629:77:26"},"nodeType":"YulFunctionCall","src":"5629:79:26"},"nodeType":"YulExpressionStatement","src":"5629:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5602:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"5611:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5598:3:26"},"nodeType":"YulFunctionCall","src":"5598:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"5623:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5594:3:26"},"nodeType":"YulFunctionCall","src":"5594:32:26"},"nodeType":"YulIf","src":"5591:119:26"},{"nodeType":"YulBlock","src":"5720:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"5735:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"5749:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5739:6:26","type":""}]},{"nodeType":"YulAssignment","src":"5764:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5799:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"5810:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5795:3:26"},"nodeType":"YulFunctionCall","src":"5795:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5819:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5774:20:26"},"nodeType":"YulFunctionCall","src":"5774:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5764:6:26"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5551:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5562:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5574:6:26","type":""}],"src":"5515:329:26"},{"body":{"nodeType":"YulBlock","src":"5915:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5932:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5955:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5937:17:26"},"nodeType":"YulFunctionCall","src":"5937:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5925:6:26"},"nodeType":"YulFunctionCall","src":"5925:37:26"},"nodeType":"YulExpressionStatement","src":"5925:37:26"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5903:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5910:3:26","type":""}],"src":"5850:118:26"},{"body":{"nodeType":"YulBlock","src":"6072:124:26","statements":[{"nodeType":"YulAssignment","src":"6082:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6094:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"6105:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6090:3:26"},"nodeType":"YulFunctionCall","src":"6090:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6082:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6162:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6175:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"6186:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6171:3:26"},"nodeType":"YulFunctionCall","src":"6171:17:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6118:43:26"},"nodeType":"YulFunctionCall","src":"6118:71:26"},"nodeType":"YulExpressionStatement","src":"6118:71:26"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6044:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6056:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6067:4:26","type":""}],"src":"5974:222:26"},{"body":{"nodeType":"YulBlock","src":"6242:76:26","statements":[{"body":{"nodeType":"YulBlock","src":"6296:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6305:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6308:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6298:6:26"},"nodeType":"YulFunctionCall","src":"6298:12:26"},"nodeType":"YulExpressionStatement","src":"6298:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6265:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6287:5:26"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"6272:14:26"},"nodeType":"YulFunctionCall","src":"6272:21:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6262:2:26"},"nodeType":"YulFunctionCall","src":"6262:32:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6255:6:26"},"nodeType":"YulFunctionCall","src":"6255:40:26"},"nodeType":"YulIf","src":"6252:60:26"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6235:5:26","type":""}],"src":"6202:116:26"},{"body":{"nodeType":"YulBlock","src":"6373:84:26","statements":[{"nodeType":"YulAssignment","src":"6383:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6405:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6392:12:26"},"nodeType":"YulFunctionCall","src":"6392:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6383:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6445:5:26"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"6421:23:26"},"nodeType":"YulFunctionCall","src":"6421:30:26"},"nodeType":"YulExpressionStatement","src":"6421:30:26"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6351:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"6359:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6367:5:26","type":""}],"src":"6324:133:26"},{"body":{"nodeType":"YulBlock","src":"6543:388:26","statements":[{"body":{"nodeType":"YulBlock","src":"6589:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6591:77:26"},"nodeType":"YulFunctionCall","src":"6591:79:26"},"nodeType":"YulExpressionStatement","src":"6591:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6564:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"6573:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6560:3:26"},"nodeType":"YulFunctionCall","src":"6560:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"6585:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6556:3:26"},"nodeType":"YulFunctionCall","src":"6556:32:26"},"nodeType":"YulIf","src":"6553:119:26"},{"nodeType":"YulBlock","src":"6682:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"6697:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"6711:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6701:6:26","type":""}]},{"nodeType":"YulAssignment","src":"6726:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6761:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"6772:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6757:3:26"},"nodeType":"YulFunctionCall","src":"6757:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6781:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6736:20:26"},"nodeType":"YulFunctionCall","src":"6736:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6726:6:26"}]}]},{"nodeType":"YulBlock","src":"6809:115:26","statements":[{"nodeType":"YulVariableDeclaration","src":"6824:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"6838:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6828:6:26","type":""}]},{"nodeType":"YulAssignment","src":"6854:60:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6886:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"6897:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6882:3:26"},"nodeType":"YulFunctionCall","src":"6882:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6906:7:26"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"6864:17:26"},"nodeType":"YulFunctionCall","src":"6864:50:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6854:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6505:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6516:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6528:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6536:6:26","type":""}],"src":"6463:468:26"},{"body":{"nodeType":"YulBlock","src":"7026:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7043:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7046:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7036:6:26"},"nodeType":"YulFunctionCall","src":"7036:12:26"},"nodeType":"YulExpressionStatement","src":"7036:12:26"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"6937:117:26"},{"body":{"nodeType":"YulBlock","src":"7149:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7166:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7169:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7159:6:26"},"nodeType":"YulFunctionCall","src":"7159:12:26"},"nodeType":"YulExpressionStatement","src":"7159:12:26"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"7060:117:26"},{"body":{"nodeType":"YulBlock","src":"7211:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7228:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7231:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7221:6:26"},"nodeType":"YulFunctionCall","src":"7221:88:26"},"nodeType":"YulExpressionStatement","src":"7221:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7325:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7328:4:26","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7318:6:26"},"nodeType":"YulFunctionCall","src":"7318:15:26"},"nodeType":"YulExpressionStatement","src":"7318:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7349:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7352:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7342:6:26"},"nodeType":"YulFunctionCall","src":"7342:15:26"},"nodeType":"YulExpressionStatement","src":"7342:15:26"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"7183:180:26"},{"body":{"nodeType":"YulBlock","src":"7412:238:26","statements":[{"nodeType":"YulVariableDeclaration","src":"7422:58:26","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7444:6:26"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7474:4:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7452:21:26"},"nodeType":"YulFunctionCall","src":"7452:27:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7440:3:26"},"nodeType":"YulFunctionCall","src":"7440:40:26"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"7426:10:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"7591:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7593:16:26"},"nodeType":"YulFunctionCall","src":"7593:18:26"},"nodeType":"YulExpressionStatement","src":"7593:18:26"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7534:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"7546:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7531:2:26"},"nodeType":"YulFunctionCall","src":"7531:34:26"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7570:10:26"},{"name":"memPtr","nodeType":"YulIdentifier","src":"7582:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7567:2:26"},"nodeType":"YulFunctionCall","src":"7567:22:26"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7528:2:26"},"nodeType":"YulFunctionCall","src":"7528:62:26"},"nodeType":"YulIf","src":"7525:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7629:2:26","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7633:10:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7622:6:26"},"nodeType":"YulFunctionCall","src":"7622:22:26"},"nodeType":"YulExpressionStatement","src":"7622:22:26"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7398:6:26","type":""},{"name":"size","nodeType":"YulTypedName","src":"7406:4:26","type":""}],"src":"7369:281:26"},{"body":{"nodeType":"YulBlock","src":"7697:88:26","statements":[{"nodeType":"YulAssignment","src":"7707:30:26","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"7717:18:26"},"nodeType":"YulFunctionCall","src":"7717:20:26"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7707:6:26"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7766:6:26"},{"name":"size","nodeType":"YulIdentifier","src":"7774:4:26"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"7746:19:26"},"nodeType":"YulFunctionCall","src":"7746:33:26"},"nodeType":"YulExpressionStatement","src":"7746:33:26"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"7681:4:26","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"7690:6:26","type":""}],"src":"7656:129:26"},{"body":{"nodeType":"YulBlock","src":"7857:241:26","statements":[{"body":{"nodeType":"YulBlock","src":"7962:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7964:16:26"},"nodeType":"YulFunctionCall","src":"7964:18:26"},"nodeType":"YulExpressionStatement","src":"7964:18:26"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7934:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"7942:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7931:2:26"},"nodeType":"YulFunctionCall","src":"7931:30:26"},"nodeType":"YulIf","src":"7928:56:26"},{"nodeType":"YulAssignment","src":"7994:37:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8024:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8002:21:26"},"nodeType":"YulFunctionCall","src":"8002:29:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"7994:4:26"}]},{"nodeType":"YulAssignment","src":"8068:23:26","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"8080:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"8086:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8076:3:26"},"nodeType":"YulFunctionCall","src":"8076:15:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8068:4:26"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"7841:6:26","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"7852:4:26","type":""}],"src":"7791:307:26"},{"body":{"nodeType":"YulBlock","src":"8168:82:26","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8191:3:26"},{"name":"src","nodeType":"YulIdentifier","src":"8196:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"8201:6:26"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"8178:12:26"},"nodeType":"YulFunctionCall","src":"8178:30:26"},"nodeType":"YulExpressionStatement","src":"8178:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8228:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"8233:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8224:3:26"},"nodeType":"YulFunctionCall","src":"8224:16:26"},{"kind":"number","nodeType":"YulLiteral","src":"8242:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8217:6:26"},"nodeType":"YulFunctionCall","src":"8217:27:26"},"nodeType":"YulExpressionStatement","src":"8217:27:26"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8150:3:26","type":""},{"name":"dst","nodeType":"YulTypedName","src":"8155:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"8160:6:26","type":""}],"src":"8104:146:26"},{"body":{"nodeType":"YulBlock","src":"8339:340:26","statements":[{"nodeType":"YulAssignment","src":"8349:74:26","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8415:6:26"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8374:40:26"},"nodeType":"YulFunctionCall","src":"8374:48:26"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"8358:15:26"},"nodeType":"YulFunctionCall","src":"8358:65:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8349:5:26"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8439:5:26"},{"name":"length","nodeType":"YulIdentifier","src":"8446:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8432:6:26"},"nodeType":"YulFunctionCall","src":"8432:21:26"},"nodeType":"YulExpressionStatement","src":"8432:21:26"},{"nodeType":"YulVariableDeclaration","src":"8462:27:26","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8477:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"8484:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8473:3:26"},"nodeType":"YulFunctionCall","src":"8473:16:26"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"8466:3:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"8527:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"8529:77:26"},"nodeType":"YulFunctionCall","src":"8529:79:26"},"nodeType":"YulExpressionStatement","src":"8529:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8508:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"8513:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8504:3:26"},"nodeType":"YulFunctionCall","src":"8504:16:26"},{"name":"end","nodeType":"YulIdentifier","src":"8522:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8501:2:26"},"nodeType":"YulFunctionCall","src":"8501:25:26"},"nodeType":"YulIf","src":"8498:112:26"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8656:3:26"},{"name":"dst","nodeType":"YulIdentifier","src":"8661:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"8666:6:26"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"8619:36:26"},"nodeType":"YulFunctionCall","src":"8619:54:26"},"nodeType":"YulExpressionStatement","src":"8619:54:26"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8312:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"8317:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"8325:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8333:5:26","type":""}],"src":"8256:423:26"},{"body":{"nodeType":"YulBlock","src":"8759:277:26","statements":[{"body":{"nodeType":"YulBlock","src":"8808:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"8810:77:26"},"nodeType":"YulFunctionCall","src":"8810:79:26"},"nodeType":"YulExpressionStatement","src":"8810:79:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8787:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"8795:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8783:3:26"},"nodeType":"YulFunctionCall","src":"8783:17:26"},{"name":"end","nodeType":"YulIdentifier","src":"8802:3:26"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8779:3:26"},"nodeType":"YulFunctionCall","src":"8779:27:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8772:6:26"},"nodeType":"YulFunctionCall","src":"8772:35:26"},"nodeType":"YulIf","src":"8769:122:26"},{"nodeType":"YulVariableDeclaration","src":"8900:34:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8927:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8914:12:26"},"nodeType":"YulFunctionCall","src":"8914:20:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8904:6:26","type":""}]},{"nodeType":"YulAssignment","src":"8943:87:26","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9003:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"9011:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8999:3:26"},"nodeType":"YulFunctionCall","src":"8999:17:26"},{"name":"length","nodeType":"YulIdentifier","src":"9018:6:26"},{"name":"end","nodeType":"YulIdentifier","src":"9026:3:26"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8952:46:26"},"nodeType":"YulFunctionCall","src":"8952:78:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8943:5:26"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8737:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"8745:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8753:5:26","type":""}],"src":"8698:338:26"},{"body":{"nodeType":"YulBlock","src":"9168:817:26","statements":[{"body":{"nodeType":"YulBlock","src":"9215:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9217:77:26"},"nodeType":"YulFunctionCall","src":"9217:79:26"},"nodeType":"YulExpressionStatement","src":"9217:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9189:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"9198:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9185:3:26"},"nodeType":"YulFunctionCall","src":"9185:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"9210:3:26","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9181:3:26"},"nodeType":"YulFunctionCall","src":"9181:33:26"},"nodeType":"YulIf","src":"9178:120:26"},{"nodeType":"YulBlock","src":"9308:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"9323:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"9337:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9327:6:26","type":""}]},{"nodeType":"YulAssignment","src":"9352:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9387:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"9398:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9383:3:26"},"nodeType":"YulFunctionCall","src":"9383:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9407:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9362:20:26"},"nodeType":"YulFunctionCall","src":"9362:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9352:6:26"}]}]},{"nodeType":"YulBlock","src":"9435:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"9450:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"9464:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9454:6:26","type":""}]},{"nodeType":"YulAssignment","src":"9480:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9515:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"9526:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9511:3:26"},"nodeType":"YulFunctionCall","src":"9511:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9535:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9490:20:26"},"nodeType":"YulFunctionCall","src":"9490:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9480:6:26"}]}]},{"nodeType":"YulBlock","src":"9563:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"9578:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"9592:2:26","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9582:6:26","type":""}]},{"nodeType":"YulAssignment","src":"9608:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9643:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"9654:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9639:3:26"},"nodeType":"YulFunctionCall","src":"9639:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9663:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9618:20:26"},"nodeType":"YulFunctionCall","src":"9618:53:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9608:6:26"}]}]},{"nodeType":"YulBlock","src":"9691:287:26","statements":[{"nodeType":"YulVariableDeclaration","src":"9706:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9737:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"9748:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9733:3:26"},"nodeType":"YulFunctionCall","src":"9733:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9720:12:26"},"nodeType":"YulFunctionCall","src":"9720:32:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9710:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"9799:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9801:77:26"},"nodeType":"YulFunctionCall","src":"9801:79:26"},"nodeType":"YulExpressionStatement","src":"9801:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9771:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"9779:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9768:2:26"},"nodeType":"YulFunctionCall","src":"9768:30:26"},"nodeType":"YulIf","src":"9765:117:26"},{"nodeType":"YulAssignment","src":"9896:72:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9940:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"9951:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9936:3:26"},"nodeType":"YulFunctionCall","src":"9936:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9960:7:26"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9906:29:26"},"nodeType":"YulFunctionCall","src":"9906:62:26"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"9896:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9114:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9125:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9137:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9145:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9153:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9161:6:26","type":""}],"src":"9042:943:26"},{"body":{"nodeType":"YulBlock","src":"10074:391:26","statements":[{"body":{"nodeType":"YulBlock","src":"10120:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10122:77:26"},"nodeType":"YulFunctionCall","src":"10122:79:26"},"nodeType":"YulExpressionStatement","src":"10122:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10095:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"10104:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10091:3:26"},"nodeType":"YulFunctionCall","src":"10091:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"10116:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10087:3:26"},"nodeType":"YulFunctionCall","src":"10087:32:26"},"nodeType":"YulIf","src":"10084:119:26"},{"nodeType":"YulBlock","src":"10213:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"10228:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"10242:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10232:6:26","type":""}]},{"nodeType":"YulAssignment","src":"10257:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10292:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"10303:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10288:3:26"},"nodeType":"YulFunctionCall","src":"10288:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10312:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10267:20:26"},"nodeType":"YulFunctionCall","src":"10267:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10257:6:26"}]}]},{"nodeType":"YulBlock","src":"10340:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"10355:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"10369:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10359:6:26","type":""}]},{"nodeType":"YulAssignment","src":"10385:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10420:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"10431:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10416:3:26"},"nodeType":"YulFunctionCall","src":"10416:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10440:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10395:20:26"},"nodeType":"YulFunctionCall","src":"10395:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10385:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10036:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10047:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10059:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10067:6:26","type":""}],"src":"9991:474:26"},{"body":{"nodeType":"YulBlock","src":"10499:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10516:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10519:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10509:6:26"},"nodeType":"YulFunctionCall","src":"10509:88:26"},"nodeType":"YulExpressionStatement","src":"10509:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10613:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10616:4:26","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10606:6:26"},"nodeType":"YulFunctionCall","src":"10606:15:26"},"nodeType":"YulExpressionStatement","src":"10606:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10637:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10640:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10630:6:26"},"nodeType":"YulFunctionCall","src":"10630:15:26"},"nodeType":"YulExpressionStatement","src":"10630:15:26"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"10471:180:26"},{"body":{"nodeType":"YulBlock","src":"10708:269:26","statements":[{"nodeType":"YulAssignment","src":"10718:22:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10732:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"10738:1:26","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"10728:3:26"},"nodeType":"YulFunctionCall","src":"10728:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10718:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"10749:38:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10779:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"10785:1:26","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10775:3:26"},"nodeType":"YulFunctionCall","src":"10775:12:26"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"10753:18:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"10826:51:26","statements":[{"nodeType":"YulAssignment","src":"10840:27:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10854:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"10862:4:26","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10850:3:26"},"nodeType":"YulFunctionCall","src":"10850:17:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10840:6:26"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"10806:18:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10799:6:26"},"nodeType":"YulFunctionCall","src":"10799:26:26"},"nodeType":"YulIf","src":"10796:81:26"},{"body":{"nodeType":"YulBlock","src":"10929:42:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"10943:16:26"},"nodeType":"YulFunctionCall","src":"10943:18:26"},"nodeType":"YulExpressionStatement","src":"10943:18:26"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"10893:18:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10916:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"10924:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10913:2:26"},"nodeType":"YulFunctionCall","src":"10913:14:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10890:2:26"},"nodeType":"YulFunctionCall","src":"10890:38:26"},"nodeType":"YulIf","src":"10887:84:26"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"10692:4:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"10701:6:26","type":""}],"src":"10657:320:26"},{"body":{"nodeType":"YulBlock","src":"11137:288:26","statements":[{"nodeType":"YulAssignment","src":"11147:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11159:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11170:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11155:3:26"},"nodeType":"YulFunctionCall","src":"11155:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11147:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11227:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11240:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11251:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11236:3:26"},"nodeType":"YulFunctionCall","src":"11236:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11183:43:26"},"nodeType":"YulFunctionCall","src":"11183:71:26"},"nodeType":"YulExpressionStatement","src":"11183:71:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11308:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11321:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11332:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11317:3:26"},"nodeType":"YulFunctionCall","src":"11317:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11264:43:26"},"nodeType":"YulFunctionCall","src":"11264:72:26"},"nodeType":"YulExpressionStatement","src":"11264:72:26"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"11390:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11403:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11414:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11399:3:26"},"nodeType":"YulFunctionCall","src":"11399:18:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11346:43:26"},"nodeType":"YulFunctionCall","src":"11346:72:26"},"nodeType":"YulExpressionStatement","src":"11346:72:26"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11093:9:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11105:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11113:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11121:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11132:4:26","type":""}],"src":"10983:442:26"},{"body":{"nodeType":"YulBlock","src":"11459:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11476:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11479:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11469:6:26"},"nodeType":"YulFunctionCall","src":"11469:88:26"},"nodeType":"YulExpressionStatement","src":"11469:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11573:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11576:4:26","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11566:6:26"},"nodeType":"YulFunctionCall","src":"11566:15:26"},"nodeType":"YulExpressionStatement","src":"11566:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11597:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11600:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11590:6:26"},"nodeType":"YulFunctionCall","src":"11590:15:26"},"nodeType":"YulExpressionStatement","src":"11590:15:26"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"11431:180:26"},{"body":{"nodeType":"YulBlock","src":"11660:190:26","statements":[{"nodeType":"YulAssignment","src":"11670:33:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11697:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11679:17:26"},"nodeType":"YulFunctionCall","src":"11679:24:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"11670:5:26"}]},{"body":{"nodeType":"YulBlock","src":"11793:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11795:16:26"},"nodeType":"YulFunctionCall","src":"11795:18:26"},"nodeType":"YulExpressionStatement","src":"11795:18:26"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11718:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"11725:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11715:2:26"},"nodeType":"YulFunctionCall","src":"11715:77:26"},"nodeType":"YulIf","src":"11712:103:26"},{"nodeType":"YulAssignment","src":"11824:20:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11835:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"11842:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11831:3:26"},"nodeType":"YulFunctionCall","src":"11831:13:26"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"11824:3:26"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11646:5:26","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"11656:3:26","type":""}],"src":"11617:233:26"},{"body":{"nodeType":"YulBlock","src":"11970:34:26","statements":[{"nodeType":"YulAssignment","src":"11980:18:26","value":{"name":"pos","nodeType":"YulIdentifier","src":"11995:3:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"11980:11:26"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11942:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"11947:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"11958:11:26","type":""}],"src":"11856:148:26"},{"body":{"nodeType":"YulBlock","src":"12120:280:26","statements":[{"nodeType":"YulVariableDeclaration","src":"12130:53:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12177:5:26"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"12144:32:26"},"nodeType":"YulFunctionCall","src":"12144:39:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"12134:6:26","type":""}]},{"nodeType":"YulAssignment","src":"12192:96:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12276:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"12281:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"12199:76:26"},"nodeType":"YulFunctionCall","src":"12199:89:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12192:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12336:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"12343:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12332:3:26"},"nodeType":"YulFunctionCall","src":"12332:16:26"},{"name":"pos","nodeType":"YulIdentifier","src":"12350:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"12355:6:26"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"12297:34:26"},"nodeType":"YulFunctionCall","src":"12297:65:26"},"nodeType":"YulExpressionStatement","src":"12297:65:26"},{"nodeType":"YulAssignment","src":"12371:23:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12382:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"12387:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12378:3:26"},"nodeType":"YulFunctionCall","src":"12378:16:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12371:3:26"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12101:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12108:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12116:3:26","type":""}],"src":"12010:390:26"},{"body":{"nodeType":"YulBlock","src":"12590:251:26","statements":[{"nodeType":"YulAssignment","src":"12601:102:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12690:6:26"},{"name":"pos","nodeType":"YulIdentifier","src":"12699:3:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"12608:81:26"},"nodeType":"YulFunctionCall","src":"12608:95:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12601:3:26"}]},{"nodeType":"YulAssignment","src":"12713:102:26","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12802:6:26"},{"name":"pos","nodeType":"YulIdentifier","src":"12811:3:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"12720:81:26"},"nodeType":"YulFunctionCall","src":"12720:95:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12713:3:26"}]},{"nodeType":"YulAssignment","src":"12825:10:26","value":{"name":"pos","nodeType":"YulIdentifier","src":"12832:3:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12825:3:26"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12561:3:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12567:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12575:6:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12586:3:26","type":""}],"src":"12406:435:26"},{"body":{"nodeType":"YulBlock","src":"12905:40:26","statements":[{"nodeType":"YulAssignment","src":"12916:22:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12932:5:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12926:5:26"},"nodeType":"YulFunctionCall","src":"12926:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12916:6:26"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12888:5:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"12898:6:26","type":""}],"src":"12847:98:26"},{"body":{"nodeType":"YulBlock","src":"13046:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13063:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"13068:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13056:6:26"},"nodeType":"YulFunctionCall","src":"13056:19:26"},"nodeType":"YulExpressionStatement","src":"13056:19:26"},{"nodeType":"YulAssignment","src":"13084:29:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13103:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"13108:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13099:3:26"},"nodeType":"YulFunctionCall","src":"13099:14:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"13084:11:26"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13018:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"13023:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"13034:11:26","type":""}],"src":"12951:168:26"},{"body":{"nodeType":"YulBlock","src":"13215:283:26","statements":[{"nodeType":"YulVariableDeclaration","src":"13225:52:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13271:5:26"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"13239:31:26"},"nodeType":"YulFunctionCall","src":"13239:38:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"13229:6:26","type":""}]},{"nodeType":"YulAssignment","src":"13286:77:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13351:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"13356:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13293:57:26"},"nodeType":"YulFunctionCall","src":"13293:70:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13286:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13411:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"13418:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13407:3:26"},"nodeType":"YulFunctionCall","src":"13407:16:26"},{"name":"pos","nodeType":"YulIdentifier","src":"13425:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"13430:6:26"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"13372:34:26"},"nodeType":"YulFunctionCall","src":"13372:65:26"},"nodeType":"YulExpressionStatement","src":"13372:65:26"},{"nodeType":"YulAssignment","src":"13446:46:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13457:3:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13484:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"13462:21:26"},"nodeType":"YulFunctionCall","src":"13462:29:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13453:3:26"},"nodeType":"YulFunctionCall","src":"13453:39:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13446:3:26"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13196:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13203:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13211:3:26","type":""}],"src":"13125:373:26"},{"body":{"nodeType":"YulBlock","src":"13704:440:26","statements":[{"nodeType":"YulAssignment","src":"13714:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13726:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"13737:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13722:3:26"},"nodeType":"YulFunctionCall","src":"13722:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13714:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13795:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13808:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"13819:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13804:3:26"},"nodeType":"YulFunctionCall","src":"13804:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"13751:43:26"},"nodeType":"YulFunctionCall","src":"13751:71:26"},"nodeType":"YulExpressionStatement","src":"13751:71:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13876:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13889:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"13900:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13885:3:26"},"nodeType":"YulFunctionCall","src":"13885:18:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"13832:43:26"},"nodeType":"YulFunctionCall","src":"13832:72:26"},"nodeType":"YulExpressionStatement","src":"13832:72:26"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"13958:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13971:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"13982:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13967:3:26"},"nodeType":"YulFunctionCall","src":"13967:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"13914:43:26"},"nodeType":"YulFunctionCall","src":"13914:72:26"},"nodeType":"YulExpressionStatement","src":"13914:72:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14007:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14018:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14003:3:26"},"nodeType":"YulFunctionCall","src":"14003:18:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14027:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"14033:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14023:3:26"},"nodeType":"YulFunctionCall","src":"14023:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13996:6:26"},"nodeType":"YulFunctionCall","src":"13996:48:26"},"nodeType":"YulExpressionStatement","src":"13996:48:26"},{"nodeType":"YulAssignment","src":"14053:84:26","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"14123:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"14132:4:26"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14061:61:26"},"nodeType":"YulFunctionCall","src":"14061:76:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14053:4:26"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13652:9:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"13664:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13672:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13680:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13688:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13699:4:26","type":""}],"src":"13504:640:26"},{"body":{"nodeType":"YulBlock","src":"14212:79:26","statements":[{"nodeType":"YulAssignment","src":"14222:22:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14237:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14231:5:26"},"nodeType":"YulFunctionCall","src":"14231:13:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"14222:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14279:5:26"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"14253:25:26"},"nodeType":"YulFunctionCall","src":"14253:32:26"},"nodeType":"YulExpressionStatement","src":"14253:32:26"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"14190:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"14198:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"14206:5:26","type":""}],"src":"14150:141:26"},{"body":{"nodeType":"YulBlock","src":"14373:273:26","statements":[{"body":{"nodeType":"YulBlock","src":"14419:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"14421:77:26"},"nodeType":"YulFunctionCall","src":"14421:79:26"},"nodeType":"YulExpressionStatement","src":"14421:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14394:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"14403:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14390:3:26"},"nodeType":"YulFunctionCall","src":"14390:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"14415:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14386:3:26"},"nodeType":"YulFunctionCall","src":"14386:32:26"},"nodeType":"YulIf","src":"14383:119:26"},{"nodeType":"YulBlock","src":"14512:127:26","statements":[{"nodeType":"YulVariableDeclaration","src":"14527:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"14541:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14531:6:26","type":""}]},{"nodeType":"YulAssignment","src":"14556:73:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14601:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"14612:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14597:3:26"},"nodeType":"YulFunctionCall","src":"14597:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14621:7:26"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"14566:30:26"},"nodeType":"YulFunctionCall","src":"14566:63:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14556:6:26"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14343:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14354:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14366:6:26","type":""}],"src":"14297:349:26"},{"body":{"nodeType":"YulBlock","src":"14680:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14697:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14700:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14690:6:26"},"nodeType":"YulFunctionCall","src":"14690:88:26"},"nodeType":"YulExpressionStatement","src":"14690:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14794:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14797:4:26","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14787:6:26"},"nodeType":"YulFunctionCall","src":"14787:15:26"},"nodeType":"YulExpressionStatement","src":"14787:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14818:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14821:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14811:6:26"},"nodeType":"YulFunctionCall","src":"14811:15:26"},"nodeType":"YulExpressionStatement","src":"14811:15:26"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"14652:180:26"},{"body":{"nodeType":"YulBlock","src":"14964:206:26","statements":[{"nodeType":"YulAssignment","src":"14974:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14986:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14997:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14982:3:26"},"nodeType":"YulFunctionCall","src":"14982:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14974:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15054:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15067:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15078:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15063:3:26"},"nodeType":"YulFunctionCall","src":"15063:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"15010:43:26"},"nodeType":"YulFunctionCall","src":"15010:71:26"},"nodeType":"YulExpressionStatement","src":"15010:71:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15135:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15148:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15159:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15144:3:26"},"nodeType":"YulFunctionCall","src":"15144:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"15091:43:26"},"nodeType":"YulFunctionCall","src":"15091:72:26"},"nodeType":"YulExpressionStatement","src":"15091:72:26"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14928:9:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14940:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14948:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14959:4:26","type":""}],"src":"14838:332:26"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n","id":26,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101165760003560e01c8063715018a6116100a2578063a22cb46511610071578063a22cb465146102e1578063b88d4fde146102fd578063c87b56dd14610319578063e985e9c514610349578063f2fde38b1461037957610116565b8063715018a61461027d57806375794a3c146102875780638da5cb5b146102a557806395d89b41146102c357610116565b806323b872dd116100e957806323b872dd146101b557806342842e0e146101d15780636352211e146101ed5780636a6278421461021d57806370a082311461024d57610116565b806301ffc9a71461011b57806306fdde031461014b578063081812fc14610169578063095ea7b314610199575b600080fd5b610135600480360381019061013091906118ed565b610395565b6040516101429190611935565b60405180910390f35b610153610477565b60405161016091906119e0565b60405180910390f35b610183600480360381019061017e9190611a38565b610509565b6040516101909190611aa6565b60405180910390f35b6101b360048036038101906101ae9190611aed565b610525565b005b6101cf60048036038101906101ca9190611b2d565b61053b565b005b6101eb60048036038101906101e69190611b2d565b61063d565b005b61020760048036038101906102029190611a38565b61065d565b6040516102149190611aa6565b60405180910390f35b61023760048036038101906102329190611b80565b61066f565b6040516102449190611bbc565b60405180910390f35b61026760048036038101906102629190611b80565b6106ab565b6040516102749190611bbc565b60405180910390f35b610285610765565b005b61028f610779565b60405161029c9190611bbc565b60405180910390f35b6102ad61077f565b6040516102ba9190611aa6565b60405180910390f35b6102cb6107a9565b6040516102d891906119e0565b60405180910390f35b6102fb60048036038101906102f69190611c03565b61083b565b005b61031760048036038101906103129190611d78565b610851565b005b610333600480360381019061032e9190611a38565b610876565b60405161034091906119e0565b60405180910390f35b610363600480360381019061035e9190611dfb565b6108df565b6040516103709190611935565b60405180910390f35b610393600480360381019061038e9190611b80565b610973565b005b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061046057507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610470575061046f826109f9565b5b9050919050565b60606000805461048690611e6a565b80601f01602080910402602001604051908101604052809291908181526020018280546104b290611e6a565b80156104ff5780601f106104d4576101008083540402835291602001916104ff565b820191906000526020600020905b8154815290600101906020018083116104e257829003601f168201915b5050505050905090565b600061051482610a63565b5061051e82610aeb565b9050919050565b6105378282610532610b28565b610b30565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105ad5760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016105a49190611aa6565b60405180910390fd5b60006105c183836105bc610b28565b610b42565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610637578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161062e93929190611e9b565b60405180910390fd5b50505050565b61065883838360405180602001604052806000815250610851565b505050565b600061066882610a63565b9050919050565b6000610679610d5c565b6000600754905061068a8382610de3565b6007600081548092919061069d90611f01565b919050555080915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361071e5760006040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016107159190611aa6565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61076d610d5c565b6107776000610edc565b565b60075481565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600180546107b890611e6a565b80601f01602080910402602001604051908101604052809291908181526020018280546107e490611e6a565b80156108315780601f1061080657610100808354040283529160200191610831565b820191906000526020600020905b81548152906001019060200180831161081457829003601f168201915b5050505050905090565b61084d610846610b28565b8383610fa2565b5050565b61085c84848461053b565b610870610867610b28565b85858585611111565b50505050565b606061088182610a63565b50600061088c6112c2565b905060008151116108ac57604051806020016040528060008152506108d7565b806108b6846112d9565b6040516020016108c7929190611f85565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61097b610d5c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109ed5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016109e49190611aa6565b60405180910390fd5b6109f681610edc565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600080610a6f836113a7565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610ae257826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610ad99190611bbc565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b610b3d83838360016113e4565b505050565b600080610b4e846113a7565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610b9057610b8f8184866115a9565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610c2157610bd26000856000806113e4565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610ca4576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b610d64610b28565b73ffffffffffffffffffffffffffffffffffffffff16610d8261077f565b73ffffffffffffffffffffffffffffffffffffffff1614610de157610da5610b28565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610dd89190611aa6565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e555760006040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610e4c9190611aa6565b60405180910390fd5b6000610e6383836000610b42565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610ed75760006040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401610ece9190611aa6565b60405180910390fd5b505050565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361101357816040517f5b08ba1800000000000000000000000000000000000000000000000000000000815260040161100a9190611aa6565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516111049190611935565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b11156112bb578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02868685856040518563ffffffff1660e01b81526004016111709493929190611ffe565b6020604051808303816000875af19250505080156111ac57506040513d601f19601f820116820180604052508101906111a9919061205f565b60015b611230573d80600081146111dc576040519150601f19603f3d011682016040523d82523d6000602084013e6111e1565b606091505b50600081510361122857836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161121f9190611aa6565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146112b957836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016112b09190611aa6565b60405180910390fd5b505b5050505050565b606060405180602001604052806000815250905090565b6060600060016112e88461166d565b01905060008167ffffffffffffffff81111561130757611306611c4d565b5b6040519080825280601f01601f1916602001820160405280156113395781602001600182028036833780820191505090505b509050600082602001820190505b60011561139c578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816113905761138f61208c565b5b04945060008503611347575b819350505050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061141d5750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b1561155157600061142d84610a63565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561149857508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156114ab57506114a981846108df565b155b156114ed57826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016114e49190611aa6565b60405180910390fd5b811561154f57838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6115b48383836117c0565b61166857600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361162957806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016116209190611bbc565b60405180910390fd5b81816040517f177e802f00000000000000000000000000000000000000000000000000000000815260040161165f9291906120bb565b60405180910390fd5b505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106116cb577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816116c1576116c061208c565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611708576d04ee2d6d415b85acef810000000083816116fe576116fd61208c565b5b0492506020810190505b662386f26fc10000831061173757662386f26fc10000838161172d5761172c61208c565b5b0492506010810190505b6305f5e1008310611760576305f5e10083816117565761175561208c565b5b0492506008810190505b612710831061178557612710838161177b5761177a61208c565b5b0492506004810190505b606483106117a8576064838161179e5761179d61208c565b5b0492506002810190505b600a83106117b7576001810190505b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561187857508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611839575061183884846108df565b5b8061187757508273ffffffffffffffffffffffffffffffffffffffff1661185f83610aeb565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6118ca81611895565b81146118d557600080fd5b50565b6000813590506118e7816118c1565b92915050565b6000602082840312156119035761190261188b565b5b6000611911848285016118d8565b91505092915050565b60008115159050919050565b61192f8161191a565b82525050565b600060208201905061194a6000830184611926565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561198a57808201518184015260208101905061196f565b60008484015250505050565b6000601f19601f8301169050919050565b60006119b282611950565b6119bc818561195b565b93506119cc81856020860161196c565b6119d581611996565b840191505092915050565b600060208201905081810360008301526119fa81846119a7565b905092915050565b6000819050919050565b611a1581611a02565b8114611a2057600080fd5b50565b600081359050611a3281611a0c565b92915050565b600060208284031215611a4e57611a4d61188b565b5b6000611a5c84828501611a23565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611a9082611a65565b9050919050565b611aa081611a85565b82525050565b6000602082019050611abb6000830184611a97565b92915050565b611aca81611a85565b8114611ad557600080fd5b50565b600081359050611ae781611ac1565b92915050565b60008060408385031215611b0457611b0361188b565b5b6000611b1285828601611ad8565b9250506020611b2385828601611a23565b9150509250929050565b600080600060608486031215611b4657611b4561188b565b5b6000611b5486828701611ad8565b9350506020611b6586828701611ad8565b9250506040611b7686828701611a23565b9150509250925092565b600060208284031215611b9657611b9561188b565b5b6000611ba484828501611ad8565b91505092915050565b611bb681611a02565b82525050565b6000602082019050611bd16000830184611bad565b92915050565b611be08161191a565b8114611beb57600080fd5b50565b600081359050611bfd81611bd7565b92915050565b60008060408385031215611c1a57611c1961188b565b5b6000611c2885828601611ad8565b9250506020611c3985828601611bee565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611c8582611996565b810181811067ffffffffffffffff82111715611ca457611ca3611c4d565b5b80604052505050565b6000611cb7611881565b9050611cc38282611c7c565b919050565b600067ffffffffffffffff821115611ce357611ce2611c4d565b5b611cec82611996565b9050602081019050919050565b82818337600083830152505050565b6000611d1b611d1684611cc8565b611cad565b905082815260208101848484011115611d3757611d36611c48565b5b611d42848285611cf9565b509392505050565b600082601f830112611d5f57611d5e611c43565b5b8135611d6f848260208601611d08565b91505092915050565b60008060008060808587031215611d9257611d9161188b565b5b6000611da087828801611ad8565b9450506020611db187828801611ad8565b9350506040611dc287828801611a23565b925050606085013567ffffffffffffffff811115611de357611de2611890565b5b611def87828801611d4a565b91505092959194509250565b60008060408385031215611e1257611e1161188b565b5b6000611e2085828601611ad8565b9250506020611e3185828601611ad8565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611e8257607f821691505b602082108103611e9557611e94611e3b565b5b50919050565b6000606082019050611eb06000830186611a97565b611ebd6020830185611bad565b611eca6040830184611a97565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611f0c82611a02565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611f3e57611f3d611ed2565b5b600182019050919050565b600081905092915050565b6000611f5f82611950565b611f698185611f49565b9350611f7981856020860161196c565b80840191505092915050565b6000611f918285611f54565b9150611f9d8284611f54565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b6000611fd082611fa9565b611fda8185611fb4565b9350611fea81856020860161196c565b611ff381611996565b840191505092915050565b60006080820190506120136000830187611a97565b6120206020830186611a97565b61202d6040830185611bad565b818103606083015261203f8184611fc5565b905095945050505050565b600081519050612059816118c1565b92915050565b6000602082840312156120755761207461188b565b5b60006120838482850161204a565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006040820190506120d06000830185611a97565b6120dd6020830184611bad565b939250505056fea2646970667358221220e286127a7f2e901709ff7c9b8b563d43641ac56614c50c274b3b736c5a9b059064736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x379 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0x75794A3C EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2C3 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x24D JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x199 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x135 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x18ED JUMP JUMPDEST PUSH2 0x395 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x1935 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x153 PUSH2 0x477 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x19E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x1A38 JUMP JUMPDEST PUSH2 0x509 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x1AA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x1AED JUMP JUMPDEST PUSH2 0x525 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x1B2D JUMP JUMPDEST PUSH2 0x53B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x1B2D JUMP JUMPDEST PUSH2 0x63D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x207 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x202 SWAP2 SWAP1 PUSH2 0x1A38 JUMP JUMPDEST PUSH2 0x65D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x1AA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x237 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x232 SWAP2 SWAP1 PUSH2 0x1B80 JUMP JUMPDEST PUSH2 0x66F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x244 SWAP2 SWAP1 PUSH2 0x1BBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x267 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x1B80 JUMP JUMPDEST PUSH2 0x6AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x1BBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x285 PUSH2 0x765 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28F PUSH2 0x779 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29C SWAP2 SWAP1 PUSH2 0x1BBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AD PUSH2 0x77F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x1AA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CB PUSH2 0x7A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0x19E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F6 SWAP2 SWAP1 PUSH2 0x1C03 JUMP JUMPDEST PUSH2 0x83B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x317 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x312 SWAP2 SWAP1 PUSH2 0x1D78 JUMP JUMPDEST PUSH2 0x851 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x333 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32E SWAP2 SWAP1 PUSH2 0x1A38 JUMP JUMPDEST PUSH2 0x876 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x340 SWAP2 SWAP1 PUSH2 0x19E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x363 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35E SWAP2 SWAP1 PUSH2 0x1DFB JUMP JUMPDEST PUSH2 0x8DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x370 SWAP2 SWAP1 PUSH2 0x1935 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x393 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38E SWAP2 SWAP1 PUSH2 0x1B80 JUMP JUMPDEST PUSH2 0x973 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x460 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x470 JUMPI POP PUSH2 0x46F DUP3 PUSH2 0x9F9 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x486 SWAP1 PUSH2 0x1E6A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4B2 SWAP1 PUSH2 0x1E6A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4FF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4D4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4FF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4E2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x514 DUP3 PUSH2 0xA63 JUMP JUMPDEST POP PUSH2 0x51E DUP3 PUSH2 0xAEB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x537 DUP3 DUP3 PUSH2 0x532 PUSH2 0xB28 JUMP JUMPDEST PUSH2 0xB30 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5AD JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A4 SWAP2 SWAP1 PUSH2 0x1AA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5C1 DUP4 DUP4 PUSH2 0x5BC PUSH2 0xB28 JUMP JUMPDEST PUSH2 0xB42 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x637 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x62E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x658 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x851 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x668 DUP3 PUSH2 0xA63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x679 PUSH2 0xD5C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD SWAP1 POP PUSH2 0x68A DUP4 DUP3 PUSH2 0xDE3 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x69D SWAP1 PUSH2 0x1F01 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x71E JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP2 SWAP1 PUSH2 0x1AA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x76D PUSH2 0xD5C JUMP JUMPDEST PUSH2 0x777 PUSH1 0x0 PUSH2 0xEDC JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x7B8 SWAP1 PUSH2 0x1E6A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7E4 SWAP1 PUSH2 0x1E6A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x831 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x806 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x831 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x814 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x84D PUSH2 0x846 PUSH2 0xB28 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xFA2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x85C DUP5 DUP5 DUP5 PUSH2 0x53B JUMP JUMPDEST PUSH2 0x870 PUSH2 0x867 PUSH2 0xB28 JUMP JUMPDEST DUP6 DUP6 DUP6 DUP6 PUSH2 0x1111 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x881 DUP3 PUSH2 0xA63 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x88C PUSH2 0x12C2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x8AC JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8D7 JUMP JUMPDEST DUP1 PUSH2 0x8B6 DUP5 PUSH2 0x12D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8C7 SWAP3 SWAP2 SWAP1 PUSH2 0x1F85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x97B PUSH2 0xD5C JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9ED JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E4 SWAP2 SWAP1 PUSH2 0x1AA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9F6 DUP2 PUSH2 0xEDC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA6F DUP4 PUSH2 0x13A7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAE2 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD9 SWAP2 SWAP1 PUSH2 0x1BBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB3D DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x13E4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB4E DUP5 PUSH2 0x13A7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB90 JUMPI PUSH2 0xB8F DUP2 DUP5 DUP7 PUSH2 0x15A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC21 JUMPI PUSH2 0xBD2 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x13E4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCA4 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xD64 PUSH2 0xB28 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD82 PUSH2 0x77F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDE1 JUMPI PUSH2 0xDA5 PUSH2 0xB28 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD8 SWAP2 SWAP1 PUSH2 0x1AA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE55 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE4C SWAP2 SWAP1 PUSH2 0x1AA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE63 DUP4 DUP4 PUSH1 0x0 PUSH2 0xB42 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xED7 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xECE SWAP2 SWAP1 PUSH2 0x1AA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1013 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x100A SWAP2 SWAP1 PUSH2 0x1AA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1104 SWAP2 SWAP1 PUSH2 0x1935 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x12BB JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 DUP7 DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1170 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FFE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x11AC JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11A9 SWAP2 SWAP1 PUSH2 0x205F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1230 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x11DC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x11E1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1228 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121F SWAP2 SWAP1 PUSH2 0x1AA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x12B9 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12B0 SWAP2 SWAP1 PUSH2 0x1AA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x12E8 DUP5 PUSH2 0x166D JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1307 JUMPI PUSH2 0x1306 PUSH2 0x1C4D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1339 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x139C JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1390 JUMPI PUSH2 0x138F PUSH2 0x208C JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x1347 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x141D JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1551 JUMPI PUSH1 0x0 PUSH2 0x142D DUP5 PUSH2 0xA63 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1498 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x14AB JUMPI POP PUSH2 0x14A9 DUP2 DUP5 PUSH2 0x8DF JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x14ED JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14E4 SWAP2 SWAP1 PUSH2 0x1AA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x154F JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x15B4 DUP4 DUP4 DUP4 PUSH2 0x17C0 JUMP JUMPDEST PUSH2 0x1668 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1629 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1620 SWAP2 SWAP1 PUSH2 0x1BBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x165F SWAP3 SWAP2 SWAP1 PUSH2 0x20BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x16CB JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x16C1 JUMPI PUSH2 0x16C0 PUSH2 0x208C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1708 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x16FE JUMPI PUSH2 0x16FD PUSH2 0x208C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1737 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x172D JUMPI PUSH2 0x172C PUSH2 0x208C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1760 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1756 JUMPI PUSH2 0x1755 PUSH2 0x208C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1785 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x177B JUMPI PUSH2 0x177A PUSH2 0x208C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x17A8 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x179E JUMPI PUSH2 0x179D PUSH2 0x208C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x17B7 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1878 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1839 JUMPI POP PUSH2 0x1838 DUP5 DUP5 PUSH2 0x8DF JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1877 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x185F DUP4 PUSH2 0xAEB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18CA DUP2 PUSH2 0x1895 JUMP JUMPDEST DUP2 EQ PUSH2 0x18D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18E7 DUP2 PUSH2 0x18C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1903 JUMPI PUSH2 0x1902 PUSH2 0x188B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1911 DUP5 DUP3 DUP6 ADD PUSH2 0x18D8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x192F DUP2 PUSH2 0x191A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x194A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1926 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x198A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x196F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B2 DUP3 PUSH2 0x1950 JUMP JUMPDEST PUSH2 0x19BC DUP2 DUP6 PUSH2 0x195B JUMP JUMPDEST SWAP4 POP PUSH2 0x19CC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x196C JUMP JUMPDEST PUSH2 0x19D5 DUP2 PUSH2 0x1996 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19FA DUP2 DUP5 PUSH2 0x19A7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A15 DUP2 PUSH2 0x1A02 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A32 DUP2 PUSH2 0x1A0C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A4E JUMPI PUSH2 0x1A4D PUSH2 0x188B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A5C DUP5 DUP3 DUP6 ADD PUSH2 0x1A23 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A90 DUP3 PUSH2 0x1A65 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AA0 DUP2 PUSH2 0x1A85 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1ABB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A97 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1ACA DUP2 PUSH2 0x1A85 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AE7 DUP2 PUSH2 0x1AC1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B04 JUMPI PUSH2 0x1B03 PUSH2 0x188B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B12 DUP6 DUP3 DUP7 ADD PUSH2 0x1AD8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B23 DUP6 DUP3 DUP7 ADD PUSH2 0x1A23 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B46 JUMPI PUSH2 0x1B45 PUSH2 0x188B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B54 DUP7 DUP3 DUP8 ADD PUSH2 0x1AD8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1B65 DUP7 DUP3 DUP8 ADD PUSH2 0x1AD8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1B76 DUP7 DUP3 DUP8 ADD PUSH2 0x1A23 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B96 JUMPI PUSH2 0x1B95 PUSH2 0x188B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BA4 DUP5 DUP3 DUP6 ADD PUSH2 0x1AD8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BB6 DUP2 PUSH2 0x1A02 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BD1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1BAD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BE0 DUP2 PUSH2 0x191A JUMP JUMPDEST DUP2 EQ PUSH2 0x1BEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BFD DUP2 PUSH2 0x1BD7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C1A JUMPI PUSH2 0x1C19 PUSH2 0x188B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C28 DUP6 DUP3 DUP7 ADD PUSH2 0x1AD8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C39 DUP6 DUP3 DUP7 ADD PUSH2 0x1BEE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1C85 DUP3 PUSH2 0x1996 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1CA4 JUMPI PUSH2 0x1CA3 PUSH2 0x1C4D JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CB7 PUSH2 0x1881 JUMP JUMPDEST SWAP1 POP PUSH2 0x1CC3 DUP3 DUP3 PUSH2 0x1C7C JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1CE3 JUMPI PUSH2 0x1CE2 PUSH2 0x1C4D JUMP JUMPDEST JUMPDEST PUSH2 0x1CEC DUP3 PUSH2 0x1996 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D1B PUSH2 0x1D16 DUP5 PUSH2 0x1CC8 JUMP JUMPDEST PUSH2 0x1CAD JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1D37 JUMPI PUSH2 0x1D36 PUSH2 0x1C48 JUMP JUMPDEST JUMPDEST PUSH2 0x1D42 DUP5 DUP3 DUP6 PUSH2 0x1CF9 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1D5F JUMPI PUSH2 0x1D5E PUSH2 0x1C43 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1D6F DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1D08 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1D92 JUMPI PUSH2 0x1D91 PUSH2 0x188B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1DA0 DUP8 DUP3 DUP9 ADD PUSH2 0x1AD8 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1DB1 DUP8 DUP3 DUP9 ADD PUSH2 0x1AD8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1DC2 DUP8 DUP3 DUP9 ADD PUSH2 0x1A23 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DE3 JUMPI PUSH2 0x1DE2 PUSH2 0x1890 JUMP JUMPDEST JUMPDEST PUSH2 0x1DEF DUP8 DUP3 DUP9 ADD PUSH2 0x1D4A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E12 JUMPI PUSH2 0x1E11 PUSH2 0x188B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E20 DUP6 DUP3 DUP7 ADD PUSH2 0x1AD8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E31 DUP6 DUP3 DUP7 ADD PUSH2 0x1AD8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1E82 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1E95 JUMPI PUSH2 0x1E94 PUSH2 0x1E3B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1EB0 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1A97 JUMP JUMPDEST PUSH2 0x1EBD PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1BAD JUMP JUMPDEST PUSH2 0x1ECA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1A97 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1F0C DUP3 PUSH2 0x1A02 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1F3E JUMPI PUSH2 0x1F3D PUSH2 0x1ED2 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F5F DUP3 PUSH2 0x1950 JUMP JUMPDEST PUSH2 0x1F69 DUP2 DUP6 PUSH2 0x1F49 JUMP JUMPDEST SWAP4 POP PUSH2 0x1F79 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x196C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F91 DUP3 DUP6 PUSH2 0x1F54 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F9D DUP3 DUP5 PUSH2 0x1F54 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FD0 DUP3 PUSH2 0x1FA9 JUMP JUMPDEST PUSH2 0x1FDA DUP2 DUP6 PUSH2 0x1FB4 JUMP JUMPDEST SWAP4 POP PUSH2 0x1FEA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x196C JUMP JUMPDEST PUSH2 0x1FF3 DUP2 PUSH2 0x1996 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2013 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1A97 JUMP JUMPDEST PUSH2 0x2020 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1A97 JUMP JUMPDEST PUSH2 0x202D PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1BAD JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x203F DUP2 DUP5 PUSH2 0x1FC5 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2059 DUP2 PUSH2 0x18C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2075 JUMPI PUSH2 0x2074 PUSH2 0x188B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2083 DUP5 DUP3 DUP6 ADD PUSH2 0x204A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x20D0 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1A97 JUMP JUMPDEST PUSH2 0x20DD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1BAD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 DUP7 SLT PUSH27 0x7F2E901709FF7C9B8B563D43641AC56614C50C274B3B736C5A9B05 SWAP1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"176:401:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1560:300:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2364:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3496:154;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3322:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4142:578;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4786:132;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2184:118;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;385:189:23;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1919:208:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:6;;;:::i;:::-;;226:26:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2517:93:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3717:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4984:233;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2676:255;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3927:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1560:300:8;1662:4;1712:25;1697:40;;;:11;:40;;;;:104;;;;1768:33;1753:48;;;:11;:48;;;;1697:104;:156;;;;1817:36;1841:11;1817:23;:36::i;:::-;1697:156;1678:175;;1560:300;;;:::o;2364:89::-;2409:13;2441:5;2434:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2364:89;:::o;3496:154::-;3563:7;3582:22;3596:7;3582:13;:22::i;:::-;;3622:21;3635:7;3622:12;:21::i;:::-;3615:28;;3496:154;;;:::o;3322:113::-;3393:35;3402:2;3406:7;3415:12;:10;:12::i;:::-;3393:8;:35::i;:::-;3322:113;;:::o;4142:578::-;4250:1;4236:16;;:2;:16;;;4232:87;;4305:1;4275:33;;;;;;;;;;;:::i;:::-;;;;;;;;4232:87;4537:21;4561:34;4569:2;4573:7;4582:12;:10;:12::i;:::-;4561:7;:34::i;:::-;4537:58;;4626:4;4609:21;;:13;:21;;;4605:109;;4674:4;4680:7;4689:13;4653:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4605:109;4222:498;4142:578;;;:::o;4786:132::-;4872:39;4889:4;4895:2;4899:7;4872:39;;;;;;;;;;;;:16;:39::i;:::-;4786:132;;;:::o;2184:118::-;2247:7;2273:22;2287:7;2273:13;:22::i;:::-;2266:29;;2184:118;;;:::o;385:189:23:-;439:7;1531:13:6;:11;:13::i;:::-;459:15:23::1;477:11;;459:29;;499:18;505:2;509:7;499:5;:18::i;:::-;528:11;;:13;;;;;;;;;:::i;:::-;;;;;;559:7;552:14;;;385:189:::0;;;:::o;1919:208:8:-;1982:7;2022:1;2005:19;;:5;:19;;;2001:87;;2074:1;2047:30;;;;;;;;;;;:::i;:::-;;;;;;;;2001:87;2104:9;:16;2114:5;2104:16;;;;;;;;;;;;;;;;2097:23;;1919:208;;;:::o;2293:101:6:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;226:26:23:-;;;;:::o;1638:85:6:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2517:93:8:-;2564:13;2596:7;2589:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2517:93;:::o;3717:144::-;3802:52;3821:12;:10;:12::i;:::-;3835:8;3845;3802:18;:52::i;:::-;3717:144;;:::o;4984:233::-;5097:31;5110:4;5116:2;5120:7;5097:12;:31::i;:::-;5138:72;5172:12;:10;:12::i;:::-;5186:4;5192:2;5196:7;5205:4;5138:33;:72::i;:::-;4984:233;;;;:::o;2676:255::-;2740:13;2765:22;2779:7;2765:13;:22::i;:::-;;2798:21;2822:10;:8;:10::i;:::-;2798:34;;2873:1;2855:7;2849:21;:25;:75;;;;;;;;;;;;;;;;;2891:7;2900:18;:7;:16;:18::i;:::-;2877:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2849:75;2842:82;;;2676:255;;;:::o;3927:153::-;4015:4;4038:18;:25;4057:5;4038:25;;;;;;;;;;;;;;;:35;4064:8;4038:35;;;;;;;;;;;;;;;;;;;;;;;;;4031:42;;3927:153;;;;:::o;2543:215:6:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;763:146:16:-;839:4;877:25;862:40;;;:11;:40;;;;855:47;;763:146;;;:::o;16212:241:8:-;16275:7;16294:13;16310:17;16319:7;16310:8;:17::i;:::-;16294:33;;16358:1;16341:19;;:5;:19;;;16337:88;;16406:7;16383:31;;;;;;;;;;;:::i;:::-;;;;;;;;16337:88;16441:5;16434:12;;;16212:241;;;:::o;5963:127::-;6033:7;6059:15;:24;6075:7;6059:24;;;;;;;;;;;;;;;;;;;;;6052:31;;5963:127;;;:::o;656:96:13:-;709:7;735:10;728:17;;656:96;:::o;14492:120:8:-;14572:33;14581:2;14585:7;14594:4;14600;14572:8;:33::i;:::-;14492:120;;;:::o;8861:795::-;8947:7;8966:12;8981:17;8990:7;8981:8;:17::i;:::-;8966:32;;9074:1;9058:18;;:4;:18;;;9054:86;;9092:37;9109:4;9115;9121:7;9092:16;:37::i;:::-;9054:86;9200:1;9184:18;;:4;:18;;;9180:256;;9300:48;9317:1;9321:7;9338:1;9342:5;9300:8;:48::i;:::-;9410:1;9391:9;:15;9401:4;9391:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9180:256;9464:1;9450:16;;:2;:16;;;9446:107;;9527:1;9510:9;:13;9520:2;9510:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9446:107;9582:2;9563:7;:16;9571:7;9563:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9619:7;9615:2;9600:27;;9609:4;9600:27;;;;;;;;;;;;9645:4;9638:11;;;8861:795;;;;;:::o;1796:162:6:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;9978:327:8:-;10059:1;10045:16;;:2;:16;;;10041:87;;10114:1;10084:33;;;;;;;;;;;:::i;:::-;;;;;;;;10041:87;10137:21;10161:32;10169:2;10173:7;10190:1;10161:7;:32::i;:::-;10137:56;;10232:1;10207:27;;:13;:27;;;10203:96;;10285:1;10257:31;;;;;;;;;;;:::i;:::-;;;;;;;;10203:96;10031:274;9978:327;;:::o;2912:187:6:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;15665:312:8:-;15792:1;15772:22;;:8;:22;;;15768:91;;15839:8;15817:31;;;;;;;;;;;:::i;:::-;;;;;;;;15768:91;15906:8;15868:18;:25;15887:5;15868:25;;;;;;;;;;;;;;;:35;15894:8;15868:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15951:8;15929:41;;15944:5;15929:41;;;15961:8;15929:41;;;;;;:::i;:::-;;;;;;;;15665:312;;;:::o;993:924:12:-;1190:1;1173:2;:14;;;:18;1169:742;;;1227:2;1211:36;;;1248:8;1258:4;1264:7;1273:4;1211:67;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1207:694;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1585:1;1568:6;:13;:18;1564:323;;1708:2;1672:39;;;;;;;;;;;:::i;:::-;;;;;;;;1564:323;1839:6;1833:13;1824:6;1820:2;1816:15;1809:38;1207:694;1335:41;;;1325:51;;;:6;:51;;;;1321:182;;1481:2;1445:39;;;;;;;;;;;:::i;:::-;;;;;;;;1321:182;1279:238;1169:742;993:924;;;;;:::o;3173:92:8:-;3224:13;3249:9;;;;;;;;;;;;;;3173:92;:::o;1308:632:15:-;1364:13;1413:14;1450:1;1430:17;1441:5;1430:10;:17::i;:::-;:21;1413:38;;1465:20;1499:6;1488:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1465:41;;1520:11;1615:6;1611:2;1607:15;1599:6;1595:28;1588:35;;1650:247;1657:4;1650:247;;;1681:5;;;;;;;;1785:10;1780:2;1773:5;1769:14;1764:32;1759:3;1751:46;1841:2;1832:11;;;;;;:::i;:::-;;;;;1874:1;1865:5;:10;1650:247;1861:21;1650:247;1917:6;1910:13;;;;;1308:632;;;:::o;5732:115:8:-;5798:7;5824;:16;5832:7;5824:16;;;;;;;;;;;;;;;;;;;;;5817:23;;5732:115;;;:::o;14794:662::-;14954:9;:31;;;;14983:1;14967:18;;:4;:18;;;;14954:31;14950:460;;;15001:13;15017:22;15031:7;15017:13;:22::i;:::-;15001:38;;15183:1;15167:18;;:4;:18;;;;:35;;;;;15198:4;15189:13;;:5;:13;;;;15167:35;:69;;;;;15207:29;15224:5;15231:4;15207:16;:29::i;:::-;15206:30;15167:69;15163:142;;;15285:4;15263:27;;;;;;;;;;;:::i;:::-;;;;;;;;15163:142;15323:9;15319:81;;;15377:7;15373:2;15357:28;;15366:5;15357:28;;;;;;;;;;;;15319:81;14987:423;14950:460;15447:2;15420:15;:24;15436:7;15420:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14794:662;;;;:::o;7105:368::-;7217:38;7231:5;7238:7;7247;7217:13;:38::i;:::-;7212:255;;7292:1;7275:19;;:5;:19;;;7271:186;;7344:7;7321:31;;;;;;;;;;;:::i;:::-;;;;;;;;7271:186;7425:7;7434;7398:44;;;;;;;;;;;;:::i;:::-;;;;;;;;7212:255;7105:368;;;:::o;29154:916:18:-;29207:7;29226:14;29243:1;29226:18;;29291:8;29282:5;:17;29278:103;;29328:8;29319:17;;;;;;:::i;:::-;;;;;29364:2;29354:12;;;;29278:103;29407:8;29398:5;:17;29394:103;;29444:8;29435:17;;;;;;:::i;:::-;;;;;29480:2;29470:12;;;;29394:103;29523:8;29514:5;:17;29510:103;;29560:8;29551:17;;;;;;:::i;:::-;;;;;29596:2;29586:12;;;;29510:103;29639:7;29630:5;:16;29626:100;;29675:7;29666:16;;;;;;:::i;:::-;;;;;29710:1;29700:11;;;;29626:100;29752:7;29743:5;:16;29739:100;;29788:7;29779:16;;;;;;:::i;:::-;;;;;29823:1;29813:11;;;;29739:100;29865:7;29856:5;:16;29852:100;;29901:7;29892:16;;;;;;:::i;:::-;;;;;29936:1;29926:11;;;;29852:100;29978:7;29969:5;:16;29965:66;;30015:1;30005:11;;;;29965:66;30057:6;30050:13;;;29154:916;;;:::o;6401:272:8:-;6504:4;6558:1;6539:21;;:7;:21;;;;:127;;;;;6586:7;6577:16;;:5;:16;;;:52;;;;6597:32;6614:5;6621:7;6597:16;:32::i;:::-;6577:52;:88;;;;6658:7;6633:32;;:21;6646:7;6633:12;:21::i;:::-;:32;;;6577:88;6539:127;6520:146;;6401:272;;;;;:::o;7:75:26:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:619::-;4967:6;4975;4983;5032:2;5020:9;5011:7;5007:23;5003:32;5000:119;;;5038:79;;:::i;:::-;5000:119;5158:1;5183:53;5228:7;5219:6;5208:9;5204:22;5183:53;:::i;:::-;5173:63;;5129:117;5285:2;5311:53;5356:7;5347:6;5336:9;5332:22;5311:53;:::i;:::-;5301:63;;5256:118;5413:2;5439:53;5484:7;5475:6;5464:9;5460:22;5439:53;:::i;:::-;5429:63;;5384:118;4890:619;;;;;:::o;5515:329::-;5574:6;5623:2;5611:9;5602:7;5598:23;5594:32;5591:119;;;5629:79;;:::i;:::-;5591:119;5749:1;5774:53;5819:7;5810:6;5799:9;5795:22;5774:53;:::i;:::-;5764:63;;5720:117;5515:329;;;;:::o;5850:118::-;5937:24;5955:5;5937:24;:::i;:::-;5932:3;5925:37;5850:118;;:::o;5974:222::-;6067:4;6105:2;6094:9;6090:18;6082:26;;6118:71;6186:1;6175:9;6171:17;6162:6;6118:71;:::i;:::-;5974:222;;;;:::o;6202:116::-;6272:21;6287:5;6272:21;:::i;:::-;6265:5;6262:32;6252:60;;6308:1;6305;6298:12;6252:60;6202:116;:::o;6324:133::-;6367:5;6405:6;6392:20;6383:29;;6421:30;6445:5;6421:30;:::i;:::-;6324:133;;;;:::o;6463:468::-;6528:6;6536;6585:2;6573:9;6564:7;6560:23;6556:32;6553:119;;;6591:79;;:::i;:::-;6553:119;6711:1;6736:53;6781:7;6772:6;6761:9;6757:22;6736:53;:::i;:::-;6726:63;;6682:117;6838:2;6864:50;6906:7;6897:6;6886:9;6882:22;6864:50;:::i;:::-;6854:60;;6809:115;6463:468;;;;;:::o;6937:117::-;7046:1;7043;7036:12;7060:117;7169:1;7166;7159:12;7183:180;7231:77;7228:1;7221:88;7328:4;7325:1;7318:15;7352:4;7349:1;7342:15;7369:281;7452:27;7474:4;7452:27;:::i;:::-;7444:6;7440:40;7582:6;7570:10;7567:22;7546:18;7534:10;7531:34;7528:62;7525:88;;;7593:18;;:::i;:::-;7525:88;7633:10;7629:2;7622:22;7412:238;7369:281;;:::o;7656:129::-;7690:6;7717:20;;:::i;:::-;7707:30;;7746:33;7774:4;7766:6;7746:33;:::i;:::-;7656:129;;;:::o;7791:307::-;7852:4;7942:18;7934:6;7931:30;7928:56;;;7964:18;;:::i;:::-;7928:56;8002:29;8024:6;8002:29;:::i;:::-;7994:37;;8086:4;8080;8076:15;8068:23;;7791:307;;;:::o;8104:146::-;8201:6;8196:3;8191;8178:30;8242:1;8233:6;8228:3;8224:16;8217:27;8104:146;;;:::o;8256:423::-;8333:5;8358:65;8374:48;8415:6;8374:48;:::i;:::-;8358:65;:::i;:::-;8349:74;;8446:6;8439:5;8432:21;8484:4;8477:5;8473:16;8522:3;8513:6;8508:3;8504:16;8501:25;8498:112;;;8529:79;;:::i;:::-;8498:112;8619:54;8666:6;8661:3;8656;8619:54;:::i;:::-;8339:340;8256:423;;;;;:::o;8698:338::-;8753:5;8802:3;8795:4;8787:6;8783:17;8779:27;8769:122;;8810:79;;:::i;:::-;8769:122;8927:6;8914:20;8952:78;9026:3;9018:6;9011:4;9003:6;8999:17;8952:78;:::i;:::-;8943:87;;8759:277;8698:338;;;;:::o;9042:943::-;9137:6;9145;9153;9161;9210:3;9198:9;9189:7;9185:23;9181:33;9178:120;;;9217:79;;:::i;:::-;9178:120;9337:1;9362:53;9407:7;9398:6;9387:9;9383:22;9362:53;:::i;:::-;9352:63;;9308:117;9464:2;9490:53;9535:7;9526:6;9515:9;9511:22;9490:53;:::i;:::-;9480:63;;9435:118;9592:2;9618:53;9663:7;9654:6;9643:9;9639:22;9618:53;:::i;:::-;9608:63;;9563:118;9748:2;9737:9;9733:18;9720:32;9779:18;9771:6;9768:30;9765:117;;;9801:79;;:::i;:::-;9765:117;9906:62;9960:7;9951:6;9940:9;9936:22;9906:62;:::i;:::-;9896:72;;9691:287;9042:943;;;;;;;:::o;9991:474::-;10059:6;10067;10116:2;10104:9;10095:7;10091:23;10087:32;10084:119;;;10122:79;;:::i;:::-;10084:119;10242:1;10267:53;10312:7;10303:6;10292:9;10288:22;10267:53;:::i;:::-;10257:63;;10213:117;10369:2;10395:53;10440:7;10431:6;10420:9;10416:22;10395:53;:::i;:::-;10385:63;;10340:118;9991:474;;;;;:::o;10471:180::-;10519:77;10516:1;10509:88;10616:4;10613:1;10606:15;10640:4;10637:1;10630:15;10657:320;10701:6;10738:1;10732:4;10728:12;10718:22;;10785:1;10779:4;10775:12;10806:18;10796:81;;10862:4;10854:6;10850:17;10840:27;;10796:81;10924:2;10916:6;10913:14;10893:18;10890:38;10887:84;;10943:18;;:::i;:::-;10887:84;10708:269;10657:320;;;:::o;10983:442::-;11132:4;11170:2;11159:9;11155:18;11147:26;;11183:71;11251:1;11240:9;11236:17;11227:6;11183:71;:::i;:::-;11264:72;11332:2;11321:9;11317:18;11308:6;11264:72;:::i;:::-;11346;11414:2;11403:9;11399:18;11390:6;11346:72;:::i;:::-;10983:442;;;;;;:::o;11431:180::-;11479:77;11476:1;11469:88;11576:4;11573:1;11566:15;11600:4;11597:1;11590:15;11617:233;11656:3;11679:24;11697:5;11679:24;:::i;:::-;11670:33;;11725:66;11718:5;11715:77;11712:103;;11795:18;;:::i;:::-;11712:103;11842:1;11835:5;11831:13;11824:20;;11617:233;;;:::o;11856:148::-;11958:11;11995:3;11980:18;;11856:148;;;;:::o;12010:390::-;12116:3;12144:39;12177:5;12144:39;:::i;:::-;12199:89;12281:6;12276:3;12199:89;:::i;:::-;12192:96;;12297:65;12355:6;12350:3;12343:4;12336:5;12332:16;12297:65;:::i;:::-;12387:6;12382:3;12378:16;12371:23;;12120:280;12010:390;;;;:::o;12406:435::-;12586:3;12608:95;12699:3;12690:6;12608:95;:::i;:::-;12601:102;;12720:95;12811:3;12802:6;12720:95;:::i;:::-;12713:102;;12832:3;12825:10;;12406:435;;;;;:::o;12847:98::-;12898:6;12932:5;12926:12;12916:22;;12847:98;;;:::o;12951:168::-;13034:11;13068:6;13063:3;13056:19;13108:4;13103:3;13099:14;13084:29;;12951:168;;;;:::o;13125:373::-;13211:3;13239:38;13271:5;13239:38;:::i;:::-;13293:70;13356:6;13351:3;13293:70;:::i;:::-;13286:77;;13372:65;13430:6;13425:3;13418:4;13411:5;13407:16;13372:65;:::i;:::-;13462:29;13484:6;13462:29;:::i;:::-;13457:3;13453:39;13446:46;;13215:283;13125:373;;;;:::o;13504:640::-;13699:4;13737:3;13726:9;13722:19;13714:27;;13751:71;13819:1;13808:9;13804:17;13795:6;13751:71;:::i;:::-;13832:72;13900:2;13889:9;13885:18;13876:6;13832:72;:::i;:::-;13914;13982:2;13971:9;13967:18;13958:6;13914:72;:::i;:::-;14033:9;14027:4;14023:20;14018:2;14007:9;14003:18;13996:48;14061:76;14132:4;14123:6;14061:76;:::i;:::-;14053:84;;13504:640;;;;;;;:::o;14150:141::-;14206:5;14237:6;14231:13;14222:22;;14253:32;14279:5;14253:32;:::i;:::-;14150:141;;;;:::o;14297:349::-;14366:6;14415:2;14403:9;14394:7;14390:23;14386:32;14383:119;;;14421:79;;:::i;:::-;14383:119;14541:1;14566:63;14621:7;14612:6;14601:9;14597:22;14566:63;:::i;:::-;14556:73;;14512:127;14297:349;;;;:::o;14652:180::-;14700:77;14697:1;14690:88;14797:4;14794:1;14787:15;14821:4;14818:1;14811:15;14838:332;14959:4;14997:2;14986:9;14982:18;14974:26;;15010:71;15078:1;15067:9;15063:17;15054:6;15010:71;:::i;:::-;15091:72;15159:2;15148:9;15144:18;15135:6;15091:72;:::i;:::-;14838:332;;;;;:::o"},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","mint(address)":"6a627842","name()":"06fdde03","nextTokenId()":"75794a3c","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","renounceOwnership()":"715018a6","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MockRealEstate.sol\":\"MockRealEstate\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xddab643169f47a2c5291afafcbfdca045d9e6835553307d090bc048b6dabd0ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0ffbacfee42977167b3c75bd4787f8b72a7ab1176abd544f3dff662c6528e24\",\"dweb:/ipfs/QmUprM1cWCyaQ3LDjHA2DhwiPs3wekQ6MWXHFZdMMxpcyX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/MockRealEstate.sol\":{\"keccak256\":\"0x318a8dde703142e6753cc77c803301e946e209e36b1c70ad418bc130c71b144f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb452c34af83c5dc1b7ae742e3103ba72d2dde14870e058b4f7ce0efa7047492\",\"dweb:/ipfs/Qmdqj43SaD2yoDF1vu9t8sVmJtH9UxbmSQ6bKLUaMaDkFR\"]}},\"version\":1}"}},"contracts/RWARegistry.sol":{"RWARegistry":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"string","name":"metadataURI","type":"string"},{"indexed":false,"internalType":"uint256","name":"valuationUSD","type":"uint256"}],"name":"AssetRegistered","type":"event"},{"inputs":[],"name":"assetCounter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"assets","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"string","name":"metadataURI","type":"string"},{"internalType":"uint256","name":"valuationUSD","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assetId","type":"uint256"}],"name":"getAsset","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"string","name":"metadataURI","type":"string"},{"internalType":"uint256","name":"valuationUSD","type":"uint256"}],"internalType":"struct RWARegistry.Asset","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"metadataURI","type":"string"},{"internalType":"uint256","name":"valuationUSD","type":"uint256"}],"name":"registerAsset","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50610c54806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80634b91878614610051578063cf35bdd01461006f578063eac8f5b8146100a2578063f65db150146100d2575b600080fd5b610059610102565b60405161006691906104df565b60405180910390f35b61008960048036038101906100849190610530565b610108565b604051610099949392919061062e565b60405180910390f35b6100bc60048036038101906100b79190610530565b6101e0565b6040516100c99190610745565b60405180910390f35b6100ec60048036038101906100e791906107cc565b610308565b6040516100f991906104df565b60405180910390f35b60015481565b60006020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020180546101579061085b565b80601f01602080910402602001604051908101604052809291908181526020018280546101839061085b565b80156101d05780601f106101a5576101008083540402835291602001916101d0565b820191906000526020600020905b8154815290600101906020018083116101b357829003601f168201915b5050505050908060030154905084565b6101e8610488565b600080838152602001908152602001600020604051806080016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820180546102759061085b565b80601f01602080910402602001604051908101604052809291908181526020018280546102a19061085b565b80156102ee5780601f106102c3576101008083540402835291602001916102ee565b820191906000526020600020905b8154815290600101906020018083116102d157829003601f168201915b505050505081526020016003820154815250509050919050565b60006001600081548092919061031d906108bb565b9190505550604051806080016040528060015481526020013373ffffffffffffffffffffffffffffffffffffffff16815260200185858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081526020018381525060008060015481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020190816104199190610ade565b50606082015181600301559050503373ffffffffffffffffffffffffffffffffffffffff166001547f17bfbb947caca86ac77ea06397ced8c4f77a1a6c82a21b5a05a738ceddc1f66086868660405161047493929190610bec565b60405180910390a360015490509392505050565b604051806080016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001600081525090565b6000819050919050565b6104d9816104c6565b82525050565b60006020820190506104f460008301846104d0565b92915050565b600080fd5b600080fd5b61050d816104c6565b811461051857600080fd5b50565b60008135905061052a81610504565b92915050565b600060208284031215610546576105456104fa565b5b60006105548482850161051b565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105888261055d565b9050919050565b6105988161057d565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156105d85780820151818401526020810190506105bd565b60008484015250505050565b6000601f19601f8301169050919050565b60006106008261059e565b61060a81856105a9565b935061061a8185602086016105ba565b610623816105e4565b840191505092915050565b600060808201905061064360008301876104d0565b610650602083018661058f565b818103604083015261066281856105f5565b905061067160608301846104d0565b95945050505050565b610683816104c6565b82525050565b6106928161057d565b82525050565b600082825260208201905092915050565b60006106b48261059e565b6106be8185610698565b93506106ce8185602086016105ba565b6106d7816105e4565b840191505092915050565b60006080830160008301516106fa600086018261067a565b50602083015161070d6020860182610689565b506040830151848203604086015261072582826106a9565b915050606083015161073a606086018261067a565b508091505092915050565b6000602082019050818103600083015261075f81846106e2565b905092915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261078c5761078b610767565b5b8235905067ffffffffffffffff8111156107a9576107a861076c565b5b6020830191508360018202830111156107c5576107c4610771565b5b9250929050565b6000806000604084860312156107e5576107e46104fa565b5b600084013567ffffffffffffffff811115610803576108026104ff565b5b61080f86828701610776565b935093505060206108228682870161051b565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061087357607f821691505b6020821081036108865761088561082c565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006108c6826104c6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036108f8576108f761088c565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026109947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610957565b61099e8683610957565b95508019841693508086168417925050509392505050565b6000819050919050565b60006109db6109d66109d1846104c6565b6109b6565b6104c6565b9050919050565b6000819050919050565b6109f5836109c0565b610a09610a01826109e2565b848454610964565b825550505050565b600090565b610a1e610a11565b610a298184846109ec565b505050565b5b81811015610a4d57610a42600082610a16565b600181019050610a2f565b5050565b601f821115610a9257610a6381610932565b610a6c84610947565b81016020851015610a7b578190505b610a8f610a8785610947565b830182610a2e565b50505b505050565b600082821c905092915050565b6000610ab560001984600802610a97565b1980831691505092915050565b6000610ace8383610aa4565b9150826002028217905092915050565b610ae78261059e565b67ffffffffffffffff811115610b0057610aff610903565b5b610b0a825461085b565b610b15828285610a51565b600060209050601f831160018114610b485760008415610b36578287015190505b610b408582610ac2565b865550610ba8565b601f198416610b5686610932565b60005b82811015610b7e57848901518255600182019150602085019450602081019050610b59565b86831015610b9b5784890151610b97601f891682610aa4565b8355505b6001600288020188555050505b505050505050565b82818337600083830152505050565b6000610bcb83856105a9565b9350610bd8838584610bb0565b610be1836105e4565b840190509392505050565b60006040820190508181036000830152610c07818587610bbf565b9050610c1660208301846104d0565b94935050505056fea2646970667358221220f32520bdea12815f7931a7e829a005373ac42512ec51265424bac87071dea94164736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC54 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4B918786 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0xCF35BDD0 EQ PUSH2 0x6F JUMPI DUP1 PUSH4 0xEAC8F5B8 EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0xF65DB150 EQ PUSH2 0xD2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x102 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x89 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x84 SWAP2 SWAP1 PUSH2 0x530 JUMP JUMPDEST PUSH2 0x108 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x99 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x62E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB7 SWAP2 SWAP1 PUSH2 0x530 JUMP JUMPDEST PUSH2 0x1E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC9 SWAP2 SWAP1 PUSH2 0x745 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE7 SWAP2 SWAP1 PUSH2 0x7CC JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x157 SWAP1 PUSH2 0x85B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x183 SWAP1 PUSH2 0x85B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1D0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1A5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1D0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1B3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH2 0x1E8 PUSH2 0x488 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x275 SWAP1 PUSH2 0x85B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2A1 SWAP1 PUSH2 0x85B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2EE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2C3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2EE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2D1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x31D SWAP1 PUSH2 0x8BB JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP6 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x0 DUP1 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x419 SWAP2 SWAP1 PUSH2 0xADE JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 SLOAD PUSH32 0x17BFBB947CACA86AC77EA06397CED8C4F77A1A6C82A21B5A05A738CEDDC1F660 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x474 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xBEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SLOAD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4D9 DUP2 PUSH2 0x4C6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4F4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x50D DUP2 PUSH2 0x4C6 JUMP JUMPDEST DUP2 EQ PUSH2 0x518 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x52A DUP2 PUSH2 0x504 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x546 JUMPI PUSH2 0x545 PUSH2 0x4FA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x554 DUP5 DUP3 DUP6 ADD PUSH2 0x51B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x588 DUP3 PUSH2 0x55D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x598 DUP2 PUSH2 0x57D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5D8 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5BD JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x600 DUP3 PUSH2 0x59E JUMP JUMPDEST PUSH2 0x60A DUP2 DUP6 PUSH2 0x5A9 JUMP JUMPDEST SWAP4 POP PUSH2 0x61A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x5BA JUMP JUMPDEST PUSH2 0x623 DUP2 PUSH2 0x5E4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x643 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x4D0 JUMP JUMPDEST PUSH2 0x650 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x58F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x662 DUP2 DUP6 PUSH2 0x5F5 JUMP JUMPDEST SWAP1 POP PUSH2 0x671 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x4D0 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x683 DUP2 PUSH2 0x4C6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x692 DUP2 PUSH2 0x57D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B4 DUP3 PUSH2 0x59E JUMP JUMPDEST PUSH2 0x6BE DUP2 DUP6 PUSH2 0x698 JUMP JUMPDEST SWAP4 POP PUSH2 0x6CE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x5BA JUMP JUMPDEST PUSH2 0x6D7 DUP2 PUSH2 0x5E4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x6FA PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x67A JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x70D PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x689 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x725 DUP3 DUP3 PUSH2 0x6A9 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x73A PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x67A JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x75F DUP2 DUP5 PUSH2 0x6E2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x78C JUMPI PUSH2 0x78B PUSH2 0x767 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7A9 JUMPI PUSH2 0x7A8 PUSH2 0x76C JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x7C5 JUMPI PUSH2 0x7C4 PUSH2 0x771 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7E5 JUMPI PUSH2 0x7E4 PUSH2 0x4FA JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x803 JUMPI PUSH2 0x802 PUSH2 0x4FF JUMP JUMPDEST JUMPDEST PUSH2 0x80F DUP7 DUP3 DUP8 ADD PUSH2 0x776 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x20 PUSH2 0x822 DUP7 DUP3 DUP8 ADD PUSH2 0x51B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x873 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x886 JUMPI PUSH2 0x885 PUSH2 0x82C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8C6 DUP3 PUSH2 0x4C6 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x8F8 JUMPI PUSH2 0x8F7 PUSH2 0x88C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x994 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x957 JUMP JUMPDEST PUSH2 0x99E DUP7 DUP4 PUSH2 0x957 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9DB PUSH2 0x9D6 PUSH2 0x9D1 DUP5 PUSH2 0x4C6 JUMP JUMPDEST PUSH2 0x9B6 JUMP JUMPDEST PUSH2 0x4C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9F5 DUP4 PUSH2 0x9C0 JUMP JUMPDEST PUSH2 0xA09 PUSH2 0xA01 DUP3 PUSH2 0x9E2 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x964 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0xA1E PUSH2 0xA11 JUMP JUMPDEST PUSH2 0xA29 DUP2 DUP5 DUP5 PUSH2 0x9EC JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA4D JUMPI PUSH2 0xA42 PUSH1 0x0 DUP3 PUSH2 0xA16 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xA2F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xA92 JUMPI PUSH2 0xA63 DUP2 PUSH2 0x932 JUMP JUMPDEST PUSH2 0xA6C DUP5 PUSH2 0x947 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0xA7B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0xA8F PUSH2 0xA87 DUP6 PUSH2 0x947 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0xA2E JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB5 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0xA97 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xACE DUP4 DUP4 PUSH2 0xAA4 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAE7 DUP3 PUSH2 0x59E JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB00 JUMPI PUSH2 0xAFF PUSH2 0x903 JUMP JUMPDEST JUMPDEST PUSH2 0xB0A DUP3 SLOAD PUSH2 0x85B JUMP JUMPDEST PUSH2 0xB15 DUP3 DUP3 DUP6 PUSH2 0xA51 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xB48 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0xB36 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xB40 DUP6 DUP3 PUSH2 0xAC2 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xBA8 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xB56 DUP7 PUSH2 0x932 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xB7E JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xB59 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xB9B JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xB97 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0xAA4 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBCB DUP4 DUP6 PUSH2 0x5A9 JUMP JUMPDEST SWAP4 POP PUSH2 0xBD8 DUP4 DUP6 DUP5 PUSH2 0xBB0 JUMP JUMPDEST PUSH2 0xBE1 DUP4 PUSH2 0x5E4 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC07 DUP2 DUP6 DUP8 PUSH2 0xBBF JUMP JUMPDEST SWAP1 POP PUSH2 0xC16 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4D0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN 0x25 KECCAK256 0xBD 0xEA SLT DUP2 PUSH0 PUSH26 0x31A7E829A005373AC42512EC51265424BAC87071DEA94164736F PUSH13 0x63430008140033000000000000 ","sourceMap":"61:928:24:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@assetCounter_6972":{"entryPoint":258,"id":6972,"parameterSlots":0,"returnSlots":0},"@assets_6970":{"entryPoint":264,"id":6970,"parameterSlots":0,"returnSlots":0},"@getAsset_7030":{"entryPoint":480,"id":7030,"parameterSlots":1,"returnSlots":1},"@registerAsset_7017":{"entryPoint":776,"id":7017,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_calldata_ptr":{"entryPoint":1910,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_uint256":{"entryPoint":1307,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_calldata_ptrt_uint256":{"entryPoint":1996,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256":{"entryPoint":1328,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address":{"entryPoint":1673,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1423,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":3007,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr":{"entryPoint":1705,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":1525,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_struct$_Asset_$6965_memory_ptr_to_t_struct$_Asset_$6965_memory_ptr_fromStack":{"entryPoint":1762,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":1658,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":1232,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_string_calldata_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":3052,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_struct$_Asset_$6965_memory_ptr__to_t_struct$_Asset_$6965_memory_ptr__fromStack_reversed":{"entryPoint":1861,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":1247,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address_t_string_memory_ptr_t_uint256__to_t_uint256_t_address_t_string_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":1582,"id":null,"parameterSlots":5,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":2354,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":1438,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr":{"entryPoint":1688,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1449,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":2641,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":1405,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1373,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1222,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":2606,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":2496,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":2782,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":2992,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":1466,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":2375,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":2139,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":2754,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":2486,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":2235,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":2724,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":2188,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":2092,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":2307,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":2530,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":1900,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":1895,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":1905,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":1279,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1274,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":1508,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":2391,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":2711,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":2582,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":2404,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":2540,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":1284,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":2577,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:13596:26","statements":[{"body":{"nodeType":"YulBlock","src":"52:32:26","statements":[{"nodeType":"YulAssignment","src":"62:16:26","value":{"name":"value","nodeType":"YulIdentifier","src":"73:5:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:26"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:26","type":""}],"src":"7:77:26"},{"body":{"nodeType":"YulBlock","src":"155:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"172:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"195:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"177:17:26"},"nodeType":"YulFunctionCall","src":"177:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"165:6:26"},"nodeType":"YulFunctionCall","src":"165:37:26"},"nodeType":"YulExpressionStatement","src":"165:37:26"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"143:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"150:3:26","type":""}],"src":"90:118:26"},{"body":{"nodeType":"YulBlock","src":"312:124:26","statements":[{"nodeType":"YulAssignment","src":"322:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"334:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"345:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"330:3:26"},"nodeType":"YulFunctionCall","src":"330:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"322:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"402:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"415:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"426:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"411:3:26"},"nodeType":"YulFunctionCall","src":"411:17:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"358:43:26"},"nodeType":"YulFunctionCall","src":"358:71:26"},"nodeType":"YulExpressionStatement","src":"358:71:26"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"284:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"296:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"307:4:26","type":""}],"src":"214:222:26"},{"body":{"nodeType":"YulBlock","src":"482:35:26","statements":[{"nodeType":"YulAssignment","src":"492:19:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"508:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"502:5:26"},"nodeType":"YulFunctionCall","src":"502:9:26"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"492:6:26"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"475:6:26","type":""}],"src":"442:75:26"},{"body":{"nodeType":"YulBlock","src":"612:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"629:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"632:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"622:6:26"},"nodeType":"YulFunctionCall","src":"622:12:26"},"nodeType":"YulExpressionStatement","src":"622:12:26"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"523:117:26"},{"body":{"nodeType":"YulBlock","src":"735:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"752:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"755:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"745:6:26"},"nodeType":"YulFunctionCall","src":"745:12:26"},"nodeType":"YulExpressionStatement","src":"745:12:26"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"646:117:26"},{"body":{"nodeType":"YulBlock","src":"812:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"869:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"878:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"881:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"871:6:26"},"nodeType":"YulFunctionCall","src":"871:12:26"},"nodeType":"YulExpressionStatement","src":"871:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"835:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"860:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"842:17:26"},"nodeType":"YulFunctionCall","src":"842:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"832:2:26"},"nodeType":"YulFunctionCall","src":"832:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"825:6:26"},"nodeType":"YulFunctionCall","src":"825:43:26"},"nodeType":"YulIf","src":"822:63:26"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"805:5:26","type":""}],"src":"769:122:26"},{"body":{"nodeType":"YulBlock","src":"949:87:26","statements":[{"nodeType":"YulAssignment","src":"959:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"981:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"968:12:26"},"nodeType":"YulFunctionCall","src":"968:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"959:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1024:5:26"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"997:26:26"},"nodeType":"YulFunctionCall","src":"997:33:26"},"nodeType":"YulExpressionStatement","src":"997:33:26"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"927:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"935:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"943:5:26","type":""}],"src":"897:139:26"},{"body":{"nodeType":"YulBlock","src":"1108:263:26","statements":[{"body":{"nodeType":"YulBlock","src":"1154:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1156:77:26"},"nodeType":"YulFunctionCall","src":"1156:79:26"},"nodeType":"YulExpressionStatement","src":"1156:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1129:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"1138:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1125:3:26"},"nodeType":"YulFunctionCall","src":"1125:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"1150:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1121:3:26"},"nodeType":"YulFunctionCall","src":"1121:32:26"},"nodeType":"YulIf","src":"1118:119:26"},{"nodeType":"YulBlock","src":"1247:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"1262:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"1276:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1266:6:26","type":""}]},{"nodeType":"YulAssignment","src":"1291:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1326:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"1337:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1322:3:26"},"nodeType":"YulFunctionCall","src":"1322:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1346:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1301:20:26"},"nodeType":"YulFunctionCall","src":"1301:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1291:6:26"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1078:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1089:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1101:6:26","type":""}],"src":"1042:329:26"},{"body":{"nodeType":"YulBlock","src":"1422:81:26","statements":[{"nodeType":"YulAssignment","src":"1432:65:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1447:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"1454:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1443:3:26"},"nodeType":"YulFunctionCall","src":"1443:54:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1432:7:26"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1404:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1414:7:26","type":""}],"src":"1377:126:26"},{"body":{"nodeType":"YulBlock","src":"1554:51:26","statements":[{"nodeType":"YulAssignment","src":"1564:35:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1593:5:26"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1575:17:26"},"nodeType":"YulFunctionCall","src":"1575:24:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1564:7:26"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1536:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1546:7:26","type":""}],"src":"1509:96:26"},{"body":{"nodeType":"YulBlock","src":"1676:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1693:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1716:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1698:17:26"},"nodeType":"YulFunctionCall","src":"1698:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1686:6:26"},"nodeType":"YulFunctionCall","src":"1686:37:26"},"nodeType":"YulExpressionStatement","src":"1686:37:26"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1664:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1671:3:26","type":""}],"src":"1611:118:26"},{"body":{"nodeType":"YulBlock","src":"1794:40:26","statements":[{"nodeType":"YulAssignment","src":"1805:22:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1821:5:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1815:5:26"},"nodeType":"YulFunctionCall","src":"1815:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1805:6:26"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1777:5:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1787:6:26","type":""}],"src":"1735:99:26"},{"body":{"nodeType":"YulBlock","src":"1936:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1953:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"1958:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1946:6:26"},"nodeType":"YulFunctionCall","src":"1946:19:26"},"nodeType":"YulExpressionStatement","src":"1946:19:26"},{"nodeType":"YulAssignment","src":"1974:29:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1993:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"1998:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1989:3:26"},"nodeType":"YulFunctionCall","src":"1989:14:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1974:11:26"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1908:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"1913:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1924:11:26","type":""}],"src":"1840:169:26"},{"body":{"nodeType":"YulBlock","src":"2077:184:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2087:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"2096:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2091:1:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"2156:63:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2181:3:26"},{"name":"i","nodeType":"YulIdentifier","src":"2186:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2177:3:26"},"nodeType":"YulFunctionCall","src":"2177:11:26"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2200:3:26"},{"name":"i","nodeType":"YulIdentifier","src":"2205:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2196:3:26"},"nodeType":"YulFunctionCall","src":"2196:11:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2190:5:26"},"nodeType":"YulFunctionCall","src":"2190:18:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2170:6:26"},"nodeType":"YulFunctionCall","src":"2170:39:26"},"nodeType":"YulExpressionStatement","src":"2170:39:26"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2117:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"2120:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2114:2:26"},"nodeType":"YulFunctionCall","src":"2114:13:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2128:19:26","statements":[{"nodeType":"YulAssignment","src":"2130:15:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2139:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"2142:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2135:3:26"},"nodeType":"YulFunctionCall","src":"2135:10:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2130:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"2110:3:26","statements":[]},"src":"2106:113:26"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2239:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"2244:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2235:3:26"},"nodeType":"YulFunctionCall","src":"2235:16:26"},{"kind":"number","nodeType":"YulLiteral","src":"2253:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2228:6:26"},"nodeType":"YulFunctionCall","src":"2228:27:26"},"nodeType":"YulExpressionStatement","src":"2228:27:26"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2059:3:26","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2064:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"2069:6:26","type":""}],"src":"2015:246:26"},{"body":{"nodeType":"YulBlock","src":"2315:54:26","statements":[{"nodeType":"YulAssignment","src":"2325:38:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2343:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"2350:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2339:3:26"},"nodeType":"YulFunctionCall","src":"2339:14:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2359:2:26","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2355:3:26"},"nodeType":"YulFunctionCall","src":"2355:7:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2335:3:26"},"nodeType":"YulFunctionCall","src":"2335:28:26"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2325:6:26"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2298:5:26","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2308:6:26","type":""}],"src":"2267:102:26"},{"body":{"nodeType":"YulBlock","src":"2467:285:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2477:53:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2524:5:26"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2491:32:26"},"nodeType":"YulFunctionCall","src":"2491:39:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2481:6:26","type":""}]},{"nodeType":"YulAssignment","src":"2539:78:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2605:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"2610:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2546:58:26"},"nodeType":"YulFunctionCall","src":"2546:71:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2539:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2665:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"2672:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2661:3:26"},"nodeType":"YulFunctionCall","src":"2661:16:26"},{"name":"pos","nodeType":"YulIdentifier","src":"2679:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"2684:6:26"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2626:34:26"},"nodeType":"YulFunctionCall","src":"2626:65:26"},"nodeType":"YulExpressionStatement","src":"2626:65:26"},{"nodeType":"YulAssignment","src":"2700:46:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2711:3:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2738:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2716:21:26"},"nodeType":"YulFunctionCall","src":"2716:29:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2707:3:26"},"nodeType":"YulFunctionCall","src":"2707:39:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2700:3:26"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2448:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2455:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2463:3:26","type":""}],"src":"2375:377:26"},{"body":{"nodeType":"YulBlock","src":"2960:442:26","statements":[{"nodeType":"YulAssignment","src":"2970:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2982:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"2993:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2978:3:26"},"nodeType":"YulFunctionCall","src":"2978:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2970:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3051:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3064:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3075:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3060:3:26"},"nodeType":"YulFunctionCall","src":"3060:17:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3007:43:26"},"nodeType":"YulFunctionCall","src":"3007:71:26"},"nodeType":"YulExpressionStatement","src":"3007:71:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"3132:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3145:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3156:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3141:3:26"},"nodeType":"YulFunctionCall","src":"3141:18:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"3088:43:26"},"nodeType":"YulFunctionCall","src":"3088:72:26"},"nodeType":"YulExpressionStatement","src":"3088:72:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3181:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3192:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3177:3:26"},"nodeType":"YulFunctionCall","src":"3177:18:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3201:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"3207:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3197:3:26"},"nodeType":"YulFunctionCall","src":"3197:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3170:6:26"},"nodeType":"YulFunctionCall","src":"3170:48:26"},"nodeType":"YulExpressionStatement","src":"3170:48:26"},{"nodeType":"YulAssignment","src":"3227:86:26","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"3299:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"3308:4:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3235:63:26"},"nodeType":"YulFunctionCall","src":"3235:78:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3227:4:26"}]},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"3367:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3380:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3391:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3376:3:26"},"nodeType":"YulFunctionCall","src":"3376:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3323:43:26"},"nodeType":"YulFunctionCall","src":"3323:72:26"},"nodeType":"YulExpressionStatement","src":"3323:72:26"}]},"name":"abi_encode_tuple_t_uint256_t_address_t_string_memory_ptr_t_uint256__to_t_uint256_t_address_t_string_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2908:9:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2920:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2928:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2936:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2944:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2955:4:26","type":""}],"src":"2758:644:26"},{"body":{"nodeType":"YulBlock","src":"3463:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3480:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3503:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3485:17:26"},"nodeType":"YulFunctionCall","src":"3485:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3473:6:26"},"nodeType":"YulFunctionCall","src":"3473:37:26"},"nodeType":"YulExpressionStatement","src":"3473:37:26"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3451:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3458:3:26","type":""}],"src":"3408:108:26"},{"body":{"nodeType":"YulBlock","src":"3577:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3594:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3617:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3599:17:26"},"nodeType":"YulFunctionCall","src":"3599:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3587:6:26"},"nodeType":"YulFunctionCall","src":"3587:37:26"},"nodeType":"YulExpressionStatement","src":"3587:37:26"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3565:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3572:3:26","type":""}],"src":"3522:108:26"},{"body":{"nodeType":"YulBlock","src":"3722:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3739:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"3744:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3732:6:26"},"nodeType":"YulFunctionCall","src":"3732:19:26"},"nodeType":"YulExpressionStatement","src":"3732:19:26"},{"nodeType":"YulAssignment","src":"3760:29:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3779:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"3784:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3775:3:26"},"nodeType":"YulFunctionCall","src":"3775:14:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"3760:11:26"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3694:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"3699:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"3710:11:26","type":""}],"src":"3636:159:26"},{"body":{"nodeType":"YulBlock","src":"3883:275:26","statements":[{"nodeType":"YulVariableDeclaration","src":"3893:53:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3940:5:26"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3907:32:26"},"nodeType":"YulFunctionCall","src":"3907:39:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3897:6:26","type":""}]},{"nodeType":"YulAssignment","src":"3955:68:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4011:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"4016:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3962:48:26"},"nodeType":"YulFunctionCall","src":"3962:61:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3955:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4071:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"4078:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4067:3:26"},"nodeType":"YulFunctionCall","src":"4067:16:26"},{"name":"pos","nodeType":"YulIdentifier","src":"4085:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"4090:6:26"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"4032:34:26"},"nodeType":"YulFunctionCall","src":"4032:65:26"},"nodeType":"YulExpressionStatement","src":"4032:65:26"},{"nodeType":"YulAssignment","src":"4106:46:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4117:3:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4144:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4122:21:26"},"nodeType":"YulFunctionCall","src":"4122:29:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4113:3:26"},"nodeType":"YulFunctionCall","src":"4113:39:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4106:3:26"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3864:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3871:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3879:3:26","type":""}],"src":"3801:357:26"},{"body":{"nodeType":"YulBlock","src":"4344:844:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4354:26:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4370:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"4375:4:26","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4366:3:26"},"nodeType":"YulFunctionCall","src":"4366:14:26"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"4358:4:26","type":""}]},{"nodeType":"YulBlock","src":"4390:162:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4423:43:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4453:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"4460:4:26","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4449:3:26"},"nodeType":"YulFunctionCall","src":"4449:16:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4443:5:26"},"nodeType":"YulFunctionCall","src":"4443:23:26"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"4427:12:26","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"4513:12:26"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4531:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"4536:4:26","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4527:3:26"},"nodeType":"YulFunctionCall","src":"4527:14:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"4479:33:26"},"nodeType":"YulFunctionCall","src":"4479:63:26"},"nodeType":"YulExpressionStatement","src":"4479:63:26"}]},{"nodeType":"YulBlock","src":"4562:165:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4598:43:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4628:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"4635:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4624:3:26"},"nodeType":"YulFunctionCall","src":"4624:16:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4618:5:26"},"nodeType":"YulFunctionCall","src":"4618:23:26"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"4602:12:26","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"4688:12:26"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4706:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"4711:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4702:3:26"},"nodeType":"YulFunctionCall","src":"4702:14:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"4654:33:26"},"nodeType":"YulFunctionCall","src":"4654:63:26"},"nodeType":"YulExpressionStatement","src":"4654:63:26"}]},{"nodeType":"YulBlock","src":"4737:242:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4779:43:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4809:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"4816:4:26","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4805:3:26"},"nodeType":"YulFunctionCall","src":"4805:16:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4799:5:26"},"nodeType":"YulFunctionCall","src":"4799:23:26"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"4783:12:26","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4847:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"4852:4:26","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4843:3:26"},"nodeType":"YulFunctionCall","src":"4843:14:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4863:4:26"},{"name":"pos","nodeType":"YulIdentifier","src":"4869:3:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4859:3:26"},"nodeType":"YulFunctionCall","src":"4859:14:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4836:6:26"},"nodeType":"YulFunctionCall","src":"4836:38:26"},"nodeType":"YulExpressionStatement","src":"4836:38:26"},{"nodeType":"YulAssignment","src":"4887:81:26","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"4949:12:26"},{"name":"tail","nodeType":"YulIdentifier","src":"4963:4:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4895:53:26"},"nodeType":"YulFunctionCall","src":"4895:73:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4887:4:26"}]}]},{"nodeType":"YulBlock","src":"4989:172:26","statements":[{"nodeType":"YulVariableDeclaration","src":"5032:43:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5062:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"5069:4:26","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5058:3:26"},"nodeType":"YulFunctionCall","src":"5058:16:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5052:5:26"},"nodeType":"YulFunctionCall","src":"5052:23:26"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"5036:12:26","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"5122:12:26"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5140:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"5145:4:26","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5136:3:26"},"nodeType":"YulFunctionCall","src":"5136:14:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5088:33:26"},"nodeType":"YulFunctionCall","src":"5088:63:26"},"nodeType":"YulExpressionStatement","src":"5088:63:26"}]},{"nodeType":"YulAssignment","src":"5171:11:26","value":{"name":"tail","nodeType":"YulIdentifier","src":"5178:4:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5171:3:26"}]}]},"name":"abi_encode_t_struct$_Asset_$6965_memory_ptr_to_t_struct$_Asset_$6965_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4323:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4330:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4339:3:26","type":""}],"src":"4224:964:26"},{"body":{"nodeType":"YulBlock","src":"5338:221:26","statements":[{"nodeType":"YulAssignment","src":"5348:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5360:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5371:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5356:3:26"},"nodeType":"YulFunctionCall","src":"5356:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5348:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5395:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5406:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5391:3:26"},"nodeType":"YulFunctionCall","src":"5391:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5414:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"5420:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5410:3:26"},"nodeType":"YulFunctionCall","src":"5410:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5384:6:26"},"nodeType":"YulFunctionCall","src":"5384:47:26"},"nodeType":"YulExpressionStatement","src":"5384:47:26"},{"nodeType":"YulAssignment","src":"5440:112:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5538:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"5547:4:26"}],"functionName":{"name":"abi_encode_t_struct$_Asset_$6965_memory_ptr_to_t_struct$_Asset_$6965_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5448:89:26"},"nodeType":"YulFunctionCall","src":"5448:104:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5440:4:26"}]}]},"name":"abi_encode_tuple_t_struct$_Asset_$6965_memory_ptr__to_t_struct$_Asset_$6965_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5310:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5322:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5333:4:26","type":""}],"src":"5194:365:26"},{"body":{"nodeType":"YulBlock","src":"5654:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5671:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5674:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5664:6:26"},"nodeType":"YulFunctionCall","src":"5664:12:26"},"nodeType":"YulExpressionStatement","src":"5664:12:26"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"5565:117:26"},{"body":{"nodeType":"YulBlock","src":"5777:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5794:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5797:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5787:6:26"},"nodeType":"YulFunctionCall","src":"5787:12:26"},"nodeType":"YulExpressionStatement","src":"5787:12:26"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"5688:117:26"},{"body":{"nodeType":"YulBlock","src":"5900:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5917:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5920:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5910:6:26"},"nodeType":"YulFunctionCall","src":"5910:12:26"},"nodeType":"YulExpressionStatement","src":"5910:12:26"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"5811:117:26"},{"body":{"nodeType":"YulBlock","src":"6023:478:26","statements":[{"body":{"nodeType":"YulBlock","src":"6072:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"6074:77:26"},"nodeType":"YulFunctionCall","src":"6074:79:26"},"nodeType":"YulExpressionStatement","src":"6074:79:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6051:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"6059:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6047:3:26"},"nodeType":"YulFunctionCall","src":"6047:17:26"},{"name":"end","nodeType":"YulIdentifier","src":"6066:3:26"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6043:3:26"},"nodeType":"YulFunctionCall","src":"6043:27:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6036:6:26"},"nodeType":"YulFunctionCall","src":"6036:35:26"},"nodeType":"YulIf","src":"6033:122:26"},{"nodeType":"YulAssignment","src":"6164:30:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6187:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6174:12:26"},"nodeType":"YulFunctionCall","src":"6174:20:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6164:6:26"}]},{"body":{"nodeType":"YulBlock","src":"6237:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"6239:77:26"},"nodeType":"YulFunctionCall","src":"6239:79:26"},"nodeType":"YulExpressionStatement","src":"6239:79:26"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6209:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"6217:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6206:2:26"},"nodeType":"YulFunctionCall","src":"6206:30:26"},"nodeType":"YulIf","src":"6203:117:26"},{"nodeType":"YulAssignment","src":"6329:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6345:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"6353:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6341:3:26"},"nodeType":"YulFunctionCall","src":"6341:17:26"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"6329:8:26"}]},{"body":{"nodeType":"YulBlock","src":"6412:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"6414:77:26"},"nodeType":"YulFunctionCall","src":"6414:79:26"},"nodeType":"YulExpressionStatement","src":"6414:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"6377:8:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6391:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"6399:4:26","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6387:3:26"},"nodeType":"YulFunctionCall","src":"6387:17:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6373:3:26"},"nodeType":"YulFunctionCall","src":"6373:32:26"},{"name":"end","nodeType":"YulIdentifier","src":"6407:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6370:2:26"},"nodeType":"YulFunctionCall","src":"6370:41:26"},"nodeType":"YulIf","src":"6367:128:26"}]},"name":"abi_decode_t_string_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5990:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"5998:3:26","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"6006:8:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"6016:6:26","type":""}],"src":"5948:553:26"},{"body":{"nodeType":"YulBlock","src":"6610:571:26","statements":[{"body":{"nodeType":"YulBlock","src":"6656:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6658:77:26"},"nodeType":"YulFunctionCall","src":"6658:79:26"},"nodeType":"YulExpressionStatement","src":"6658:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6631:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"6640:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6627:3:26"},"nodeType":"YulFunctionCall","src":"6627:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"6652:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6623:3:26"},"nodeType":"YulFunctionCall","src":"6623:32:26"},"nodeType":"YulIf","src":"6620:119:26"},{"nodeType":"YulBlock","src":"6749:297:26","statements":[{"nodeType":"YulVariableDeclaration","src":"6764:45:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6795:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"6806:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6791:3:26"},"nodeType":"YulFunctionCall","src":"6791:17:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6778:12:26"},"nodeType":"YulFunctionCall","src":"6778:31:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6768:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"6856:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"6858:77:26"},"nodeType":"YulFunctionCall","src":"6858:79:26"},"nodeType":"YulExpressionStatement","src":"6858:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6828:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"6836:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6825:2:26"},"nodeType":"YulFunctionCall","src":"6825:30:26"},"nodeType":"YulIf","src":"6822:117:26"},{"nodeType":"YulAssignment","src":"6953:83:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7008:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"7019:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7004:3:26"},"nodeType":"YulFunctionCall","src":"7004:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7028:7:26"}],"functionName":{"name":"abi_decode_t_string_calldata_ptr","nodeType":"YulIdentifier","src":"6971:32:26"},"nodeType":"YulFunctionCall","src":"6971:65:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6953:6:26"},{"name":"value1","nodeType":"YulIdentifier","src":"6961:6:26"}]}]},{"nodeType":"YulBlock","src":"7056:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"7071:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"7085:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7075:6:26","type":""}]},{"nodeType":"YulAssignment","src":"7101:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7136:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"7147:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7132:3:26"},"nodeType":"YulFunctionCall","src":"7132:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7156:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7111:20:26"},"nodeType":"YulFunctionCall","src":"7111:53:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7101:6:26"}]}]}]},"name":"abi_decode_tuple_t_string_calldata_ptrt_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6564:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6575:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6587:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6595:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6603:6:26","type":""}],"src":"6507:674:26"},{"body":{"nodeType":"YulBlock","src":"7215:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7232:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7235:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7225:6:26"},"nodeType":"YulFunctionCall","src":"7225:88:26"},"nodeType":"YulExpressionStatement","src":"7225:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7329:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7332:4:26","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7322:6:26"},"nodeType":"YulFunctionCall","src":"7322:15:26"},"nodeType":"YulExpressionStatement","src":"7322:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7353:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7356:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7346:6:26"},"nodeType":"YulFunctionCall","src":"7346:15:26"},"nodeType":"YulExpressionStatement","src":"7346:15:26"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"7187:180:26"},{"body":{"nodeType":"YulBlock","src":"7424:269:26","statements":[{"nodeType":"YulAssignment","src":"7434:22:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7448:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"7454:1:26","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7444:3:26"},"nodeType":"YulFunctionCall","src":"7444:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7434:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"7465:38:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7495:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"7501:1:26","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7491:3:26"},"nodeType":"YulFunctionCall","src":"7491:12:26"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"7469:18:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"7542:51:26","statements":[{"nodeType":"YulAssignment","src":"7556:27:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7570:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"7578:4:26","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7566:3:26"},"nodeType":"YulFunctionCall","src":"7566:17:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7556:6:26"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"7522:18:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7515:6:26"},"nodeType":"YulFunctionCall","src":"7515:26:26"},"nodeType":"YulIf","src":"7512:81:26"},{"body":{"nodeType":"YulBlock","src":"7645:42:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"7659:16:26"},"nodeType":"YulFunctionCall","src":"7659:18:26"},"nodeType":"YulExpressionStatement","src":"7659:18:26"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"7609:18:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7632:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"7640:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7629:2:26"},"nodeType":"YulFunctionCall","src":"7629:14:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7606:2:26"},"nodeType":"YulFunctionCall","src":"7606:38:26"},"nodeType":"YulIf","src":"7603:84:26"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7408:4:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"7417:6:26","type":""}],"src":"7373:320:26"},{"body":{"nodeType":"YulBlock","src":"7727:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7744:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7747:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7737:6:26"},"nodeType":"YulFunctionCall","src":"7737:88:26"},"nodeType":"YulExpressionStatement","src":"7737:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7841:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7844:4:26","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7834:6:26"},"nodeType":"YulFunctionCall","src":"7834:15:26"},"nodeType":"YulExpressionStatement","src":"7834:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7865:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7868:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7858:6:26"},"nodeType":"YulFunctionCall","src":"7858:15:26"},"nodeType":"YulExpressionStatement","src":"7858:15:26"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"7699:180:26"},{"body":{"nodeType":"YulBlock","src":"7928:190:26","statements":[{"nodeType":"YulAssignment","src":"7938:33:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7965:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7947:17:26"},"nodeType":"YulFunctionCall","src":"7947:24:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7938:5:26"}]},{"body":{"nodeType":"YulBlock","src":"8061:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8063:16:26"},"nodeType":"YulFunctionCall","src":"8063:18:26"},"nodeType":"YulExpressionStatement","src":"8063:18:26"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7986:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"7993:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7983:2:26"},"nodeType":"YulFunctionCall","src":"7983:77:26"},"nodeType":"YulIf","src":"7980:103:26"},{"nodeType":"YulAssignment","src":"8092:20:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8103:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"8110:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8099:3:26"},"nodeType":"YulFunctionCall","src":"8099:13:26"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"8092:3:26"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7914:5:26","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"7924:3:26","type":""}],"src":"7885:233:26"},{"body":{"nodeType":"YulBlock","src":"8152:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8169:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8172:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8162:6:26"},"nodeType":"YulFunctionCall","src":"8162:88:26"},"nodeType":"YulExpressionStatement","src":"8162:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8266:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8269:4:26","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8259:6:26"},"nodeType":"YulFunctionCall","src":"8259:15:26"},"nodeType":"YulExpressionStatement","src":"8259:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8290:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8293:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8283:6:26"},"nodeType":"YulFunctionCall","src":"8283:15:26"},"nodeType":"YulExpressionStatement","src":"8283:15:26"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"8124:180:26"},{"body":{"nodeType":"YulBlock","src":"8364:87:26","statements":[{"nodeType":"YulAssignment","src":"8374:11:26","value":{"name":"ptr","nodeType":"YulIdentifier","src":"8382:3:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8374:4:26"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8402:1:26","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"8405:3:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8395:6:26"},"nodeType":"YulFunctionCall","src":"8395:14:26"},"nodeType":"YulExpressionStatement","src":"8395:14:26"},{"nodeType":"YulAssignment","src":"8418:26:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8436:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8439:4:26","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"8426:9:26"},"nodeType":"YulFunctionCall","src":"8426:18:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8418:4:26"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"8351:3:26","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"8359:4:26","type":""}],"src":"8310:141:26"},{"body":{"nodeType":"YulBlock","src":"8501:49:26","statements":[{"nodeType":"YulAssignment","src":"8511:33:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8529:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"8536:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8525:3:26"},"nodeType":"YulFunctionCall","src":"8525:14:26"},{"kind":"number","nodeType":"YulLiteral","src":"8541:2:26","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8521:3:26"},"nodeType":"YulFunctionCall","src":"8521:23:26"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"8511:6:26"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8484:5:26","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"8494:6:26","type":""}],"src":"8457:93:26"},{"body":{"nodeType":"YulBlock","src":"8609:54:26","statements":[{"nodeType":"YulAssignment","src":"8619:37:26","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"8644:4:26"},{"name":"value","nodeType":"YulIdentifier","src":"8650:5:26"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8640:3:26"},"nodeType":"YulFunctionCall","src":"8640:16:26"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"8619:8:26"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"8584:4:26","type":""},{"name":"value","nodeType":"YulTypedName","src":"8590:5:26","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"8600:8:26","type":""}],"src":"8556:107:26"},{"body":{"nodeType":"YulBlock","src":"8745:317:26","statements":[{"nodeType":"YulVariableDeclaration","src":"8755:35:26","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"8776:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"8788:1:26","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8772:3:26"},"nodeType":"YulFunctionCall","src":"8772:18:26"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"8759:9:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8799:109:26","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"8830:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"8841:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"8811:18:26"},"nodeType":"YulFunctionCall","src":"8811:97:26"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"8803:4:26","type":""}]},{"nodeType":"YulAssignment","src":"8917:51:26","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"8948:9:26"},{"name":"toInsert","nodeType":"YulIdentifier","src":"8959:8:26"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"8929:18:26"},"nodeType":"YulFunctionCall","src":"8929:39:26"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"8917:8:26"}]},{"nodeType":"YulAssignment","src":"8977:30:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8990:5:26"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"9001:4:26"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8997:3:26"},"nodeType":"YulFunctionCall","src":"8997:9:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8986:3:26"},"nodeType":"YulFunctionCall","src":"8986:21:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8977:5:26"}]},{"nodeType":"YulAssignment","src":"9016:40:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9029:5:26"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"9040:8:26"},{"name":"mask","nodeType":"YulIdentifier","src":"9050:4:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9036:3:26"},"nodeType":"YulFunctionCall","src":"9036:19:26"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"9026:2:26"},"nodeType":"YulFunctionCall","src":"9026:30:26"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"9016:6:26"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8706:5:26","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"8713:10:26","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"8725:8:26","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"8738:6:26","type":""}],"src":"8669:393:26"},{"body":{"nodeType":"YulBlock","src":"9100:28:26","statements":[{"nodeType":"YulAssignment","src":"9110:12:26","value":{"name":"value","nodeType":"YulIdentifier","src":"9117:5:26"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"9110:3:26"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9086:5:26","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"9096:3:26","type":""}],"src":"9068:60:26"},{"body":{"nodeType":"YulBlock","src":"9194:82:26","statements":[{"nodeType":"YulAssignment","src":"9204:66:26","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9262:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9244:17:26"},"nodeType":"YulFunctionCall","src":"9244:24:26"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"9235:8:26"},"nodeType":"YulFunctionCall","src":"9235:34:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9217:17:26"},"nodeType":"YulFunctionCall","src":"9217:53:26"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"9204:9:26"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9174:5:26","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"9184:9:26","type":""}],"src":"9134:142:26"},{"body":{"nodeType":"YulBlock","src":"9329:28:26","statements":[{"nodeType":"YulAssignment","src":"9339:12:26","value":{"name":"value","nodeType":"YulIdentifier","src":"9346:5:26"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"9339:3:26"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9315:5:26","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"9325:3:26","type":""}],"src":"9282:75:26"},{"body":{"nodeType":"YulBlock","src":"9439:193:26","statements":[{"nodeType":"YulVariableDeclaration","src":"9449:63:26","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"9504:7:26"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"9473:30:26"},"nodeType":"YulFunctionCall","src":"9473:39:26"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"9453:16:26","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9528:4:26"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9568:4:26"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"9562:5:26"},"nodeType":"YulFunctionCall","src":"9562:11:26"},{"name":"offset","nodeType":"YulIdentifier","src":"9575:6:26"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"9607:16:26"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"9583:23:26"},"nodeType":"YulFunctionCall","src":"9583:41:26"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"9534:27:26"},"nodeType":"YulFunctionCall","src":"9534:91:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9521:6:26"},"nodeType":"YulFunctionCall","src":"9521:105:26"},"nodeType":"YulExpressionStatement","src":"9521:105:26"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"9416:4:26","type":""},{"name":"offset","nodeType":"YulTypedName","src":"9422:6:26","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"9430:7:26","type":""}],"src":"9363:269:26"},{"body":{"nodeType":"YulBlock","src":"9687:24:26","statements":[{"nodeType":"YulAssignment","src":"9697:8:26","value":{"kind":"number","nodeType":"YulLiteral","src":"9704:1:26","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"9697:3:26"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"9683:3:26","type":""}],"src":"9638:73:26"},{"body":{"nodeType":"YulBlock","src":"9770:136:26","statements":[{"nodeType":"YulVariableDeclaration","src":"9780:46:26","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"9794:30:26"},"nodeType":"YulFunctionCall","src":"9794:32:26"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"9784:6:26","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9879:4:26"},{"name":"offset","nodeType":"YulIdentifier","src":"9885:6:26"},{"name":"zero_0","nodeType":"YulIdentifier","src":"9893:6:26"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"9835:43:26"},"nodeType":"YulFunctionCall","src":"9835:65:26"},"nodeType":"YulExpressionStatement","src":"9835:65:26"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"9756:4:26","type":""},{"name":"offset","nodeType":"YulTypedName","src":"9762:6:26","type":""}],"src":"9717:189:26"},{"body":{"nodeType":"YulBlock","src":"9962:136:26","statements":[{"body":{"nodeType":"YulBlock","src":"10029:63:26","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"10073:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"10080:1:26","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"10043:29:26"},"nodeType":"YulFunctionCall","src":"10043:39:26"},"nodeType":"YulExpressionStatement","src":"10043:39:26"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"9982:5:26"},{"name":"end","nodeType":"YulIdentifier","src":"9989:3:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9979:2:26"},"nodeType":"YulFunctionCall","src":"9979:14:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9994:26:26","statements":[{"nodeType":"YulAssignment","src":"9996:22:26","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"10009:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"10016:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10005:3:26"},"nodeType":"YulFunctionCall","src":"10005:13:26"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"9996:5:26"}]}]},"pre":{"nodeType":"YulBlock","src":"9976:2:26","statements":[]},"src":"9972:120:26"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"9950:5:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"9957:3:26","type":""}],"src":"9912:186:26"},{"body":{"nodeType":"YulBlock","src":"10183:464:26","statements":[{"body":{"nodeType":"YulBlock","src":"10209:431:26","statements":[{"nodeType":"YulVariableDeclaration","src":"10223:54:26","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"10271:5:26"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"10239:31:26"},"nodeType":"YulFunctionCall","src":"10239:38:26"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"10227:8:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10290:63:26","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"10313:8:26"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"10341:10:26"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"10323:17:26"},"nodeType":"YulFunctionCall","src":"10323:29:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10309:3:26"},"nodeType":"YulFunctionCall","src":"10309:44:26"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"10294:11:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"10510:27:26","statements":[{"nodeType":"YulAssignment","src":"10512:23:26","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"10527:8:26"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"10512:11:26"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"10494:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"10506:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10491:2:26"},"nodeType":"YulFunctionCall","src":"10491:18:26"},"nodeType":"YulIf","src":"10488:49:26"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"10579:11:26"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"10596:8:26"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"10624:3:26"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"10606:17:26"},"nodeType":"YulFunctionCall","src":"10606:22:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10592:3:26"},"nodeType":"YulFunctionCall","src":"10592:37:26"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"10550:28:26"},"nodeType":"YulFunctionCall","src":"10550:80:26"},"nodeType":"YulExpressionStatement","src":"10550:80:26"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"10200:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"10205:2:26","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10197:2:26"},"nodeType":"YulFunctionCall","src":"10197:11:26"},"nodeType":"YulIf","src":"10194:446:26"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"10159:5:26","type":""},{"name":"len","nodeType":"YulTypedName","src":"10166:3:26","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"10171:10:26","type":""}],"src":"10104:543:26"},{"body":{"nodeType":"YulBlock","src":"10716:54:26","statements":[{"nodeType":"YulAssignment","src":"10726:37:26","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"10751:4:26"},{"name":"value","nodeType":"YulIdentifier","src":"10757:5:26"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"10747:3:26"},"nodeType":"YulFunctionCall","src":"10747:16:26"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"10726:8:26"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"10691:4:26","type":""},{"name":"value","nodeType":"YulTypedName","src":"10697:5:26","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"10707:8:26","type":""}],"src":"10653:117:26"},{"body":{"nodeType":"YulBlock","src":"10827:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"10837:68:26","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10886:1:26","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"10889:5:26"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"10882:3:26"},"nodeType":"YulFunctionCall","src":"10882:13:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10901:1:26","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10897:3:26"},"nodeType":"YulFunctionCall","src":"10897:6:26"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"10853:28:26"},"nodeType":"YulFunctionCall","src":"10853:51:26"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10849:3:26"},"nodeType":"YulFunctionCall","src":"10849:56:26"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"10841:4:26","type":""}]},{"nodeType":"YulAssignment","src":"10914:25:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10928:4:26"},{"name":"mask","nodeType":"YulIdentifier","src":"10934:4:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10924:3:26"},"nodeType":"YulFunctionCall","src":"10924:15:26"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"10914:6:26"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"10804:4:26","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"10810:5:26","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"10820:6:26","type":""}],"src":"10776:169:26"},{"body":{"nodeType":"YulBlock","src":"11031:214:26","statements":[{"nodeType":"YulAssignment","src":"11164:37:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11191:4:26"},{"name":"len","nodeType":"YulIdentifier","src":"11197:3:26"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"11172:18:26"},"nodeType":"YulFunctionCall","src":"11172:29:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"11164:4:26"}]},{"nodeType":"YulAssignment","src":"11210:29:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11221:4:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11231:1:26","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"11234:3:26"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11227:3:26"},"nodeType":"YulFunctionCall","src":"11227:11:26"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"11218:2:26"},"nodeType":"YulFunctionCall","src":"11218:21:26"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"11210:4:26"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"11012:4:26","type":""},{"name":"len","nodeType":"YulTypedName","src":"11018:3:26","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"11026:4:26","type":""}],"src":"10950:295:26"},{"body":{"nodeType":"YulBlock","src":"11342:1303:26","statements":[{"nodeType":"YulVariableDeclaration","src":"11353:51:26","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11400:3:26"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"11367:32:26"},"nodeType":"YulFunctionCall","src":"11367:37:26"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"11357:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"11489:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"11491:16:26"},"nodeType":"YulFunctionCall","src":"11491:18:26"},"nodeType":"YulExpressionStatement","src":"11491:18:26"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"11461:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"11469:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11458:2:26"},"nodeType":"YulFunctionCall","src":"11458:30:26"},"nodeType":"YulIf","src":"11455:56:26"},{"nodeType":"YulVariableDeclaration","src":"11521:52:26","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"11567:4:26"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"11561:5:26"},"nodeType":"YulFunctionCall","src":"11561:11:26"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"11535:25:26"},"nodeType":"YulFunctionCall","src":"11535:38:26"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"11525:6:26","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"11666:4:26"},{"name":"oldLen","nodeType":"YulIdentifier","src":"11672:6:26"},{"name":"newLen","nodeType":"YulIdentifier","src":"11680:6:26"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"11620:45:26"},"nodeType":"YulFunctionCall","src":"11620:67:26"},"nodeType":"YulExpressionStatement","src":"11620:67:26"},{"nodeType":"YulVariableDeclaration","src":"11697:18:26","value":{"kind":"number","nodeType":"YulLiteral","src":"11714:1:26","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"11701:9:26","type":""}]},{"nodeType":"YulAssignment","src":"11725:17:26","value":{"kind":"number","nodeType":"YulLiteral","src":"11738:4:26","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"11725:9:26"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"11789:611:26","statements":[{"nodeType":"YulVariableDeclaration","src":"11803:37:26","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"11822:6:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11834:4:26","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11830:3:26"},"nodeType":"YulFunctionCall","src":"11830:9:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11818:3:26"},"nodeType":"YulFunctionCall","src":"11818:22:26"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"11807:7:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11854:51:26","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"11900:4:26"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"11868:31:26"},"nodeType":"YulFunctionCall","src":"11868:37:26"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"11858:6:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11918:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"11927:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"11922:1:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"11986:163:26","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"12011:6:26"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"12029:3:26"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"12034:9:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12025:3:26"},"nodeType":"YulFunctionCall","src":"12025:19:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12019:5:26"},"nodeType":"YulFunctionCall","src":"12019:26:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"12004:6:26"},"nodeType":"YulFunctionCall","src":"12004:42:26"},"nodeType":"YulExpressionStatement","src":"12004:42:26"},{"nodeType":"YulAssignment","src":"12063:24:26","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"12077:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"12085:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12073:3:26"},"nodeType":"YulFunctionCall","src":"12073:14:26"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"12063:6:26"}]},{"nodeType":"YulAssignment","src":"12104:31:26","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"12121:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12132:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12117:3:26"},"nodeType":"YulFunctionCall","src":"12117:18:26"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"12104:9:26"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11952:1:26"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"11955:7:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11949:2:26"},"nodeType":"YulFunctionCall","src":"11949:14:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11964:21:26","statements":[{"nodeType":"YulAssignment","src":"11966:17:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11975:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"11978:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11971:3:26"},"nodeType":"YulFunctionCall","src":"11971:12:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"11966:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"11945:3:26","statements":[]},"src":"11941:208:26"},{"body":{"nodeType":"YulBlock","src":"12185:156:26","statements":[{"nodeType":"YulVariableDeclaration","src":"12203:43:26","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"12230:3:26"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"12235:9:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12226:3:26"},"nodeType":"YulFunctionCall","src":"12226:19:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12220:5:26"},"nodeType":"YulFunctionCall","src":"12220:26:26"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"12207:9:26","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"12270:6:26"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"12297:9:26"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"12312:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"12320:4:26","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12308:3:26"},"nodeType":"YulFunctionCall","src":"12308:17:26"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"12278:18:26"},"nodeType":"YulFunctionCall","src":"12278:48:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"12263:6:26"},"nodeType":"YulFunctionCall","src":"12263:64:26"},"nodeType":"YulExpressionStatement","src":"12263:64:26"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"12168:7:26"},{"name":"newLen","nodeType":"YulIdentifier","src":"12177:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12165:2:26"},"nodeType":"YulFunctionCall","src":"12165:19:26"},"nodeType":"YulIf","src":"12162:179:26"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"12361:4:26"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"12375:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"12383:1:26","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"12371:3:26"},"nodeType":"YulFunctionCall","src":"12371:14:26"},{"kind":"number","nodeType":"YulLiteral","src":"12387:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12367:3:26"},"nodeType":"YulFunctionCall","src":"12367:22:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"12354:6:26"},"nodeType":"YulFunctionCall","src":"12354:36:26"},"nodeType":"YulExpressionStatement","src":"12354:36:26"}]},"nodeType":"YulCase","src":"11782:618:26","value":{"kind":"number","nodeType":"YulLiteral","src":"11787:1:26","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"12417:222:26","statements":[{"nodeType":"YulVariableDeclaration","src":"12431:14:26","value":{"kind":"number","nodeType":"YulLiteral","src":"12444:1:26","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"12435:5:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"12468:67:26","statements":[{"nodeType":"YulAssignment","src":"12486:35:26","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"12505:3:26"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"12510:9:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12501:3:26"},"nodeType":"YulFunctionCall","src":"12501:19:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12495:5:26"},"nodeType":"YulFunctionCall","src":"12495:26:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"12486:5:26"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"12461:6:26"},"nodeType":"YulIf","src":"12458:77:26"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"12555:4:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12614:5:26"},{"name":"newLen","nodeType":"YulIdentifier","src":"12621:6:26"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"12561:52:26"},"nodeType":"YulFunctionCall","src":"12561:67:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"12548:6:26"},"nodeType":"YulFunctionCall","src":"12548:81:26"},"nodeType":"YulExpressionStatement","src":"12548:81:26"}]},"nodeType":"YulCase","src":"12409:230:26","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"11762:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"11770:2:26","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11759:2:26"},"nodeType":"YulFunctionCall","src":"11759:14:26"},"nodeType":"YulSwitch","src":"11752:887:26"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"11331:4:26","type":""},{"name":"src","nodeType":"YulTypedName","src":"11337:3:26","type":""}],"src":"11250:1395:26"},{"body":{"nodeType":"YulBlock","src":"12715:82:26","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"12738:3:26"},{"name":"src","nodeType":"YulIdentifier","src":"12743:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"12748:6:26"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"12725:12:26"},"nodeType":"YulFunctionCall","src":"12725:30:26"},"nodeType":"YulExpressionStatement","src":"12725:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"12775:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"12780:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12771:3:26"},"nodeType":"YulFunctionCall","src":"12771:16:26"},{"kind":"number","nodeType":"YulLiteral","src":"12789:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12764:6:26"},"nodeType":"YulFunctionCall","src":"12764:27:26"},"nodeType":"YulExpressionStatement","src":"12764:27:26"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"12697:3:26","type":""},{"name":"dst","nodeType":"YulTypedName","src":"12702:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"12707:6:26","type":""}],"src":"12651:146:26"},{"body":{"nodeType":"YulBlock","src":"12929:215:26","statements":[{"nodeType":"YulAssignment","src":"12939:78:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13005:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"13010:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12946:58:26"},"nodeType":"YulFunctionCall","src":"12946:71:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12939:3:26"}]},{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"13064:5:26"},{"name":"pos","nodeType":"YulIdentifier","src":"13071:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"13076:6:26"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"13027:36:26"},"nodeType":"YulFunctionCall","src":"13027:56:26"},"nodeType":"YulExpressionStatement","src":"13027:56:26"},{"nodeType":"YulAssignment","src":"13092:46:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13103:3:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13130:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"13108:21:26"},"nodeType":"YulFunctionCall","src":"13108:29:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13099:3:26"},"nodeType":"YulFunctionCall","src":"13099:39:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13092:3:26"}]}]},"name":"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"12902:5:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"12909:6:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12917:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12925:3:26","type":""}],"src":"12827:317:26"},{"body":{"nodeType":"YulBlock","src":"13306:287:26","statements":[{"nodeType":"YulAssignment","src":"13316:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13328:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"13339:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13324:3:26"},"nodeType":"YulFunctionCall","src":"13324:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13316:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13363:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"13374:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13359:3:26"},"nodeType":"YulFunctionCall","src":"13359:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13382:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"13388:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13378:3:26"},"nodeType":"YulFunctionCall","src":"13378:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13352:6:26"},"nodeType":"YulFunctionCall","src":"13352:47:26"},"nodeType":"YulExpressionStatement","src":"13352:47:26"},{"nodeType":"YulAssignment","src":"13408:96:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13482:6:26"},{"name":"value1","nodeType":"YulIdentifier","src":"13490:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"13499:4:26"}],"functionName":{"name":"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13416:65:26"},"nodeType":"YulFunctionCall","src":"13416:88:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13408:4:26"}]},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"13558:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13571:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"13582:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13567:3:26"},"nodeType":"YulFunctionCall","src":"13567:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"13514:43:26"},"nodeType":"YulFunctionCall","src":"13514:72:26"},"nodeType":"YulExpressionStatement","src":"13514:72:26"}]},"name":"abi_encode_tuple_t_string_calldata_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13262:9:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13274:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13282:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13290:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13301:4:26","type":""}],"src":"13150:443:26"}]},"contents":"{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_string_memory_ptr_t_uint256__to_t_uint256_t_address_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    // struct RWARegistry.Asset -> struct RWARegistry.Asset\n    function abi_encode_t_struct$_Asset_$6965_memory_ptr_to_t_struct$_Asset_$6965_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0x80)\n\n        {\n            // id\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // owner\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // metadataURI\n\n            let memberValue0 := mload(add(value, 0x40))\n\n            mstore(add(pos, 0x40), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // valuationUSD\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        end := tail\n    }\n\n    function abi_encode_tuple_t_struct$_Asset_$6965_memory_ptr__to_t_struct$_Asset_$6965_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_Asset_$6965_memory_ptr_to_t_struct$_Asset_$6965_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // string\n    function abi_decode_t_string_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_string_calldata_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    // string -> string\n    function abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_calldata_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(value0, value1,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 32))\n\n    }\n\n}\n","id":26,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061004c5760003560e01c80634b91878614610051578063cf35bdd01461006f578063eac8f5b8146100a2578063f65db150146100d2575b600080fd5b610059610102565b60405161006691906104df565b60405180910390f35b61008960048036038101906100849190610530565b610108565b604051610099949392919061062e565b60405180910390f35b6100bc60048036038101906100b79190610530565b6101e0565b6040516100c99190610745565b60405180910390f35b6100ec60048036038101906100e791906107cc565b610308565b6040516100f991906104df565b60405180910390f35b60015481565b60006020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020180546101579061085b565b80601f01602080910402602001604051908101604052809291908181526020018280546101839061085b565b80156101d05780601f106101a5576101008083540402835291602001916101d0565b820191906000526020600020905b8154815290600101906020018083116101b357829003601f168201915b5050505050908060030154905084565b6101e8610488565b600080838152602001908152602001600020604051806080016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820180546102759061085b565b80601f01602080910402602001604051908101604052809291908181526020018280546102a19061085b565b80156102ee5780601f106102c3576101008083540402835291602001916102ee565b820191906000526020600020905b8154815290600101906020018083116102d157829003601f168201915b505050505081526020016003820154815250509050919050565b60006001600081548092919061031d906108bb565b9190505550604051806080016040528060015481526020013373ffffffffffffffffffffffffffffffffffffffff16815260200185858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081526020018381525060008060015481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020190816104199190610ade565b50606082015181600301559050503373ffffffffffffffffffffffffffffffffffffffff166001547f17bfbb947caca86ac77ea06397ced8c4f77a1a6c82a21b5a05a738ceddc1f66086868660405161047493929190610bec565b60405180910390a360015490509392505050565b604051806080016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001600081525090565b6000819050919050565b6104d9816104c6565b82525050565b60006020820190506104f460008301846104d0565b92915050565b600080fd5b600080fd5b61050d816104c6565b811461051857600080fd5b50565b60008135905061052a81610504565b92915050565b600060208284031215610546576105456104fa565b5b60006105548482850161051b565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105888261055d565b9050919050565b6105988161057d565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156105d85780820151818401526020810190506105bd565b60008484015250505050565b6000601f19601f8301169050919050565b60006106008261059e565b61060a81856105a9565b935061061a8185602086016105ba565b610623816105e4565b840191505092915050565b600060808201905061064360008301876104d0565b610650602083018661058f565b818103604083015261066281856105f5565b905061067160608301846104d0565b95945050505050565b610683816104c6565b82525050565b6106928161057d565b82525050565b600082825260208201905092915050565b60006106b48261059e565b6106be8185610698565b93506106ce8185602086016105ba565b6106d7816105e4565b840191505092915050565b60006080830160008301516106fa600086018261067a565b50602083015161070d6020860182610689565b506040830151848203604086015261072582826106a9565b915050606083015161073a606086018261067a565b508091505092915050565b6000602082019050818103600083015261075f81846106e2565b905092915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261078c5761078b610767565b5b8235905067ffffffffffffffff8111156107a9576107a861076c565b5b6020830191508360018202830111156107c5576107c4610771565b5b9250929050565b6000806000604084860312156107e5576107e46104fa565b5b600084013567ffffffffffffffff811115610803576108026104ff565b5b61080f86828701610776565b935093505060206108228682870161051b565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061087357607f821691505b6020821081036108865761088561082c565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006108c6826104c6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036108f8576108f761088c565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026109947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610957565b61099e8683610957565b95508019841693508086168417925050509392505050565b6000819050919050565b60006109db6109d66109d1846104c6565b6109b6565b6104c6565b9050919050565b6000819050919050565b6109f5836109c0565b610a09610a01826109e2565b848454610964565b825550505050565b600090565b610a1e610a11565b610a298184846109ec565b505050565b5b81811015610a4d57610a42600082610a16565b600181019050610a2f565b5050565b601f821115610a9257610a6381610932565b610a6c84610947565b81016020851015610a7b578190505b610a8f610a8785610947565b830182610a2e565b50505b505050565b600082821c905092915050565b6000610ab560001984600802610a97565b1980831691505092915050565b6000610ace8383610aa4565b9150826002028217905092915050565b610ae78261059e565b67ffffffffffffffff811115610b0057610aff610903565b5b610b0a825461085b565b610b15828285610a51565b600060209050601f831160018114610b485760008415610b36578287015190505b610b408582610ac2565b865550610ba8565b601f198416610b5686610932565b60005b82811015610b7e57848901518255600182019150602085019450602081019050610b59565b86831015610b9b5784890151610b97601f891682610aa4565b8355505b6001600288020188555050505b505050505050565b82818337600083830152505050565b6000610bcb83856105a9565b9350610bd8838584610bb0565b610be1836105e4565b840190509392505050565b60006040820190508181036000830152610c07818587610bbf565b9050610c1660208301846104d0565b94935050505056fea2646970667358221220f32520bdea12815f7931a7e829a005373ac42512ec51265424bac87071dea94164736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4B918786 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0xCF35BDD0 EQ PUSH2 0x6F JUMPI DUP1 PUSH4 0xEAC8F5B8 EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0xF65DB150 EQ PUSH2 0xD2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x102 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x89 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x84 SWAP2 SWAP1 PUSH2 0x530 JUMP JUMPDEST PUSH2 0x108 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x99 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x62E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB7 SWAP2 SWAP1 PUSH2 0x530 JUMP JUMPDEST PUSH2 0x1E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC9 SWAP2 SWAP1 PUSH2 0x745 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE7 SWAP2 SWAP1 PUSH2 0x7CC JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x157 SWAP1 PUSH2 0x85B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x183 SWAP1 PUSH2 0x85B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1D0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1A5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1D0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1B3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH2 0x1E8 PUSH2 0x488 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x275 SWAP1 PUSH2 0x85B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2A1 SWAP1 PUSH2 0x85B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2EE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2C3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2EE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2D1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x31D SWAP1 PUSH2 0x8BB JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP6 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x0 DUP1 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x419 SWAP2 SWAP1 PUSH2 0xADE JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 SLOAD PUSH32 0x17BFBB947CACA86AC77EA06397CED8C4F77A1A6C82A21B5A05A738CEDDC1F660 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x474 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xBEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SLOAD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4D9 DUP2 PUSH2 0x4C6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4F4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x50D DUP2 PUSH2 0x4C6 JUMP JUMPDEST DUP2 EQ PUSH2 0x518 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x52A DUP2 PUSH2 0x504 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x546 JUMPI PUSH2 0x545 PUSH2 0x4FA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x554 DUP5 DUP3 DUP6 ADD PUSH2 0x51B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x588 DUP3 PUSH2 0x55D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x598 DUP2 PUSH2 0x57D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5D8 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5BD JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x600 DUP3 PUSH2 0x59E JUMP JUMPDEST PUSH2 0x60A DUP2 DUP6 PUSH2 0x5A9 JUMP JUMPDEST SWAP4 POP PUSH2 0x61A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x5BA JUMP JUMPDEST PUSH2 0x623 DUP2 PUSH2 0x5E4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x643 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x4D0 JUMP JUMPDEST PUSH2 0x650 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x58F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x662 DUP2 DUP6 PUSH2 0x5F5 JUMP JUMPDEST SWAP1 POP PUSH2 0x671 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x4D0 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x683 DUP2 PUSH2 0x4C6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x692 DUP2 PUSH2 0x57D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B4 DUP3 PUSH2 0x59E JUMP JUMPDEST PUSH2 0x6BE DUP2 DUP6 PUSH2 0x698 JUMP JUMPDEST SWAP4 POP PUSH2 0x6CE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x5BA JUMP JUMPDEST PUSH2 0x6D7 DUP2 PUSH2 0x5E4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x6FA PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x67A JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x70D PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x689 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x725 DUP3 DUP3 PUSH2 0x6A9 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x73A PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x67A JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x75F DUP2 DUP5 PUSH2 0x6E2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x78C JUMPI PUSH2 0x78B PUSH2 0x767 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7A9 JUMPI PUSH2 0x7A8 PUSH2 0x76C JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x7C5 JUMPI PUSH2 0x7C4 PUSH2 0x771 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7E5 JUMPI PUSH2 0x7E4 PUSH2 0x4FA JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x803 JUMPI PUSH2 0x802 PUSH2 0x4FF JUMP JUMPDEST JUMPDEST PUSH2 0x80F DUP7 DUP3 DUP8 ADD PUSH2 0x776 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x20 PUSH2 0x822 DUP7 DUP3 DUP8 ADD PUSH2 0x51B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x873 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x886 JUMPI PUSH2 0x885 PUSH2 0x82C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8C6 DUP3 PUSH2 0x4C6 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x8F8 JUMPI PUSH2 0x8F7 PUSH2 0x88C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x994 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x957 JUMP JUMPDEST PUSH2 0x99E DUP7 DUP4 PUSH2 0x957 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9DB PUSH2 0x9D6 PUSH2 0x9D1 DUP5 PUSH2 0x4C6 JUMP JUMPDEST PUSH2 0x9B6 JUMP JUMPDEST PUSH2 0x4C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9F5 DUP4 PUSH2 0x9C0 JUMP JUMPDEST PUSH2 0xA09 PUSH2 0xA01 DUP3 PUSH2 0x9E2 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x964 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0xA1E PUSH2 0xA11 JUMP JUMPDEST PUSH2 0xA29 DUP2 DUP5 DUP5 PUSH2 0x9EC JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA4D JUMPI PUSH2 0xA42 PUSH1 0x0 DUP3 PUSH2 0xA16 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xA2F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xA92 JUMPI PUSH2 0xA63 DUP2 PUSH2 0x932 JUMP JUMPDEST PUSH2 0xA6C DUP5 PUSH2 0x947 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0xA7B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0xA8F PUSH2 0xA87 DUP6 PUSH2 0x947 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0xA2E JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB5 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0xA97 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xACE DUP4 DUP4 PUSH2 0xAA4 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAE7 DUP3 PUSH2 0x59E JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB00 JUMPI PUSH2 0xAFF PUSH2 0x903 JUMP JUMPDEST JUMPDEST PUSH2 0xB0A DUP3 SLOAD PUSH2 0x85B JUMP JUMPDEST PUSH2 0xB15 DUP3 DUP3 DUP6 PUSH2 0xA51 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xB48 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0xB36 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xB40 DUP6 DUP3 PUSH2 0xAC2 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xBA8 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xB56 DUP7 PUSH2 0x932 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xB7E JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xB59 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xB9B JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xB97 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0xAA4 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBCB DUP4 DUP6 PUSH2 0x5A9 JUMP JUMPDEST SWAP4 POP PUSH2 0xBD8 DUP4 DUP6 DUP5 PUSH2 0xBB0 JUMP JUMPDEST PUSH2 0xBE1 DUP4 PUSH2 0x5E4 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC07 DUP2 DUP6 DUP8 PUSH2 0xBBF JUMP JUMPDEST SWAP1 POP PUSH2 0xC16 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4D0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN 0x25 KECCAK256 0xBD 0xEA SLT DUP2 PUSH0 PUSH26 0x31A7E829A005373AC42512EC51265424BAC87071DEA94164736F PUSH13 0x63430008140033000000000000 ","sourceMap":"61:928:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;269:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;223:39;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;873:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;420:445;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;269:27;;;;:::o;223:39::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;873:113::-;931:12;;:::i;:::-;963:6;:15;970:7;963:15;;;;;;;;;;;956:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;873:113;;;:::o;420:445::-;512:7;532:12;;:14;;;;;;;;;:::i;:::-;;;;;;580:161;;;;;;;;605:12;;580:161;;;;639:10;580:161;;;;;;677:11;;580:161;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;717:12;580:161;;;557:6;:20;564:12;;557:20;;;;;;;;;;;:184;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;789:10;759:68;;775:12;;759:68;801:11;;814:12;759:68;;;;;;;;:::i;:::-;;;;;;;;845:12;;838:19;;420:445;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:77:26:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;646:117;755:1;752;745:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:329::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:53;1346:7;1337:6;1326:9;1322:22;1301:53;:::i;:::-;1291:63;;1247:117;1042:329;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:96::-;1546:7;1575:24;1593:5;1575:24;:::i;:::-;1564:35;;1509:96;;;:::o;1611:118::-;1698:24;1716:5;1698:24;:::i;:::-;1693:3;1686:37;1611:118;;:::o;1735:99::-;1787:6;1821:5;1815:12;1805:22;;1735:99;;;:::o;1840:169::-;1924:11;1958:6;1953:3;1946:19;1998:4;1993:3;1989:14;1974:29;;1840:169;;;;:::o;2015:246::-;2096:1;2106:113;2120:6;2117:1;2114:13;2106:113;;;2205:1;2200:3;2196:11;2190:18;2186:1;2181:3;2177:11;2170:39;2142:2;2139:1;2135:10;2130:15;;2106:113;;;2253:1;2244:6;2239:3;2235:16;2228:27;2077:184;2015:246;;;:::o;2267:102::-;2308:6;2359:2;2355:7;2350:2;2343:5;2339:14;2335:28;2325:38;;2267:102;;;:::o;2375:377::-;2463:3;2491:39;2524:5;2491:39;:::i;:::-;2546:71;2610:6;2605:3;2546:71;:::i;:::-;2539:78;;2626:65;2684:6;2679:3;2672:4;2665:5;2661:16;2626:65;:::i;:::-;2716:29;2738:6;2716:29;:::i;:::-;2711:3;2707:39;2700:46;;2467:285;2375:377;;;;:::o;2758:644::-;2955:4;2993:3;2982:9;2978:19;2970:27;;3007:71;3075:1;3064:9;3060:17;3051:6;3007:71;:::i;:::-;3088:72;3156:2;3145:9;3141:18;3132:6;3088:72;:::i;:::-;3207:9;3201:4;3197:20;3192:2;3181:9;3177:18;3170:48;3235:78;3308:4;3299:6;3235:78;:::i;:::-;3227:86;;3323:72;3391:2;3380:9;3376:18;3367:6;3323:72;:::i;:::-;2758:644;;;;;;;:::o;3408:108::-;3485:24;3503:5;3485:24;:::i;:::-;3480:3;3473:37;3408:108;;:::o;3522:::-;3599:24;3617:5;3599:24;:::i;:::-;3594:3;3587:37;3522:108;;:::o;3636:159::-;3710:11;3744:6;3739:3;3732:19;3784:4;3779:3;3775:14;3760:29;;3636:159;;;;:::o;3801:357::-;3879:3;3907:39;3940:5;3907:39;:::i;:::-;3962:61;4016:6;4011:3;3962:61;:::i;:::-;3955:68;;4032:65;4090:6;4085:3;4078:4;4071:5;4067:16;4032:65;:::i;:::-;4122:29;4144:6;4122:29;:::i;:::-;4117:3;4113:39;4106:46;;3883:275;3801:357;;;;:::o;4224:964::-;4339:3;4375:4;4370:3;4366:14;4460:4;4453:5;4449:16;4443:23;4479:63;4536:4;4531:3;4527:14;4513:12;4479:63;:::i;:::-;4390:162;4635:4;4628:5;4624:16;4618:23;4654:63;4711:4;4706:3;4702:14;4688:12;4654:63;:::i;:::-;4562:165;4816:4;4809:5;4805:16;4799:23;4869:3;4863:4;4859:14;4852:4;4847:3;4843:14;4836:38;4895:73;4963:4;4949:12;4895:73;:::i;:::-;4887:81;;4737:242;5069:4;5062:5;5058:16;5052:23;5088:63;5145:4;5140:3;5136:14;5122:12;5088:63;:::i;:::-;4989:172;5178:4;5171:11;;4344:844;4224:964;;;;:::o;5194:365::-;5333:4;5371:2;5360:9;5356:18;5348:26;;5420:9;5414:4;5410:20;5406:1;5395:9;5391:17;5384:47;5448:104;5547:4;5538:6;5448:104;:::i;:::-;5440:112;;5194:365;;;;:::o;5565:117::-;5674:1;5671;5664:12;5688:117;5797:1;5794;5787:12;5811:117;5920:1;5917;5910:12;5948:553;6006:8;6016:6;6066:3;6059:4;6051:6;6047:17;6043:27;6033:122;;6074:79;;:::i;:::-;6033:122;6187:6;6174:20;6164:30;;6217:18;6209:6;6206:30;6203:117;;;6239:79;;:::i;:::-;6203:117;6353:4;6345:6;6341:17;6329:29;;6407:3;6399:4;6391:6;6387:17;6377:8;6373:32;6370:41;6367:128;;;6414:79;;:::i;:::-;6367:128;5948:553;;;;;:::o;6507:674::-;6587:6;6595;6603;6652:2;6640:9;6631:7;6627:23;6623:32;6620:119;;;6658:79;;:::i;:::-;6620:119;6806:1;6795:9;6791:17;6778:31;6836:18;6828:6;6825:30;6822:117;;;6858:79;;:::i;:::-;6822:117;6971:65;7028:7;7019:6;7008:9;7004:22;6971:65;:::i;:::-;6953:83;;;;6749:297;7085:2;7111:53;7156:7;7147:6;7136:9;7132:22;7111:53;:::i;:::-;7101:63;;7056:118;6507:674;;;;;:::o;7187:180::-;7235:77;7232:1;7225:88;7332:4;7329:1;7322:15;7356:4;7353:1;7346:15;7373:320;7417:6;7454:1;7448:4;7444:12;7434:22;;7501:1;7495:4;7491:12;7522:18;7512:81;;7578:4;7570:6;7566:17;7556:27;;7512:81;7640:2;7632:6;7629:14;7609:18;7606:38;7603:84;;7659:18;;:::i;:::-;7603:84;7424:269;7373:320;;;:::o;7699:180::-;7747:77;7744:1;7737:88;7844:4;7841:1;7834:15;7868:4;7865:1;7858:15;7885:233;7924:3;7947:24;7965:5;7947:24;:::i;:::-;7938:33;;7993:66;7986:5;7983:77;7980:103;;8063:18;;:::i;:::-;7980:103;8110:1;8103:5;8099:13;8092:20;;7885:233;;;:::o;8124:180::-;8172:77;8169:1;8162:88;8269:4;8266:1;8259:15;8293:4;8290:1;8283:15;8310:141;8359:4;8382:3;8374:11;;8405:3;8402:1;8395:14;8439:4;8436:1;8426:18;8418:26;;8310:141;;;:::o;8457:93::-;8494:6;8541:2;8536;8529:5;8525:14;8521:23;8511:33;;8457:93;;;:::o;8556:107::-;8600:8;8650:5;8644:4;8640:16;8619:37;;8556:107;;;;:::o;8669:393::-;8738:6;8788:1;8776:10;8772:18;8811:97;8841:66;8830:9;8811:97;:::i;:::-;8929:39;8959:8;8948:9;8929:39;:::i;:::-;8917:51;;9001:4;8997:9;8990:5;8986:21;8977:30;;9050:4;9040:8;9036:19;9029:5;9026:30;9016:40;;8745:317;;8669:393;;;;;:::o;9068:60::-;9096:3;9117:5;9110:12;;9068:60;;;:::o;9134:142::-;9184:9;9217:53;9235:34;9244:24;9262:5;9244:24;:::i;:::-;9235:34;:::i;:::-;9217:53;:::i;:::-;9204:66;;9134:142;;;:::o;9282:75::-;9325:3;9346:5;9339:12;;9282:75;;;:::o;9363:269::-;9473:39;9504:7;9473:39;:::i;:::-;9534:91;9583:41;9607:16;9583:41;:::i;:::-;9575:6;9568:4;9562:11;9534:91;:::i;:::-;9528:4;9521:105;9439:193;9363:269;;;:::o;9638:73::-;9683:3;9638:73;:::o;9717:189::-;9794:32;;:::i;:::-;9835:65;9893:6;9885;9879:4;9835:65;:::i;:::-;9770:136;9717:189;;:::o;9912:186::-;9972:120;9989:3;9982:5;9979:14;9972:120;;;10043:39;10080:1;10073:5;10043:39;:::i;:::-;10016:1;10009:5;10005:13;9996:22;;9972:120;;;9912:186;;:::o;10104:543::-;10205:2;10200:3;10197:11;10194:446;;;10239:38;10271:5;10239:38;:::i;:::-;10323:29;10341:10;10323:29;:::i;:::-;10313:8;10309:44;10506:2;10494:10;10491:18;10488:49;;;10527:8;10512:23;;10488:49;10550:80;10606:22;10624:3;10606:22;:::i;:::-;10596:8;10592:37;10579:11;10550:80;:::i;:::-;10209:431;;10194:446;10104:543;;;:::o;10653:117::-;10707:8;10757:5;10751:4;10747:16;10726:37;;10653:117;;;;:::o;10776:169::-;10820:6;10853:51;10901:1;10897:6;10889:5;10886:1;10882:13;10853:51;:::i;:::-;10849:56;10934:4;10928;10924:15;10914:25;;10827:118;10776:169;;;;:::o;10950:295::-;11026:4;11172:29;11197:3;11191:4;11172:29;:::i;:::-;11164:37;;11234:3;11231:1;11227:11;11221:4;11218:21;11210:29;;10950:295;;;;:::o;11250:1395::-;11367:37;11400:3;11367:37;:::i;:::-;11469:18;11461:6;11458:30;11455:56;;;11491:18;;:::i;:::-;11455:56;11535:38;11567:4;11561:11;11535:38;:::i;:::-;11620:67;11680:6;11672;11666:4;11620:67;:::i;:::-;11714:1;11738:4;11725:17;;11770:2;11762:6;11759:14;11787:1;11782:618;;;;12444:1;12461:6;12458:77;;;12510:9;12505:3;12501:19;12495:26;12486:35;;12458:77;12561:67;12621:6;12614:5;12561:67;:::i;:::-;12555:4;12548:81;12417:222;11752:887;;11782:618;11834:4;11830:9;11822:6;11818:22;11868:37;11900:4;11868:37;:::i;:::-;11927:1;11941:208;11955:7;11952:1;11949:14;11941:208;;;12034:9;12029:3;12025:19;12019:26;12011:6;12004:42;12085:1;12077:6;12073:14;12063:24;;12132:2;12121:9;12117:18;12104:31;;11978:4;11975:1;11971:12;11966:17;;11941:208;;;12177:6;12168:7;12165:19;12162:179;;;12235:9;12230:3;12226:19;12220:26;12278:48;12320:4;12312:6;12308:17;12297:9;12278:48;:::i;:::-;12270:6;12263:64;12185:156;12162:179;12387:1;12383;12375:6;12371:14;12367:22;12361:4;12354:36;11789:611;;;11752:887;;11342:1303;;;11250:1395;;:::o;12651:146::-;12748:6;12743:3;12738;12725:30;12789:1;12780:6;12775:3;12771:16;12764:27;12651:146;;;:::o;12827:317::-;12925:3;12946:71;13010:6;13005:3;12946:71;:::i;:::-;12939:78;;13027:56;13076:6;13071:3;13064:5;13027:56;:::i;:::-;13108:29;13130:6;13108:29;:::i;:::-;13103:3;13099:39;13092:46;;12827:317;;;;;:::o;13150:443::-;13301:4;13339:2;13328:9;13324:18;13316:26;;13388:9;13382:4;13378:20;13374:1;13363:9;13359:17;13352:47;13416:88;13499:4;13490:6;13482;13416:88;:::i;:::-;13408:96;;13514:72;13582:2;13571:9;13567:18;13558:6;13514:72;:::i;:::-;13150:443;;;;;;:::o"},"methodIdentifiers":{"assetCounter()":"4b918786","assets(uint256)":"cf35bdd0","getAsset(uint256)":"eac8f5b8","registerAsset(string,uint256)":"f65db150"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"valuationUSD\",\"type\":\"uint256\"}],\"name\":\"AssetRegistered\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"assetCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"assets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"valuationUSD\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"}],\"name\":\"getAsset\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"valuationUSD\",\"type\":\"uint256\"}],\"internalType\":\"struct RWARegistry.Asset\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"valuationUSD\",\"type\":\"uint256\"}],\"name\":\"registerAsset\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RWARegistry.sol\":\"RWARegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/RWARegistry.sol\":{\"keccak256\":\"0x14623892e6ec7c3c2f187d2eeaa81b76d92d28fc099a268db1510fae9cee353b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52d305fb4bbedca8fbd1dddd2f8d39899496724fe5959965dc280a310be3cf49\",\"dweb:/ipfs/Qmda91dU6EBuA2mkZKjRWcW5AsuN26UJMSikpyUhEgcNZJ\"]}},\"version\":1}"}},"contracts/VaultCore.sol":{"IAIRiskManager":{"abi":[{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getRiskScore","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRiskScore(address)":"dc08706d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getRiskScore\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/VaultCore.sol\":\"IAIRiskManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":{\"keccak256\":\"0x8c97744adc25cf30d1a2509bff6c0ddc9b36feb75f8e38c85d5c62b8ec773159\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c53c8736dacbf8c517c63937d556c3e4873a62f509c5d84b89e32fc5c9c6c2c\",\"dweb:/ipfs/QmeR6RSce5dTDcPgbwBnG7E8U89716bqsUcv1NeWnX5RJf\"]},\"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\":{\"keccak256\":\"0xce623f3e7fa4addf240032d2817b2b489ac08e79fae14a5cc5850ed3f1acddf8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0546b2739f3989b897c5cb591d01211e2db22e1a8578f68117f1a8a692abd85c\",\"dweb:/ipfs/QmW6guw8uUk2Dq49PWdjeZeEvnDDRg3CVX2BVcVNcT6QNL\"]},\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0xf504b227c442cd4ed31b336b7bd15cfcb23220c84c26e750975c7e7d959125aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34e35eb46dfadf12396e92dd970547209dfd99f0ae5b1ec7b5a3e81617f620a1\",\"dweb:/ipfs/Qmanoi2CDi9MwkP44HosagvewfMEvCMN1YthGRmCexVjwY\"]},\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d39e11b1dc7b9b8ccdabbc9be442ab7cda4a81c748f57e316dcb1bcb4a28bf9\",\"dweb:/ipfs/QmaG6vz6W6iEUBsbHSBob5mdcitYxWjoygxREHpsJHfWrS\"]},\"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":{\"keccak256\":\"0x5a502a5ce16796565815b295bb2d18a0d26d6f23621f733918c971047c6091d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f03385e076f6c2ad534bffe7c655cf259242e0f133f0ebfd56f914c0dde4a3f4\",\"dweb:/ipfs/QmWkQVSoAoRu1LXQTfDeic9QESjQkjT4G5Kt1VptTaxQDP\"]},\"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol\":{\"keccak256\":\"0x619d9d975540d65ef8d6332a67cbd0dda5b0f95b120b8da56695ed50c2f9fc30\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d13e94e2c3a7e72241c0f10684274b9509d005bc50b247a8a2442b0c12760bc1\",\"dweb:/ipfs/QmXxTc8ngzwFX9RbSe9Fuso8sSScHDUBfgyTvBcgstJiKt\"]},\"contracts/VaultCore.sol\":{\"keccak256\":\"0x700d0ea66124777c0d45b2da573d3f7e1aabe564f120eaa4bac754a5e1ebd5bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0108466d2a69fe3d2de63fac16b085bc7cb27059ac6aa60b1c60ca01f857aeec\",\"dweb:/ipfs/QmXQdoeEKQaxS8wNMBpkTBU9JpD4SX3w4iKsdeiyxR9GZG\"]}},\"version\":1}"},"ICCIPRouter":{"abi":[{"inputs":[{"internalType":"string","name":"data","type":"string"}],"name":"receiveMessage","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"receiveMessage(string)":"2f049bf3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"receiveMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/VaultCore.sol\":\"ICCIPRouter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":{\"keccak256\":\"0x8c97744adc25cf30d1a2509bff6c0ddc9b36feb75f8e38c85d5c62b8ec773159\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c53c8736dacbf8c517c63937d556c3e4873a62f509c5d84b89e32fc5c9c6c2c\",\"dweb:/ipfs/QmeR6RSce5dTDcPgbwBnG7E8U89716bqsUcv1NeWnX5RJf\"]},\"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\":{\"keccak256\":\"0xce623f3e7fa4addf240032d2817b2b489ac08e79fae14a5cc5850ed3f1acddf8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0546b2739f3989b897c5cb591d01211e2db22e1a8578f68117f1a8a692abd85c\",\"dweb:/ipfs/QmW6guw8uUk2Dq49PWdjeZeEvnDDRg3CVX2BVcVNcT6QNL\"]},\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0xf504b227c442cd4ed31b336b7bd15cfcb23220c84c26e750975c7e7d959125aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34e35eb46dfadf12396e92dd970547209dfd99f0ae5b1ec7b5a3e81617f620a1\",\"dweb:/ipfs/Qmanoi2CDi9MwkP44HosagvewfMEvCMN1YthGRmCexVjwY\"]},\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d39e11b1dc7b9b8ccdabbc9be442ab7cda4a81c748f57e316dcb1bcb4a28bf9\",\"dweb:/ipfs/QmaG6vz6W6iEUBsbHSBob5mdcitYxWjoygxREHpsJHfWrS\"]},\"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":{\"keccak256\":\"0x5a502a5ce16796565815b295bb2d18a0d26d6f23621f733918c971047c6091d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f03385e076f6c2ad534bffe7c655cf259242e0f133f0ebfd56f914c0dde4a3f4\",\"dweb:/ipfs/QmWkQVSoAoRu1LXQTfDeic9QESjQkjT4G5Kt1VptTaxQDP\"]},\"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol\":{\"keccak256\":\"0x619d9d975540d65ef8d6332a67cbd0dda5b0f95b120b8da56695ed50c2f9fc30\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d13e94e2c3a7e72241c0f10684274b9509d005bc50b247a8a2442b0c12760bc1\",\"dweb:/ipfs/QmXxTc8ngzwFX9RbSe9Fuso8sSScHDUBfgyTvBcgstJiKt\"]},\"contracts/VaultCore.sol\":{\"keccak256\":\"0x700d0ea66124777c0d45b2da573d3f7e1aabe564f120eaa4bac754a5e1ebd5bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0108466d2a69fe3d2de63fac16b085bc7cb27059ac6aa60b1c60ca01f857aeec\",\"dweb:/ipfs/QmXQdoeEKQaxS8wNMBpkTBU9JpD4SX3w4iKsdeiyxR9GZG\"]}},\"version\":1}"},"VaultCore":{"abi":[{"inputs":[{"internalType":"address","name":"_priceFeed","type":"address"},{"internalType":"address","name":"_riskManager","type":"address"},{"internalType":"address","name":"_ccipRouter","type":"address"},{"internalType":"address","name":"_vrfCoordinator","type":"address"},{"internalType":"bytes32","name":"_keyHash","type":"bytes32"},{"internalType":"uint64","name":"_subscriptionId","type":"uint64"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"assetId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"address","name":"borrower","type":"address"}],"name":"CrossChainLoanApproval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"borrower","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"loanId","type":"uint256"},{"indexed":false,"internalType":"uint8","name":"riskTier","type":"uint8"}],"name":"LoanIssued","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"loanId","type":"uint256"}],"name":"LoanLiquidated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"selectedLoanId","type":"uint256"}],"name":"RandomLoanSelected","type":"event"},{"inputs":[],"name":"callbackGasLimit","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ccipRouter","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"checkHealth","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"","type":"bytes"}],"name":"checkUpkeep","outputs":[{"internalType":"bool","name":"upkeepNeeded","type":"bool"},{"internalType":"bytes","name":"performData","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLatestETHPrice","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"keyHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_loanId","type":"uint256"}],"name":"liquidateLoan","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"loanId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"loans","outputs":[{"internalType":"address","name":"borrower","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bool","name":"repaid","type":"bool"},{"internalType":"uint8","name":"riskTier","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"numWords","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"performData","type":"bytes"}],"name":"performUpkeep","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"data","type":"string"}],"name":"receiveCrossChainMessage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"assetId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"receiveLoanApproval","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"requestAudit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"requestConfirmations","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"riskManager","outputs":[{"internalType":"contract IAIRiskManager","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"subscriptionId","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_135":{"entryPoint":null,"id":135,"parameterSlots":1,"returnSlots":0},"@_7170":{"entryPoint":null,"id":7170,"parameterSlots":6,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":611,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":670,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint64_fromMemory":{"entryPoint":739,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_addresst_addresst_bytes32t_uint64_fromMemory":{"entryPoint":762,"id":null,"parameterSlots":2,"returnSlots":6},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":565,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":634,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":533,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":693,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":528,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":585,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":644,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint64":{"entryPoint":713,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2720:26","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:26","statements":[{"nodeType":"YulAssignment","src":"57:19:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:26"},"nodeType":"YulFunctionCall","src":"67:9:26"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:26"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:26","type":""}],"src":"7:75:26"},{"body":{"nodeType":"YulBlock","src":"177:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:26"},"nodeType":"YulFunctionCall","src":"187:12:26"},"nodeType":"YulExpressionStatement","src":"187:12:26"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:26"},{"body":{"nodeType":"YulBlock","src":"300:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:26"},"nodeType":"YulFunctionCall","src":"310:12:26"},"nodeType":"YulExpressionStatement","src":"310:12:26"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:26"},{"body":{"nodeType":"YulBlock","src":"379:81:26","statements":[{"nodeType":"YulAssignment","src":"389:65:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:26"},"nodeType":"YulFunctionCall","src":"400:54:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:26"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:26","type":""}],"src":"334:126:26"},{"body":{"nodeType":"YulBlock","src":"511:51:26","statements":[{"nodeType":"YulAssignment","src":"521:35:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:26"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:26"},"nodeType":"YulFunctionCall","src":"532:24:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:26"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:26","type":""}],"src":"466:96:26"},{"body":{"nodeType":"YulBlock","src":"611:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:26"},"nodeType":"YulFunctionCall","src":"670:12:26"},"nodeType":"YulExpressionStatement","src":"670:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:26"},"nodeType":"YulFunctionCall","src":"641:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:26"},"nodeType":"YulFunctionCall","src":"631:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:26"},"nodeType":"YulFunctionCall","src":"624:43:26"},"nodeType":"YulIf","src":"621:63:26"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:26","type":""}],"src":"568:122:26"},{"body":{"nodeType":"YulBlock","src":"759:80:26","statements":[{"nodeType":"YulAssignment","src":"769:22:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:26"},"nodeType":"YulFunctionCall","src":"778:13:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:26"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:26"},"nodeType":"YulFunctionCall","src":"800:33:26"},"nodeType":"YulExpressionStatement","src":"800:33:26"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:26","type":""}],"src":"696:143:26"},{"body":{"nodeType":"YulBlock","src":"890:32:26","statements":[{"nodeType":"YulAssignment","src":"900:16:26","value":{"name":"value","nodeType":"YulIdentifier","src":"911:5:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"900:7:26"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"872:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"882:7:26","type":""}],"src":"845:77:26"},{"body":{"nodeType":"YulBlock","src":"971:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"1028:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1037:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1040:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1030:6:26"},"nodeType":"YulFunctionCall","src":"1030:12:26"},"nodeType":"YulExpressionStatement","src":"1030:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"994:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1019:5:26"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"1001:17:26"},"nodeType":"YulFunctionCall","src":"1001:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"991:2:26"},"nodeType":"YulFunctionCall","src":"991:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"984:6:26"},"nodeType":"YulFunctionCall","src":"984:43:26"},"nodeType":"YulIf","src":"981:63:26"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"964:5:26","type":""}],"src":"928:122:26"},{"body":{"nodeType":"YulBlock","src":"1119:80:26","statements":[{"nodeType":"YulAssignment","src":"1129:22:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1144:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1138:5:26"},"nodeType":"YulFunctionCall","src":"1138:13:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1129:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1187:5:26"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"1160:26:26"},"nodeType":"YulFunctionCall","src":"1160:33:26"},"nodeType":"YulExpressionStatement","src":"1160:33:26"}]},"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1097:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"1105:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1113:5:26","type":""}],"src":"1056:143:26"},{"body":{"nodeType":"YulBlock","src":"1249:57:26","statements":[{"nodeType":"YulAssignment","src":"1259:41:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1274:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"1281:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1270:3:26"},"nodeType":"YulFunctionCall","src":"1270:30:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1259:7:26"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1231:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1241:7:26","type":""}],"src":"1205:101:26"},{"body":{"nodeType":"YulBlock","src":"1354:78:26","statements":[{"body":{"nodeType":"YulBlock","src":"1410:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1419:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1422:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1412:6:26"},"nodeType":"YulFunctionCall","src":"1412:12:26"},"nodeType":"YulExpressionStatement","src":"1412:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1377:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1401:5:26"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"1384:16:26"},"nodeType":"YulFunctionCall","src":"1384:23:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1374:2:26"},"nodeType":"YulFunctionCall","src":"1374:34:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1367:6:26"},"nodeType":"YulFunctionCall","src":"1367:42:26"},"nodeType":"YulIf","src":"1364:62:26"}]},"name":"validator_revert_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1347:5:26","type":""}],"src":"1312:120:26"},{"body":{"nodeType":"YulBlock","src":"1500:79:26","statements":[{"nodeType":"YulAssignment","src":"1510:22:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1525:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1519:5:26"},"nodeType":"YulFunctionCall","src":"1519:13:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1510:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1567:5:26"}],"functionName":{"name":"validator_revert_t_uint64","nodeType":"YulIdentifier","src":"1541:25:26"},"nodeType":"YulFunctionCall","src":"1541:32:26"},"nodeType":"YulExpressionStatement","src":"1541:32:26"}]},"name":"abi_decode_t_uint64_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1478:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"1486:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1494:5:26","type":""}],"src":"1438:141:26"},{"body":{"nodeType":"YulBlock","src":"1746:971:26","statements":[{"body":{"nodeType":"YulBlock","src":"1793:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1795:77:26"},"nodeType":"YulFunctionCall","src":"1795:79:26"},"nodeType":"YulExpressionStatement","src":"1795:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1767:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"1776:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1763:3:26"},"nodeType":"YulFunctionCall","src":"1763:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"1788:3:26","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1759:3:26"},"nodeType":"YulFunctionCall","src":"1759:33:26"},"nodeType":"YulIf","src":"1756:120:26"},{"nodeType":"YulBlock","src":"1886:128:26","statements":[{"nodeType":"YulVariableDeclaration","src":"1901:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"1915:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1905:6:26","type":""}]},{"nodeType":"YulAssignment","src":"1930:74:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1976:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"1987:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1972:3:26"},"nodeType":"YulFunctionCall","src":"1972:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1996:7:26"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1940:31:26"},"nodeType":"YulFunctionCall","src":"1940:64:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1930:6:26"}]}]},{"nodeType":"YulBlock","src":"2024:129:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2039:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"2053:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2043:6:26","type":""}]},{"nodeType":"YulAssignment","src":"2069:74:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2115:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"2126:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2111:3:26"},"nodeType":"YulFunctionCall","src":"2111:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2135:7:26"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"2079:31:26"},"nodeType":"YulFunctionCall","src":"2079:64:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2069:6:26"}]}]},{"nodeType":"YulBlock","src":"2163:129:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2178:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"2192:2:26","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2182:6:26","type":""}]},{"nodeType":"YulAssignment","src":"2208:74:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2254:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"2265:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2250:3:26"},"nodeType":"YulFunctionCall","src":"2250:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2274:7:26"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"2218:31:26"},"nodeType":"YulFunctionCall","src":"2218:64:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2208:6:26"}]}]},{"nodeType":"YulBlock","src":"2302:129:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2317:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"2331:2:26","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2321:6:26","type":""}]},{"nodeType":"YulAssignment","src":"2347:74:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2393:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"2404:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2389:3:26"},"nodeType":"YulFunctionCall","src":"2389:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2413:7:26"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"2357:31:26"},"nodeType":"YulFunctionCall","src":"2357:64:26"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2347:6:26"}]}]},{"nodeType":"YulBlock","src":"2441:130:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2456:17:26","value":{"kind":"number","nodeType":"YulLiteral","src":"2470:3:26","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2460:6:26","type":""}]},{"nodeType":"YulAssignment","src":"2487:74:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2533:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"2544:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2529:3:26"},"nodeType":"YulFunctionCall","src":"2529:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2553:7:26"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulIdentifier","src":"2497:31:26"},"nodeType":"YulFunctionCall","src":"2497:64:26"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"2487:6:26"}]}]},{"nodeType":"YulBlock","src":"2581:129:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2596:17:26","value":{"kind":"number","nodeType":"YulLiteral","src":"2610:3:26","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2600:6:26","type":""}]},{"nodeType":"YulAssignment","src":"2627:73:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2672:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"2683:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2668:3:26"},"nodeType":"YulFunctionCall","src":"2668:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2692:7:26"}],"functionName":{"name":"abi_decode_t_uint64_fromMemory","nodeType":"YulIdentifier","src":"2637:30:26"},"nodeType":"YulFunctionCall","src":"2637:63:26"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"2627:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_addresst_addresst_bytes32t_uint64_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1676:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1687:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1699:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1707:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1715:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1723:6:26","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1731:6:26","type":""},{"name":"value5","nodeType":"YulTypedName","src":"1739:6:26","type":""}],"src":"1585:1132:26"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint64_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_bytes32t_uint64_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint64_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":26,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH3 0x186A0 PUSH1 0x5 PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x5 PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x5 PUSH1 0xE PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0x75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1E6D CODESIZE SUB DUP1 PUSH3 0x1E6D DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x9B SWAP2 SWAP1 PUSH3 0x2FA JUMP JUMPDEST DUP3 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP DUP6 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x4 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP PUSH3 0x396 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x242 DUP3 PUSH3 0x215 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x254 DUP2 PUSH3 0x235 JUMP JUMPDEST DUP2 EQ PUSH3 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x274 DUP2 PUSH3 0x249 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x28F DUP2 PUSH3 0x27A JUMP JUMPDEST DUP2 EQ PUSH3 0x29B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2AF DUP2 PUSH3 0x284 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2D4 DUP2 PUSH3 0x2B5 JUMP JUMPDEST DUP2 EQ PUSH3 0x2E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2F4 DUP2 PUSH3 0x2C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH3 0x31A JUMPI PUSH3 0x319 PUSH3 0x210 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x32A DUP10 DUP3 DUP11 ADD PUSH3 0x263 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH3 0x33D DUP10 DUP3 DUP11 ADD PUSH3 0x263 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH3 0x350 DUP10 DUP3 DUP11 ADD PUSH3 0x263 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH3 0x363 DUP10 DUP3 DUP11 ADD PUSH3 0x263 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH3 0x376 DUP10 DUP3 DUP11 ADD PUSH3 0x29E JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH3 0x389 DUP10 DUP3 DUP11 ADD PUSH3 0x2E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1AB4 PUSH3 0x3B9 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x38C ADD MSTORE PUSH2 0x3E0 ADD MSTORE PUSH2 0x1AB4 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6E04FF0D GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xB0FB162F GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xB0FB162F EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0xC95669A5 EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0xCCDD9F5D EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0xE1EC3C68 EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0xE86490E2 EQ PUSH2 0x325 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x777E0D86 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x7CCFD7FC EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x86FCDC19 EQ PUSH2 0x27E JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x24F74697 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x24F74697 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x2BDF0038 EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x47842663 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x61728F39 EQ PUSH2 0x1F3 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x9C1BA2E EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0xDE22984 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x1753BBD7 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x175 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x123 PUSH2 0x341 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x130 SWAP2 SWAP1 PUSH2 0xDDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x141 PUSH2 0x35B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E SWAP2 SWAP1 PUSH2 0xE39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15F PUSH2 0x381 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0xE6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x102D JUMP JUMPDEST PUSH2 0x38A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x199 PUSH2 0x44A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x10A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B7 PUSH2 0x460 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0x111E JUMP JUMPDEST PUSH2 0x59A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DD PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x11CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FB PUSH2 0x5E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x11FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x111E JUMP JUMPDEST PUSH2 0x5E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x239 SWAP3 SWAP2 SWAP1 PUSH2 0x1298 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24A PUSH2 0x746 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x257 SWAP2 SWAP1 PUSH2 0x12E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x268 PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x275 SWAP2 SWAP1 PUSH2 0x10A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x298 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x293 SWAP2 SWAP1 PUSH2 0x12FC JUMP JUMPDEST PUSH2 0x7FB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A2 PUSH2 0x92B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x1359 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C0 PUSH2 0x93F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0x1383 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EB SWAP2 SWAP1 PUSH2 0x139E JUMP JUMPDEST PUSH2 0x945 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x307 SWAP2 SWAP1 PUSH2 0x139E JUMP JUMPDEST PUSH2 0xA12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x1482 JUMP JUMPDEST PUSH2 0xA7C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x43C JUMPI CALLER PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x1CF993F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x433 SWAP3 SWAP2 SWAP1 PUSH2 0x14CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x446 DUP3 DUP3 PUSH2 0xB10 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD GT PUSH2 0x4A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49C SWAP1 PUSH2 0x1555 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D3B1D30 PUSH1 0x4 SLOAD PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH1 0x5 PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x5 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x554 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1575 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x573 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x597 SWAP2 SWAP1 PUSH2 0x15DD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP2 ADD SWAP1 PUSH2 0x5AB SWAP2 SWAP1 PUSH2 0x139E JUMP JUMPDEST SWAP1 POP PUSH2 0x5B6 DUP2 PUSH2 0x945 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x727 JUMPI PUSH1 0x6 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x6E3 JUMPI POP PUSH2 0x6E2 PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE POP POP PUSH2 0xB79 JUMP JUMPDEST JUMPDEST ISZERO PUSH2 0x714 JUMPI PUSH1 0x1 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6FB SWAP2 SWAP1 PUSH2 0x1383 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP SWAP3 POP POP PUSH2 0x73F JUMP JUMPDEST DUP1 DUP1 PUSH2 0x71F SWAP1 PUSH2 0x1639 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5EE JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP2 POP SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7D8 SWAP2 SWAP1 PUSH2 0x16EF JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDC08706D CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x858 SWAP2 SWAP1 PUSH2 0xE39 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x875 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x899 SWAP2 SWAP1 PUSH2 0x1796 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x8E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D9 SWAP1 PUSH2 0x180F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8EB DUP3 PUSH2 0xB91 JUMP JUMPDEST PUSH32 0x3C227EF12195F88B4263EE086A2732948A4E23244A4277294B8C9B177D56AA5B DUP4 DUP4 CALLER PUSH1 0x40 MLOAD PUSH2 0x91E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x182F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x9A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A0 SWAP1 PUSH2 0x18B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xAF91FFE368225045D42F7C2B4B90FEB438133AC1E375E73BC9066652B70A1D77 DUP2 PUSH1 0x40 MLOAD PUSH2 0xA07 SWAP2 SWAP1 PUSH2 0x1383 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB0C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB03 SWAP1 PUSH2 0x191E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xB29 JUMPI PUSH2 0xB28 PUSH2 0x193E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xB3B SWAP2 SWAP1 PUSH2 0x199C JUMP JUMPDEST SWAP1 POP PUSH32 0xB46FCED3A6DF62223B1457DD73F5A2B175FCAA90E8B757F5EF3DCB74D6794645 DUP2 PUSH1 0x40 MLOAD PUSH2 0xB6C SWAP2 SWAP1 PUSH2 0x1383 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH1 0x20 ADD MLOAD GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDC08706D CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEE SWAP2 SWAP1 PUSH2 0xE39 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC0B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC2F SWAP2 SWAP1 PUSH2 0x1796 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0xC78 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC6F SWAP1 PUSH2 0x1A19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0xFF AND DUP2 MSTORE POP PUSH1 0x6 PUSH1 0x0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 0x2A2A0E30BE66D7708FCC027C3528F84A6E08918887209091C74BEC2387CB0C2E CALLER DUP4 PUSH1 0x7 SLOAD DUP5 PUSH1 0x40 MLOAD PUSH2 0xD96 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xDB1 SWAP1 PUSH2 0x1639 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDD7 DUP2 PUSH2 0xDBA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDF2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDCE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE23 DUP3 PUSH2 0xDF8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE33 DUP2 PUSH2 0xE18 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE4E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE2A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE69 DUP2 PUSH2 0xE54 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE84 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE60 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEB1 DUP2 PUSH2 0xE9E JUMP JUMPDEST DUP2 EQ PUSH2 0xEBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xECE DUP2 PUSH2 0xEA8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xF22 DUP3 PUSH2 0xED9 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xF41 JUMPI PUSH2 0xF40 PUSH2 0xEEA JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF54 PUSH2 0xE8A JUMP JUMPDEST SWAP1 POP PUSH2 0xF60 DUP3 DUP3 PUSH2 0xF19 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xF80 JUMPI PUSH2 0xF7F PUSH2 0xEEA JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xFA9 PUSH2 0xFA4 DUP5 PUSH2 0xF65 JUMP JUMPDEST PUSH2 0xF4A JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xFCC JUMPI PUSH2 0xFCB PUSH2 0xF91 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xFF5 JUMPI DUP1 PUSH2 0xFE1 DUP9 DUP3 PUSH2 0xEBF JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xFCE JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1014 JUMPI PUSH2 0x1013 PUSH2 0xED4 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1024 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xF96 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1044 JUMPI PUSH2 0x1043 PUSH2 0xE94 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1052 DUP6 DUP3 DUP7 ADD PUSH2 0xEBF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1073 JUMPI PUSH2 0x1072 PUSH2 0xE99 JUMP JUMPDEST JUMPDEST PUSH2 0x107F DUP6 DUP3 DUP7 ADD PUSH2 0xFFF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10A2 DUP2 PUSH2 0x1089 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10BD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1099 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x10DE JUMPI PUSH2 0x10DD PUSH2 0xED4 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10FB JUMPI PUSH2 0x10FA PUSH2 0x10C3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1117 JUMPI PUSH2 0x1116 PUSH2 0xF91 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1135 JUMPI PUSH2 0x1134 PUSH2 0xE94 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1153 JUMPI PUSH2 0x1152 PUSH2 0xE99 JUMP JUMPDEST JUMPDEST PUSH2 0x115F DUP6 DUP3 DUP7 ADD PUSH2 0x10C8 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1190 PUSH2 0x118B PUSH2 0x1186 DUP5 PUSH2 0xDF8 JUMP JUMPDEST PUSH2 0x116B JUMP JUMPDEST PUSH2 0xDF8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11A2 DUP3 PUSH2 0x1175 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11B4 DUP3 PUSH2 0x1197 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11C4 DUP2 PUSH2 0x11A9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11DF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x11BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11F8 DUP2 PUSH2 0x11E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1213 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x11EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1253 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1238 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x126A DUP3 PUSH2 0x1219 JUMP JUMPDEST PUSH2 0x1274 DUP2 DUP6 PUSH2 0x1224 JUMP JUMPDEST SWAP4 POP PUSH2 0x1284 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1235 JUMP JUMPDEST PUSH2 0x128D DUP2 PUSH2 0xED9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x12AD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xE60 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x12BF DUP2 DUP5 PUSH2 0x125F JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12DB DUP2 PUSH2 0x12C8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12F6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1313 JUMPI PUSH2 0x1312 PUSH2 0xE94 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1321 DUP6 DUP3 DUP7 ADD PUSH2 0xEBF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1332 DUP6 DUP3 DUP7 ADD PUSH2 0xEBF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1353 DUP2 PUSH2 0x133C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x136E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x134A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x137D DUP2 PUSH2 0xE9E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1398 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1374 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13B4 JUMPI PUSH2 0x13B3 PUSH2 0xE94 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13C2 DUP5 DUP3 DUP6 ADD PUSH2 0xEBF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13E1 DUP2 PUSH2 0x13CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x13FC PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0xE2A JUMP JUMPDEST PUSH2 0x1409 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1374 JUMP JUMPDEST PUSH2 0x1416 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xE60 JUMP JUMPDEST PUSH2 0x1423 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x13D8 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1442 JUMPI PUSH2 0x1441 PUSH2 0xED4 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x145F JUMPI PUSH2 0x145E PUSH2 0x10C3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x147B JUMPI PUSH2 0x147A PUSH2 0xF91 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1499 JUMPI PUSH2 0x1498 PUSH2 0xE94 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14B7 JUMPI PUSH2 0x14B6 PUSH2 0xE99 JUMP JUMPDEST JUMPDEST PUSH2 0x14C3 DUP6 DUP3 DUP7 ADD PUSH2 0x142C JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x14E4 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xE2A JUMP JUMPDEST PUSH2 0x14F1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE2A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F206C6F616E73206578697374000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x153F PUSH1 0xE DUP4 PUSH2 0x14F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x154A DUP3 PUSH2 0x1509 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x156E DUP2 PUSH2 0x1532 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x158A PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x11EF JUMP JUMPDEST PUSH2 0x1597 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0xDCE JUMP JUMPDEST PUSH2 0x15A4 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x134A JUMP JUMPDEST PUSH2 0x15B1 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1099 JUMP JUMPDEST PUSH2 0x15BE PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1099 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x15D7 DUP2 PUSH2 0xEA8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15F3 JUMPI PUSH2 0x15F2 PUSH2 0xE94 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1601 DUP5 DUP3 DUP6 ADD PUSH2 0x15C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1644 DUP3 PUSH2 0xE9E JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1676 JUMPI PUSH2 0x1675 PUSH2 0x160A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16A0 DUP2 PUSH2 0x1681 JUMP JUMPDEST DUP2 EQ PUSH2 0x16AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x16BD DUP2 PUSH2 0x1697 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16CC DUP2 PUSH2 0x12C8 JUMP JUMPDEST DUP2 EQ PUSH2 0x16D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x16E9 DUP2 PUSH2 0x16C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x170B JUMPI PUSH2 0x170A PUSH2 0xE94 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1719 DUP9 DUP3 DUP10 ADD PUSH2 0x16AE JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x172A DUP9 DUP3 DUP10 ADD PUSH2 0x16DA JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x173B DUP9 DUP3 DUP10 ADD PUSH2 0x15C8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x174C DUP9 DUP3 DUP10 ADD PUSH2 0x15C8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x175D DUP9 DUP3 DUP10 ADD PUSH2 0x16AE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x1773 DUP2 PUSH2 0x13CB JUMP JUMPDEST DUP2 EQ PUSH2 0x177E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1790 DUP2 PUSH2 0x176A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17AC JUMPI PUSH2 0x17AB PUSH2 0xE94 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17BA DUP5 DUP3 DUP6 ADD PUSH2 0x1781 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5269736B20746F6F20686967682028617070726F76616C290000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17F9 PUSH1 0x18 DUP4 PUSH2 0x14F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1804 DUP3 PUSH2 0x17C3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1828 DUP2 PUSH2 0x17EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1844 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1374 JUMP JUMPDEST PUSH2 0x1851 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1374 JUMP JUMPDEST PUSH2 0x185E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xE2A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x416C726561647920726570616964000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x189C PUSH1 0xE DUP4 PUSH2 0x14F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x18A7 DUP3 PUSH2 0x1866 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x18CB DUP2 PUSH2 0x188F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792043434950526F757465720000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1908 PUSH1 0xF DUP4 PUSH2 0x14F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1913 DUP3 PUSH2 0x18D2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1937 DUP2 PUSH2 0x18FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x19A7 DUP3 PUSH2 0xE9E JUMP JUMPDEST SWAP2 POP PUSH2 0x19B2 DUP4 PUSH2 0xE9E JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x19C2 JUMPI PUSH2 0x19C1 PUSH2 0x196D JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5269736B20746F6F206869676800000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A03 PUSH1 0xD DUP4 PUSH2 0x14F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A0E DUP3 PUSH2 0x19CD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A32 DUP2 PUSH2 0x19F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1A4E PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0xE2A JUMP JUMPDEST PUSH2 0x1A5B PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1374 JUMP JUMPDEST PUSH2 0x1A68 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1374 JUMP JUMPDEST PUSH2 0x1A75 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x13D8 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 JUMP LOG2 0xAE CALLER 0xE1 CREATE DUP12 0xC9 SLT MSIZE DUP5 0x25 0x4B CALLVALUE 0xF7 0xF6 0x4E RETURNDATACOPY AND SHR DUP6 0xB8 JUMPDEST SHR 0xB7 0xC7 SELFBALANCE SWAP5 XOR MSIZE 0x4D PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"574:4155:25:-:0;;;936:6;903:39;;;;;;;;;;;;;;;;;;;;986:1;949:38;;;;;;;;;;;;;;;;;;;;1019:1;994:26;;;;;;;;;;;;;;;;;;;;1543:531;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1764:15;5700::4;5683:32;;;;;;;;;;5640:80;1826:10:25::1;1792:9;::::0;:45:::1;;;;;;;;;;;;;;;;;;1877:12;1848:11;;:42;;;;;;;;;;;;;;;;;;1914:11;1901:10;;:24;;;;;;;;;;;;;;;;;;1978:15;1938:11;;:56;;;;;;;;;;;;;;;;;;2015:8;2005:7;:18;;;;2051:15;2034:14;;:32;;;;;;;;;;;;;;;;;;1543:531:::0;;;;;;574:4155;;88:117:26;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:101::-;1241:7;1281:18;1274:5;1270:30;1259:41;;1205:101;;;:::o;1312:120::-;1384:23;1401:5;1384:23;:::i;:::-;1377:5;1374:34;1364:62;;1422:1;1419;1412:12;1364:62;1312:120;:::o;1438:141::-;1494:5;1525:6;1519:13;1510:22;;1541:32;1567:5;1541:32;:::i;:::-;1438:141;;;;:::o;1585:1132::-;1699:6;1707;1715;1723;1731;1739;1788:3;1776:9;1767:7;1763:23;1759:33;1756:120;;;1795:79;;:::i;:::-;1756:120;1915:1;1940:64;1996:7;1987:6;1976:9;1972:22;1940:64;:::i;:::-;1930:74;;1886:128;2053:2;2079:64;2135:7;2126:6;2115:9;2111:22;2079:64;:::i;:::-;2069:74;;2024:129;2192:2;2218:64;2274:7;2265:6;2254:9;2250:22;2218:64;:::i;:::-;2208:74;;2163:129;2331:2;2357:64;2413:7;2404:6;2393:9;2389:22;2357:64;:::i;:::-;2347:74;;2302:129;2470:3;2497:64;2553:7;2544:6;2533:9;2529:22;2497:64;:::i;:::-;2487:74;;2441:130;2610:3;2637:63;2692:7;2683:6;2672:9;2668:22;2637:63;:::i;:::-;2627:73;;2581:129;1585:1132;;;;;;;;:::o;574:4155:25:-;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_isUnhealthy_7366":{"entryPoint":2937,"id":7366,"parameterSlots":1,"returnSlots":1},"@borrow_7214":{"entryPoint":2961,"id":7214,"parameterSlots":1,"returnSlots":0},"@callbackGasLimit_7073":{"entryPoint":1098,"id":7073,"parameterSlots":0,"returnSlots":0},"@ccipRouter_7063":{"entryPoint":859,"id":7063,"parameterSlots":0,"returnSlots":0},"@checkHealth_7270":{"entryPoint":897,"id":7270,"parameterSlots":0,"returnSlots":1},"@checkUpkeep_7331":{"entryPoint":1511,"id":7331,"parameterSlots":2,"returnSlots":2},"@fulfillRandomWords_7435":{"entryPoint":2832,"id":7435,"parameterSlots":2,"returnSlots":0},"@getLatestETHPrice_7284":{"entryPoint":1862,"id":7284,"parameterSlots":0,"returnSlots":1},"@keyHash_7068":{"entryPoint":1505,"id":7068,"parameterSlots":0,"returnSlots":0},"@liquidateLoan_7392":{"entryPoint":2373,"id":7392,"parameterSlots":1,"returnSlots":0},"@loanId_7095":{"entryPoint":2367,"id":7095,"parameterSlots":0,"returnSlots":0},"@loans_7093":{"entryPoint":2578,"id":7093,"parameterSlots":0,"returnSlots":0},"@numWords_7079":{"entryPoint":2021,"id":7079,"parameterSlots":0,"returnSlots":0},"@performUpkeep_7352":{"entryPoint":1434,"id":7352,"parameterSlots":2,"returnSlots":0},"@rawFulfillRandomWords_170":{"entryPoint":906,"id":170,"parameterSlots":2,"returnSlots":0},"@receiveCrossChainMessage_7262":{"entryPoint":2684,"id":7262,"parameterSlots":2,"returnSlots":0},"@receiveLoanApproval_7248":{"entryPoint":2043,"id":7248,"parameterSlots":2,"returnSlots":0},"@requestAudit_7413":{"entryPoint":1120,"id":7413,"parameterSlots":0,"returnSlots":0},"@requestConfirmations_7076":{"entryPoint":2347,"id":7076,"parameterSlots":0,"returnSlots":0},"@riskManager_7061":{"entryPoint":1467,"id":7061,"parameterSlots":0,"returnSlots":0},"@subscriptionId_7070":{"entryPoint":833,"id":7070,"parameterSlots":0,"returnSlots":0},"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":3990,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":4095,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_calldata_ptr":{"entryPoint":4296,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_int256_fromMemory":{"entryPoint":5850,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_calldata_ptr":{"entryPoint":5164,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_uint256":{"entryPoint":3775,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":5576,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint80_fromMemory":{"entryPoint":5806,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8_fromMemory":{"entryPoint":6017,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes_calldata_ptr":{"entryPoint":4382,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_string_calldata_ptr":{"entryPoint":5250,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":5022,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":5597,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":4141,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":4860,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory":{"entryPoint":5871,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_uint8_fromMemory":{"entryPoint":6038,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3626,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3680,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":4591,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":4703,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_contract$_IAIRiskManager_$7051_to_t_address_fromStack":{"entryPoint":4539,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_int256_to_t_int256_fromStack":{"entryPoint":4818,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_ad33effebb8ebd668b493fd4633c03f9cbc09e33c64bafab92287921327885a7_to_t_string_memory_ptr_fromStack":{"entryPoint":6646,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b5ece5ace778fd61eeacf62354aa9f048d40c4d9fb74a45da09354f6d9859b46_to_t_string_memory_ptr_fromStack":{"entryPoint":6287,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_be8e7ee5a75ce3580b3501c720c961ee27e48f0f306b9d3dc09407368147858b_to_t_string_memory_ptr_fromStack":{"entryPoint":5426,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d0d9a03f66fcd64e921be555242143db26e2859927adcfc5f843c5b20f551002_to_t_string_memory_ptr_fromStack":{"entryPoint":6124,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d8dc70e524995adb65000818b14e79969a346971ba3f7168cde2ef6ebc093ee6_to_t_string_memory_ptr_fromStack":{"entryPoint":6395,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint16_to_t_uint16_fromStack":{"entryPoint":4938,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":4980,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":4249,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint64_to_t_uint64_fromStack":{"entryPoint":3534,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":5080,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3641,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":5327,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_bool_t_uint8__to_t_address_t_uint256_t_bool_t_uint8__fromStack_reversed":{"entryPoint":5095,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint8__to_t_address_t_uint256_t_uint256_t_uint8__fromStack_reversed":{"entryPoint":6713,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3695,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":4760,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":4606,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed":{"entryPoint":5493,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_contract$_IAIRiskManager_$7051__to_t_address__fromStack_reversed":{"entryPoint":4554,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed":{"entryPoint":4833,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ad33effebb8ebd668b493fd4633c03f9cbc09e33c64bafab92287921327885a7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6681,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b5ece5ace778fd61eeacf62354aa9f048d40c4d9fb74a45da09354f6d9859b46__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6322,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_be8e7ee5a75ce3580b3501c720c961ee27e48f0f306b9d3dc09407368147858b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5461,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d0d9a03f66fcd64e921be555242143db26e2859927adcfc5f843c5b20f551002__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6159,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d8dc70e524995adb65000818b14e79969a346971ba3f7168cde2ef6ebc093ee6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6430,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed":{"entryPoint":4953,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":4995,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_address__fromStack_reversed":{"entryPoint":6191,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed":{"entryPoint":4264,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":3549,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":3914,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":3722,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":3941,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":4633,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":4644,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":5368,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3608,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3668,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":4581,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_int256":{"entryPoint":4808,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint16":{"entryPoint":4924,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3576,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3742,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":4233,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":3514,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":5067,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint80":{"entryPoint":5761,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IAIRiskManager_$7051_to_t_address":{"entryPoint":4521,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":4503,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":4469,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":4661,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":3865,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":4459,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":5689,"id":null,"parameterSlots":1,"returnSlots":1},"mod_t_uint256":{"entryPoint":6556,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":5642,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":6509,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":6462,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":3818,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":4291,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":3796,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":3985,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":3737,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3732,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":3801,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_ad33effebb8ebd668b493fd4633c03f9cbc09e33c64bafab92287921327885a7":{"entryPoint":6605,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b5ece5ace778fd61eeacf62354aa9f048d40c4d9fb74a45da09354f6d9859b46":{"entryPoint":6246,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_be8e7ee5a75ce3580b3501c720c961ee27e48f0f306b9d3dc09407368147858b":{"entryPoint":5385,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d0d9a03f66fcd64e921be555242143db26e2859927adcfc5f843c5b20f551002":{"entryPoint":6083,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d8dc70e524995adb65000818b14e79969a346971ba3f7168cde2ef6ebc093ee6":{"entryPoint":6354,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_int256":{"entryPoint":5827,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":3752,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":5994,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint80":{"entryPoint":5783,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:24276:26","statements":[{"body":{"nodeType":"YulBlock","src":"51:57:26","statements":[{"nodeType":"YulAssignment","src":"61:41:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"76:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"83:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"72:3:26"},"nodeType":"YulFunctionCall","src":"72:30:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"61:7:26"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"43:7:26","type":""}],"src":"7:101:26"},{"body":{"nodeType":"YulBlock","src":"177:52:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"194:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"216:5:26"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"199:16:26"},"nodeType":"YulFunctionCall","src":"199:23:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"187:6:26"},"nodeType":"YulFunctionCall","src":"187:36:26"},"nodeType":"YulExpressionStatement","src":"187:36:26"}]},"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"165:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"172:3:26","type":""}],"src":"114:115:26"},{"body":{"nodeType":"YulBlock","src":"331:122:26","statements":[{"nodeType":"YulAssignment","src":"341:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"353:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"364:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"349:3:26"},"nodeType":"YulFunctionCall","src":"349:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"341:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"419:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"432:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"428:3:26"},"nodeType":"YulFunctionCall","src":"428:17:26"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"377:41:26"},"nodeType":"YulFunctionCall","src":"377:69:26"},"nodeType":"YulExpressionStatement","src":"377:69:26"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"303:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"315:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"326:4:26","type":""}],"src":"235:218:26"},{"body":{"nodeType":"YulBlock","src":"504:81:26","statements":[{"nodeType":"YulAssignment","src":"514:65:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"529:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"536:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"525:3:26"},"nodeType":"YulFunctionCall","src":"525:54:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"514:7:26"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"486:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"496:7:26","type":""}],"src":"459:126:26"},{"body":{"nodeType":"YulBlock","src":"636:51:26","statements":[{"nodeType":"YulAssignment","src":"646:35:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"675:5:26"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"657:17:26"},"nodeType":"YulFunctionCall","src":"657:24:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"646:7:26"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"618:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"628:7:26","type":""}],"src":"591:96:26"},{"body":{"nodeType":"YulBlock","src":"758:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"775:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"798:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"780:17:26"},"nodeType":"YulFunctionCall","src":"780:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"768:6:26"},"nodeType":"YulFunctionCall","src":"768:37:26"},"nodeType":"YulExpressionStatement","src":"768:37:26"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"746:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"753:3:26","type":""}],"src":"693:118:26"},{"body":{"nodeType":"YulBlock","src":"915:124:26","statements":[{"nodeType":"YulAssignment","src":"925:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"937:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"948:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:26"},"nodeType":"YulFunctionCall","src":"933:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"925:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1005:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1018:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1029:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1014:3:26"},"nodeType":"YulFunctionCall","src":"1014:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"961:43:26"},"nodeType":"YulFunctionCall","src":"961:71:26"},"nodeType":"YulExpressionStatement","src":"961:71:26"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"887:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"899:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"910:4:26","type":""}],"src":"817:222:26"},{"body":{"nodeType":"YulBlock","src":"1087:48:26","statements":[{"nodeType":"YulAssignment","src":"1097:32:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1122:5:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1115:6:26"},"nodeType":"YulFunctionCall","src":"1115:13:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1108:6:26"},"nodeType":"YulFunctionCall","src":"1108:21:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1097:7:26"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1069:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1079:7:26","type":""}],"src":"1045:90:26"},{"body":{"nodeType":"YulBlock","src":"1200:50:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1217:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1237:5:26"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1222:14:26"},"nodeType":"YulFunctionCall","src":"1222:21:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1210:6:26"},"nodeType":"YulFunctionCall","src":"1210:34:26"},"nodeType":"YulExpressionStatement","src":"1210:34:26"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1188:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1195:3:26","type":""}],"src":"1141:109:26"},{"body":{"nodeType":"YulBlock","src":"1348:118:26","statements":[{"nodeType":"YulAssignment","src":"1358:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1370:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1381:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1366:3:26"},"nodeType":"YulFunctionCall","src":"1366:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1358:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1432:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1445:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1456:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1441:3:26"},"nodeType":"YulFunctionCall","src":"1441:17:26"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1394:37:26"},"nodeType":"YulFunctionCall","src":"1394:65:26"},"nodeType":"YulExpressionStatement","src":"1394:65:26"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1320:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1332:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1343:4:26","type":""}],"src":"1256:210:26"},{"body":{"nodeType":"YulBlock","src":"1512:35:26","statements":[{"nodeType":"YulAssignment","src":"1522:19:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1538:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1532:5:26"},"nodeType":"YulFunctionCall","src":"1532:9:26"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1522:6:26"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1505:6:26","type":""}],"src":"1472:75:26"},{"body":{"nodeType":"YulBlock","src":"1642:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1659:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1652:6:26"},"nodeType":"YulFunctionCall","src":"1652:12:26"},"nodeType":"YulExpressionStatement","src":"1652:12:26"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1553:117:26"},{"body":{"nodeType":"YulBlock","src":"1765:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1782:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1785:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1775:6:26"},"nodeType":"YulFunctionCall","src":"1775:12:26"},"nodeType":"YulExpressionStatement","src":"1775:12:26"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1676:117:26"},{"body":{"nodeType":"YulBlock","src":"1844:32:26","statements":[{"nodeType":"YulAssignment","src":"1854:16:26","value":{"name":"value","nodeType":"YulIdentifier","src":"1865:5:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1854:7:26"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1826:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1836:7:26","type":""}],"src":"1799:77:26"},{"body":{"nodeType":"YulBlock","src":"1925:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"1982:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1991:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1994:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1984:6:26"},"nodeType":"YulFunctionCall","src":"1984:12:26"},"nodeType":"YulExpressionStatement","src":"1984:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1948:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1973:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1955:17:26"},"nodeType":"YulFunctionCall","src":"1955:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1945:2:26"},"nodeType":"YulFunctionCall","src":"1945:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1938:6:26"},"nodeType":"YulFunctionCall","src":"1938:43:26"},"nodeType":"YulIf","src":"1935:63:26"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1918:5:26","type":""}],"src":"1882:122:26"},{"body":{"nodeType":"YulBlock","src":"2062:87:26","statements":[{"nodeType":"YulAssignment","src":"2072:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2094:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2081:12:26"},"nodeType":"YulFunctionCall","src":"2081:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2072:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2137:5:26"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2110:26:26"},"nodeType":"YulFunctionCall","src":"2110:33:26"},"nodeType":"YulExpressionStatement","src":"2110:33:26"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2040:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"2048:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2056:5:26","type":""}],"src":"2010:139:26"},{"body":{"nodeType":"YulBlock","src":"2244:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2261:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2264:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2254:6:26"},"nodeType":"YulFunctionCall","src":"2254:12:26"},"nodeType":"YulExpressionStatement","src":"2254:12:26"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"2155:117:26"},{"body":{"nodeType":"YulBlock","src":"2326:54:26","statements":[{"nodeType":"YulAssignment","src":"2336:38:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2354:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"2361:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2350:3:26"},"nodeType":"YulFunctionCall","src":"2350:14:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2370:2:26","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2366:3:26"},"nodeType":"YulFunctionCall","src":"2366:7:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2346:3:26"},"nodeType":"YulFunctionCall","src":"2346:28:26"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2336:6:26"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2309:5:26","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2319:6:26","type":""}],"src":"2278:102:26"},{"body":{"nodeType":"YulBlock","src":"2414:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2431:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2434:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2424:6:26"},"nodeType":"YulFunctionCall","src":"2424:88:26"},"nodeType":"YulExpressionStatement","src":"2424:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2528:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2531:4:26","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2521:6:26"},"nodeType":"YulFunctionCall","src":"2521:15:26"},"nodeType":"YulExpressionStatement","src":"2521:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2552:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2555:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2545:6:26"},"nodeType":"YulFunctionCall","src":"2545:15:26"},"nodeType":"YulExpressionStatement","src":"2545:15:26"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2386:180:26"},{"body":{"nodeType":"YulBlock","src":"2615:238:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2625:58:26","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2647:6:26"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2677:4:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2655:21:26"},"nodeType":"YulFunctionCall","src":"2655:27:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2643:3:26"},"nodeType":"YulFunctionCall","src":"2643:40:26"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2629:10:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"2794:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2796:16:26"},"nodeType":"YulFunctionCall","src":"2796:18:26"},"nodeType":"YulExpressionStatement","src":"2796:18:26"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2737:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"2749:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2734:2:26"},"nodeType":"YulFunctionCall","src":"2734:34:26"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2773:10:26"},{"name":"memPtr","nodeType":"YulIdentifier","src":"2785:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2770:2:26"},"nodeType":"YulFunctionCall","src":"2770:22:26"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2731:2:26"},"nodeType":"YulFunctionCall","src":"2731:62:26"},"nodeType":"YulIf","src":"2728:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2832:2:26","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2836:10:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2825:6:26"},"nodeType":"YulFunctionCall","src":"2825:22:26"},"nodeType":"YulExpressionStatement","src":"2825:22:26"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2601:6:26","type":""},{"name":"size","nodeType":"YulTypedName","src":"2609:4:26","type":""}],"src":"2572:281:26"},{"body":{"nodeType":"YulBlock","src":"2900:88:26","statements":[{"nodeType":"YulAssignment","src":"2910:30:26","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"2920:18:26"},"nodeType":"YulFunctionCall","src":"2920:20:26"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2910:6:26"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2969:6:26"},{"name":"size","nodeType":"YulIdentifier","src":"2977:4:26"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"2949:19:26"},"nodeType":"YulFunctionCall","src":"2949:33:26"},"nodeType":"YulExpressionStatement","src":"2949:33:26"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"2884:4:26","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2893:6:26","type":""}],"src":"2859:129:26"},{"body":{"nodeType":"YulBlock","src":"3076:229:26","statements":[{"body":{"nodeType":"YulBlock","src":"3181:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3183:16:26"},"nodeType":"YulFunctionCall","src":"3183:18:26"},"nodeType":"YulExpressionStatement","src":"3183:18:26"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3153:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"3161:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3150:2:26"},"nodeType":"YulFunctionCall","src":"3150:30:26"},"nodeType":"YulIf","src":"3147:56:26"},{"nodeType":"YulAssignment","src":"3213:25:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3225:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"3233:4:26","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3221:3:26"},"nodeType":"YulFunctionCall","src":"3221:17:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3213:4:26"}]},{"nodeType":"YulAssignment","src":"3275:23:26","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"3287:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"3293:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3283:3:26"},"nodeType":"YulFunctionCall","src":"3283:15:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3275:4:26"}]}]},"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"3060:6:26","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"3071:4:26","type":""}],"src":"2994:311:26"},{"body":{"nodeType":"YulBlock","src":"3400:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3417:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3420:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3410:6:26"},"nodeType":"YulFunctionCall","src":"3410:12:26"},"nodeType":"YulExpressionStatement","src":"3410:12:26"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"3311:117:26"},{"body":{"nodeType":"YulBlock","src":"3553:608:26","statements":[{"nodeType":"YulAssignment","src":"3563:90:26","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3645:6:26"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"3588:56:26"},"nodeType":"YulFunctionCall","src":"3588:64:26"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"3572:15:26"},"nodeType":"YulFunctionCall","src":"3572:81:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3563:5:26"}]},{"nodeType":"YulVariableDeclaration","src":"3662:16:26","value":{"name":"array","nodeType":"YulIdentifier","src":"3673:5:26"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"3666:3:26","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"3695:5:26"},{"name":"length","nodeType":"YulIdentifier","src":"3702:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3688:6:26"},"nodeType":"YulFunctionCall","src":"3688:21:26"},"nodeType":"YulExpressionStatement","src":"3688:21:26"},{"nodeType":"YulAssignment","src":"3718:23:26","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"3729:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"3736:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3725:3:26"},"nodeType":"YulFunctionCall","src":"3725:16:26"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"3718:3:26"}]},{"nodeType":"YulVariableDeclaration","src":"3751:44:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3769:6:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3781:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"3789:4:26","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3777:3:26"},"nodeType":"YulFunctionCall","src":"3777:17:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3765:3:26"},"nodeType":"YulFunctionCall","src":"3765:30:26"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"3755:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"3823:103:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"3837:77:26"},"nodeType":"YulFunctionCall","src":"3837:79:26"},"nodeType":"YulExpressionStatement","src":"3837:79:26"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"3810:6:26"},{"name":"end","nodeType":"YulIdentifier","src":"3818:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3807:2:26"},"nodeType":"YulFunctionCall","src":"3807:15:26"},"nodeType":"YulIf","src":"3804:122:26"},{"body":{"nodeType":"YulBlock","src":"4011:144:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4026:21:26","value":{"name":"src","nodeType":"YulIdentifier","src":"4044:3:26"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"4030:10:26","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4068:3:26"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"4094:10:26"},{"name":"end","nodeType":"YulIdentifier","src":"4106:3:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4073:20:26"},"nodeType":"YulFunctionCall","src":"4073:37:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4061:6:26"},"nodeType":"YulFunctionCall","src":"4061:50:26"},"nodeType":"YulExpressionStatement","src":"4061:50:26"},{"nodeType":"YulAssignment","src":"4124:21:26","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4135:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"4140:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4131:3:26"},"nodeType":"YulFunctionCall","src":"4131:14:26"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"4124:3:26"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3964:3:26"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"3969:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3961:2:26"},"nodeType":"YulFunctionCall","src":"3961:15:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3977:25:26","statements":[{"nodeType":"YulAssignment","src":"3979:21:26","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3990:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"3995:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3986:3:26"},"nodeType":"YulFunctionCall","src":"3986:14:26"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"3979:3:26"}]}]},"pre":{"nodeType":"YulBlock","src":"3939:21:26","statements":[{"nodeType":"YulVariableDeclaration","src":"3941:17:26","value":{"name":"offset","nodeType":"YulIdentifier","src":"3952:6:26"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"3945:3:26","type":""}]}]},"src":"3935:220:26"}]},"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3523:6:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"3531:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"3539:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3547:5:26","type":""}],"src":"3451:710:26"},{"body":{"nodeType":"YulBlock","src":"4261:293:26","statements":[{"body":{"nodeType":"YulBlock","src":"4310:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"4312:77:26"},"nodeType":"YulFunctionCall","src":"4312:79:26"},"nodeType":"YulExpressionStatement","src":"4312:79:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4289:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"4297:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4285:3:26"},"nodeType":"YulFunctionCall","src":"4285:17:26"},{"name":"end","nodeType":"YulIdentifier","src":"4304:3:26"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4281:3:26"},"nodeType":"YulFunctionCall","src":"4281:27:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4274:6:26"},"nodeType":"YulFunctionCall","src":"4274:35:26"},"nodeType":"YulIf","src":"4271:122:26"},{"nodeType":"YulVariableDeclaration","src":"4402:34:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4429:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4416:12:26"},"nodeType":"YulFunctionCall","src":"4416:20:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4406:6:26","type":""}]},{"nodeType":"YulAssignment","src":"4445:103:26","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4521:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"4529:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4517:3:26"},"nodeType":"YulFunctionCall","src":"4517:17:26"},{"name":"length","nodeType":"YulIdentifier","src":"4536:6:26"},{"name":"end","nodeType":"YulIdentifier","src":"4544:3:26"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"4454:62:26"},"nodeType":"YulFunctionCall","src":"4454:94:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4445:5:26"}]}]},"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4239:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"4247:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4255:5:26","type":""}],"src":"4184:370:26"},{"body":{"nodeType":"YulBlock","src":"4668:576:26","statements":[{"body":{"nodeType":"YulBlock","src":"4714:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4716:77:26"},"nodeType":"YulFunctionCall","src":"4716:79:26"},"nodeType":"YulExpressionStatement","src":"4716:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4689:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"4698:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4685:3:26"},"nodeType":"YulFunctionCall","src":"4685:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"4710:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4681:3:26"},"nodeType":"YulFunctionCall","src":"4681:32:26"},"nodeType":"YulIf","src":"4678:119:26"},{"nodeType":"YulBlock","src":"4807:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4822:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"4836:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4826:6:26","type":""}]},{"nodeType":"YulAssignment","src":"4851:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4886:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"4897:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4882:3:26"},"nodeType":"YulFunctionCall","src":"4882:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4906:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4861:20:26"},"nodeType":"YulFunctionCall","src":"4861:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4851:6:26"}]}]},{"nodeType":"YulBlock","src":"4934:303:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4949:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4980:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4991:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4976:3:26"},"nodeType":"YulFunctionCall","src":"4976:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4963:12:26"},"nodeType":"YulFunctionCall","src":"4963:32:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4953:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"5042:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"5044:77:26"},"nodeType":"YulFunctionCall","src":"5044:79:26"},"nodeType":"YulExpressionStatement","src":"5044:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5014:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"5022:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5011:2:26"},"nodeType":"YulFunctionCall","src":"5011:30:26"},"nodeType":"YulIf","src":"5008:117:26"},{"nodeType":"YulAssignment","src":"5139:88:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5199:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"5210:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5195:3:26"},"nodeType":"YulFunctionCall","src":"5195:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5219:7:26"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"5149:45:26"},"nodeType":"YulFunctionCall","src":"5149:78:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5139:6:26"}]}]}]},"name":"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4630:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4641:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4653:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4661:6:26","type":""}],"src":"4560:684:26"},{"body":{"nodeType":"YulBlock","src":"5294:49:26","statements":[{"nodeType":"YulAssignment","src":"5304:33:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5319:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"5326:10:26","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5315:3:26"},"nodeType":"YulFunctionCall","src":"5315:22:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5304:7:26"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5276:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5286:7:26","type":""}],"src":"5250:93:26"},{"body":{"nodeType":"YulBlock","src":"5412:52:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5429:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5451:5:26"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"5434:16:26"},"nodeType":"YulFunctionCall","src":"5434:23:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5422:6:26"},"nodeType":"YulFunctionCall","src":"5422:36:26"},"nodeType":"YulExpressionStatement","src":"5422:36:26"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5400:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5407:3:26","type":""}],"src":"5349:115:26"},{"body":{"nodeType":"YulBlock","src":"5566:122:26","statements":[{"nodeType":"YulAssignment","src":"5576:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5588:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5599:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5584:3:26"},"nodeType":"YulFunctionCall","src":"5584:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5576:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5654:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5667:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5678:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5663:3:26"},"nodeType":"YulFunctionCall","src":"5663:17:26"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"5612:41:26"},"nodeType":"YulFunctionCall","src":"5612:69:26"},"nodeType":"YulExpressionStatement","src":"5612:69:26"}]},"name":"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5538:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5550:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5561:4:26","type":""}],"src":"5470:218:26"},{"body":{"nodeType":"YulBlock","src":"5783:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5800:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5803:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5793:6:26"},"nodeType":"YulFunctionCall","src":"5793:12:26"},"nodeType":"YulExpressionStatement","src":"5793:12:26"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"5694:117:26"},{"body":{"nodeType":"YulBlock","src":"5904:478:26","statements":[{"body":{"nodeType":"YulBlock","src":"5953:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"5955:77:26"},"nodeType":"YulFunctionCall","src":"5955:79:26"},"nodeType":"YulExpressionStatement","src":"5955:79:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5932:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"5940:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5928:3:26"},"nodeType":"YulFunctionCall","src":"5928:17:26"},{"name":"end","nodeType":"YulIdentifier","src":"5947:3:26"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5924:3:26"},"nodeType":"YulFunctionCall","src":"5924:27:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5917:6:26"},"nodeType":"YulFunctionCall","src":"5917:35:26"},"nodeType":"YulIf","src":"5914:122:26"},{"nodeType":"YulAssignment","src":"6045:30:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6068:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6055:12:26"},"nodeType":"YulFunctionCall","src":"6055:20:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6045:6:26"}]},{"body":{"nodeType":"YulBlock","src":"6118:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"6120:77:26"},"nodeType":"YulFunctionCall","src":"6120:79:26"},"nodeType":"YulExpressionStatement","src":"6120:79:26"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6090:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"6098:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6087:2:26"},"nodeType":"YulFunctionCall","src":"6087:30:26"},"nodeType":"YulIf","src":"6084:117:26"},{"nodeType":"YulAssignment","src":"6210:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6226:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"6234:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6222:3:26"},"nodeType":"YulFunctionCall","src":"6222:17:26"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"6210:8:26"}]},{"body":{"nodeType":"YulBlock","src":"6293:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"6295:77:26"},"nodeType":"YulFunctionCall","src":"6295:79:26"},"nodeType":"YulExpressionStatement","src":"6295:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"6258:8:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6272:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"6280:4:26","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6268:3:26"},"nodeType":"YulFunctionCall","src":"6268:17:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6254:3:26"},"nodeType":"YulFunctionCall","src":"6254:32:26"},{"name":"end","nodeType":"YulIdentifier","src":"6288:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6251:2:26"},"nodeType":"YulFunctionCall","src":"6251:41:26"},"nodeType":"YulIf","src":"6248:128:26"}]},"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5871:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"5879:3:26","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"5887:8:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"5897:6:26","type":""}],"src":"5830:552:26"},{"body":{"nodeType":"YulBlock","src":"6473:442:26","statements":[{"body":{"nodeType":"YulBlock","src":"6519:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6521:77:26"},"nodeType":"YulFunctionCall","src":"6521:79:26"},"nodeType":"YulExpressionStatement","src":"6521:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6494:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"6503:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6490:3:26"},"nodeType":"YulFunctionCall","src":"6490:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"6515:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6486:3:26"},"nodeType":"YulFunctionCall","src":"6486:32:26"},"nodeType":"YulIf","src":"6483:119:26"},{"nodeType":"YulBlock","src":"6612:296:26","statements":[{"nodeType":"YulVariableDeclaration","src":"6627:45:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6658:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"6669:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6654:3:26"},"nodeType":"YulFunctionCall","src":"6654:17:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6641:12:26"},"nodeType":"YulFunctionCall","src":"6641:31:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6631:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"6719:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"6721:77:26"},"nodeType":"YulFunctionCall","src":"6721:79:26"},"nodeType":"YulExpressionStatement","src":"6721:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6691:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"6699:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6688:2:26"},"nodeType":"YulFunctionCall","src":"6688:30:26"},"nodeType":"YulIf","src":"6685:117:26"},{"nodeType":"YulAssignment","src":"6816:82:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6870:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"6881:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6866:3:26"},"nodeType":"YulFunctionCall","src":"6866:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6890:7:26"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"6834:31:26"},"nodeType":"YulFunctionCall","src":"6834:64:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6816:6:26"},{"name":"value1","nodeType":"YulIdentifier","src":"6824:6:26"}]}]}]},"name":"abi_decode_tuple_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6435:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6446:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6458:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6466:6:26","type":""}],"src":"6388:527:26"},{"body":{"nodeType":"YulBlock","src":"6953:28:26","statements":[{"nodeType":"YulAssignment","src":"6963:12:26","value":{"name":"value","nodeType":"YulIdentifier","src":"6970:5:26"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"6963:3:26"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6939:5:26","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"6949:3:26","type":""}],"src":"6921:60:26"},{"body":{"nodeType":"YulBlock","src":"7047:82:26","statements":[{"nodeType":"YulAssignment","src":"7057:66:26","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7115:5:26"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"7097:17:26"},"nodeType":"YulFunctionCall","src":"7097:24:26"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"7088:8:26"},"nodeType":"YulFunctionCall","src":"7088:34:26"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"7070:17:26"},"nodeType":"YulFunctionCall","src":"7070:53:26"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"7057:9:26"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7027:5:26","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"7037:9:26","type":""}],"src":"6987:142:26"},{"body":{"nodeType":"YulBlock","src":"7195:66:26","statements":[{"nodeType":"YulAssignment","src":"7205:50:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7249:5:26"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"7218:30:26"},"nodeType":"YulFunctionCall","src":"7218:37:26"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"7205:9:26"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7175:5:26","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"7185:9:26","type":""}],"src":"7135:126:26"},{"body":{"nodeType":"YulBlock","src":"7350:66:26","statements":[{"nodeType":"YulAssignment","src":"7360:50:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7404:5:26"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"7373:30:26"},"nodeType":"YulFunctionCall","src":"7373:37:26"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"7360:9:26"}]}]},"name":"convert_t_contract$_IAIRiskManager_$7051_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7330:5:26","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"7340:9:26","type":""}],"src":"7267:149:26"},{"body":{"nodeType":"YulBlock","src":"7510:89:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7527:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7586:5:26"}],"functionName":{"name":"convert_t_contract$_IAIRiskManager_$7051_to_t_address","nodeType":"YulIdentifier","src":"7532:53:26"},"nodeType":"YulFunctionCall","src":"7532:60:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7520:6:26"},"nodeType":"YulFunctionCall","src":"7520:73:26"},"nodeType":"YulExpressionStatement","src":"7520:73:26"}]},"name":"abi_encode_t_contract$_IAIRiskManager_$7051_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7498:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7505:3:26","type":""}],"src":"7422:177:26"},{"body":{"nodeType":"YulBlock","src":"7726:147:26","statements":[{"nodeType":"YulAssignment","src":"7736:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7748:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"7759:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7744:3:26"},"nodeType":"YulFunctionCall","src":"7744:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7736:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7839:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7852:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"7863:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7848:3:26"},"nodeType":"YulFunctionCall","src":"7848:17:26"}],"functionName":{"name":"abi_encode_t_contract$_IAIRiskManager_$7051_to_t_address_fromStack","nodeType":"YulIdentifier","src":"7772:66:26"},"nodeType":"YulFunctionCall","src":"7772:94:26"},"nodeType":"YulExpressionStatement","src":"7772:94:26"}]},"name":"abi_encode_tuple_t_contract$_IAIRiskManager_$7051__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7698:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7710:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7721:4:26","type":""}],"src":"7605:268:26"},{"body":{"nodeType":"YulBlock","src":"7924:32:26","statements":[{"nodeType":"YulAssignment","src":"7934:16:26","value":{"name":"value","nodeType":"YulIdentifier","src":"7945:5:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7934:7:26"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7906:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7916:7:26","type":""}],"src":"7879:77:26"},{"body":{"nodeType":"YulBlock","src":"8027:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8044:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8067:5:26"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"8049:17:26"},"nodeType":"YulFunctionCall","src":"8049:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8037:6:26"},"nodeType":"YulFunctionCall","src":"8037:37:26"},"nodeType":"YulExpressionStatement","src":"8037:37:26"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8015:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8022:3:26","type":""}],"src":"7962:118:26"},{"body":{"nodeType":"YulBlock","src":"8184:124:26","statements":[{"nodeType":"YulAssignment","src":"8194:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8206:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"8217:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8202:3:26"},"nodeType":"YulFunctionCall","src":"8202:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8194:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8274:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8287:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"8298:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8283:3:26"},"nodeType":"YulFunctionCall","src":"8283:17:26"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"8230:43:26"},"nodeType":"YulFunctionCall","src":"8230:71:26"},"nodeType":"YulExpressionStatement","src":"8230:71:26"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8156:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8168:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8179:4:26","type":""}],"src":"8086:222:26"},{"body":{"nodeType":"YulBlock","src":"8372:40:26","statements":[{"nodeType":"YulAssignment","src":"8383:22:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8399:5:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8393:5:26"},"nodeType":"YulFunctionCall","src":"8393:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8383:6:26"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8355:5:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8365:6:26","type":""}],"src":"8314:98:26"},{"body":{"nodeType":"YulBlock","src":"8513:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8530:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"8535:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8523:6:26"},"nodeType":"YulFunctionCall","src":"8523:19:26"},"nodeType":"YulExpressionStatement","src":"8523:19:26"},{"nodeType":"YulAssignment","src":"8551:29:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8570:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"8575:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8566:3:26"},"nodeType":"YulFunctionCall","src":"8566:14:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"8551:11:26"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8485:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"8490:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"8501:11:26","type":""}],"src":"8418:168:26"},{"body":{"nodeType":"YulBlock","src":"8654:184:26","statements":[{"nodeType":"YulVariableDeclaration","src":"8664:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"8673:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"8668:1:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"8733:63:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8758:3:26"},{"name":"i","nodeType":"YulIdentifier","src":"8763:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8754:3:26"},"nodeType":"YulFunctionCall","src":"8754:11:26"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8777:3:26"},{"name":"i","nodeType":"YulIdentifier","src":"8782:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8773:3:26"},"nodeType":"YulFunctionCall","src":"8773:11:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8767:5:26"},"nodeType":"YulFunctionCall","src":"8767:18:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8747:6:26"},"nodeType":"YulFunctionCall","src":"8747:39:26"},"nodeType":"YulExpressionStatement","src":"8747:39:26"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8694:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"8697:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8691:2:26"},"nodeType":"YulFunctionCall","src":"8691:13:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8705:19:26","statements":[{"nodeType":"YulAssignment","src":"8707:15:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8716:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"8719:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8712:3:26"},"nodeType":"YulFunctionCall","src":"8712:10:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"8707:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"8687:3:26","statements":[]},"src":"8683:113:26"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8816:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"8821:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8812:3:26"},"nodeType":"YulFunctionCall","src":"8812:16:26"},{"kind":"number","nodeType":"YulLiteral","src":"8830:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8805:6:26"},"nodeType":"YulFunctionCall","src":"8805:27:26"},"nodeType":"YulExpressionStatement","src":"8805:27:26"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8636:3:26","type":""},{"name":"dst","nodeType":"YulTypedName","src":"8641:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"8646:6:26","type":""}],"src":"8592:246:26"},{"body":{"nodeType":"YulBlock","src":"8934:283:26","statements":[{"nodeType":"YulVariableDeclaration","src":"8944:52:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8990:5:26"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8958:31:26"},"nodeType":"YulFunctionCall","src":"8958:38:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8948:6:26","type":""}]},{"nodeType":"YulAssignment","src":"9005:77:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9070:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"9075:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9012:57:26"},"nodeType":"YulFunctionCall","src":"9012:70:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9005:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9130:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"9137:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9126:3:26"},"nodeType":"YulFunctionCall","src":"9126:16:26"},{"name":"pos","nodeType":"YulIdentifier","src":"9144:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"9149:6:26"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"9091:34:26"},"nodeType":"YulFunctionCall","src":"9091:65:26"},"nodeType":"YulExpressionStatement","src":"9091:65:26"},{"nodeType":"YulAssignment","src":"9165:46:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9176:3:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9203:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"9181:21:26"},"nodeType":"YulFunctionCall","src":"9181:29:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9172:3:26"},"nodeType":"YulFunctionCall","src":"9172:39:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9165:3:26"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8915:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8922:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8930:3:26","type":""}],"src":"8844:373:26"},{"body":{"nodeType":"YulBlock","src":"9361:269:26","statements":[{"nodeType":"YulAssignment","src":"9371:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9383:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"9394:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9379:3:26"},"nodeType":"YulFunctionCall","src":"9379:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9371:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9445:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9458:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"9469:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9454:3:26"},"nodeType":"YulFunctionCall","src":"9454:17:26"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"9407:37:26"},"nodeType":"YulFunctionCall","src":"9407:65:26"},"nodeType":"YulExpressionStatement","src":"9407:65:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9493:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"9504:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9489:3:26"},"nodeType":"YulFunctionCall","src":"9489:18:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9513:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"9519:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9509:3:26"},"nodeType":"YulFunctionCall","src":"9509:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9482:6:26"},"nodeType":"YulFunctionCall","src":"9482:48:26"},"nodeType":"YulExpressionStatement","src":"9482:48:26"},{"nodeType":"YulAssignment","src":"9539:84:26","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9609:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"9618:4:26"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9547:61:26"},"nodeType":"YulFunctionCall","src":"9547:76:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9539:4:26"}]}]},"name":"abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9325:9:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9337:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9345:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9356:4:26","type":""}],"src":"9223:407:26"},{"body":{"nodeType":"YulBlock","src":"9680:32:26","statements":[{"nodeType":"YulAssignment","src":"9690:16:26","value":{"name":"value","nodeType":"YulIdentifier","src":"9701:5:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9690:7:26"}]}]},"name":"cleanup_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9662:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9672:7:26","type":""}],"src":"9636:76:26"},{"body":{"nodeType":"YulBlock","src":"9781:52:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9798:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9820:5:26"}],"functionName":{"name":"cleanup_t_int256","nodeType":"YulIdentifier","src":"9803:16:26"},"nodeType":"YulFunctionCall","src":"9803:23:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9791:6:26"},"nodeType":"YulFunctionCall","src":"9791:36:26"},"nodeType":"YulExpressionStatement","src":"9791:36:26"}]},"name":"abi_encode_t_int256_to_t_int256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9769:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9776:3:26","type":""}],"src":"9718:115:26"},{"body":{"nodeType":"YulBlock","src":"9935:122:26","statements":[{"nodeType":"YulAssignment","src":"9945:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9957:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"9968:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9953:3:26"},"nodeType":"YulFunctionCall","src":"9953:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9945:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10023:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10036:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"10047:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10032:3:26"},"nodeType":"YulFunctionCall","src":"10032:17:26"}],"functionName":{"name":"abi_encode_t_int256_to_t_int256_fromStack","nodeType":"YulIdentifier","src":"9981:41:26"},"nodeType":"YulFunctionCall","src":"9981:69:26"},"nodeType":"YulExpressionStatement","src":"9981:69:26"}]},"name":"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9907:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9919:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9930:4:26","type":""}],"src":"9839:218:26"},{"body":{"nodeType":"YulBlock","src":"10146:391:26","statements":[{"body":{"nodeType":"YulBlock","src":"10192:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10194:77:26"},"nodeType":"YulFunctionCall","src":"10194:79:26"},"nodeType":"YulExpressionStatement","src":"10194:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10167:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"10176:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10163:3:26"},"nodeType":"YulFunctionCall","src":"10163:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"10188:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10159:3:26"},"nodeType":"YulFunctionCall","src":"10159:32:26"},"nodeType":"YulIf","src":"10156:119:26"},{"nodeType":"YulBlock","src":"10285:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"10300:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"10314:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10304:6:26","type":""}]},{"nodeType":"YulAssignment","src":"10329:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10364:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"10375:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10360:3:26"},"nodeType":"YulFunctionCall","src":"10360:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10384:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"10339:20:26"},"nodeType":"YulFunctionCall","src":"10339:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10329:6:26"}]}]},{"nodeType":"YulBlock","src":"10412:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"10427:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"10441:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10431:6:26","type":""}]},{"nodeType":"YulAssignment","src":"10457:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10492:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"10503:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10488:3:26"},"nodeType":"YulFunctionCall","src":"10488:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10512:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"10467:20:26"},"nodeType":"YulFunctionCall","src":"10467:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10457:6:26"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10108:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10119:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10131:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10139:6:26","type":""}],"src":"10063:474:26"},{"body":{"nodeType":"YulBlock","src":"10587:45:26","statements":[{"nodeType":"YulAssignment","src":"10597:29:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10612:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"10619:6:26","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10608:3:26"},"nodeType":"YulFunctionCall","src":"10608:18:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10597:7:26"}]}]},"name":"cleanup_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10569:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10579:7:26","type":""}],"src":"10543:89:26"},{"body":{"nodeType":"YulBlock","src":"10701:52:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10718:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10740:5:26"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"10723:16:26"},"nodeType":"YulFunctionCall","src":"10723:23:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10711:6:26"},"nodeType":"YulFunctionCall","src":"10711:36:26"},"nodeType":"YulExpressionStatement","src":"10711:36:26"}]},"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10689:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10696:3:26","type":""}],"src":"10638:115:26"},{"body":{"nodeType":"YulBlock","src":"10855:122:26","statements":[{"nodeType":"YulAssignment","src":"10865:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10877:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"10888:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10873:3:26"},"nodeType":"YulFunctionCall","src":"10873:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10865:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10943:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10956:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"10967:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10952:3:26"},"nodeType":"YulFunctionCall","src":"10952:17:26"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"10901:41:26"},"nodeType":"YulFunctionCall","src":"10901:69:26"},"nodeType":"YulExpressionStatement","src":"10901:69:26"}]},"name":"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10827:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10839:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10850:4:26","type":""}],"src":"10759:218:26"},{"body":{"nodeType":"YulBlock","src":"11048:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11065:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11088:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11070:17:26"},"nodeType":"YulFunctionCall","src":"11070:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11058:6:26"},"nodeType":"YulFunctionCall","src":"11058:37:26"},"nodeType":"YulExpressionStatement","src":"11058:37:26"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11036:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11043:3:26","type":""}],"src":"10983:118:26"},{"body":{"nodeType":"YulBlock","src":"11205:124:26","statements":[{"nodeType":"YulAssignment","src":"11215:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11227:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11238:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11223:3:26"},"nodeType":"YulFunctionCall","src":"11223:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11215:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11295:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11308:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11319:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11304:3:26"},"nodeType":"YulFunctionCall","src":"11304:17:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11251:43:26"},"nodeType":"YulFunctionCall","src":"11251:71:26"},"nodeType":"YulExpressionStatement","src":"11251:71:26"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11177:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11189:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11200:4:26","type":""}],"src":"11107:222:26"},{"body":{"nodeType":"YulBlock","src":"11401:263:26","statements":[{"body":{"nodeType":"YulBlock","src":"11447:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11449:77:26"},"nodeType":"YulFunctionCall","src":"11449:79:26"},"nodeType":"YulExpressionStatement","src":"11449:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11422:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"11431:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11418:3:26"},"nodeType":"YulFunctionCall","src":"11418:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"11443:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11414:3:26"},"nodeType":"YulFunctionCall","src":"11414:32:26"},"nodeType":"YulIf","src":"11411:119:26"},{"nodeType":"YulBlock","src":"11540:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"11555:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"11569:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11559:6:26","type":""}]},{"nodeType":"YulAssignment","src":"11584:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11619:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"11630:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11615:3:26"},"nodeType":"YulFunctionCall","src":"11615:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11639:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"11594:20:26"},"nodeType":"YulFunctionCall","src":"11594:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11584:6:26"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11371:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11382:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11394:6:26","type":""}],"src":"11335:329:26"},{"body":{"nodeType":"YulBlock","src":"11713:43:26","statements":[{"nodeType":"YulAssignment","src":"11723:27:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11738:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"11745:4:26","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11734:3:26"},"nodeType":"YulFunctionCall","src":"11734:16:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"11723:7:26"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11695:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"11705:7:26","type":""}],"src":"11670:86:26"},{"body":{"nodeType":"YulBlock","src":"11823:51:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11840:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11861:5:26"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"11845:15:26"},"nodeType":"YulFunctionCall","src":"11845:22:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11833:6:26"},"nodeType":"YulFunctionCall","src":"11833:35:26"},"nodeType":"YulExpressionStatement","src":"11833:35:26"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11811:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11818:3:26","type":""}],"src":"11762:112:26"},{"body":{"nodeType":"YulBlock","src":"12052:361:26","statements":[{"nodeType":"YulAssignment","src":"12062:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12074:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12085:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12070:3:26"},"nodeType":"YulFunctionCall","src":"12070:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12062:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12143:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12156:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12167:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12152:3:26"},"nodeType":"YulFunctionCall","src":"12152:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12099:43:26"},"nodeType":"YulFunctionCall","src":"12099:71:26"},"nodeType":"YulExpressionStatement","src":"12099:71:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12224:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12237:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12248:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12233:3:26"},"nodeType":"YulFunctionCall","src":"12233:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"12180:43:26"},"nodeType":"YulFunctionCall","src":"12180:72:26"},"nodeType":"YulExpressionStatement","src":"12180:72:26"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"12300:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12313:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12324:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12309:3:26"},"nodeType":"YulFunctionCall","src":"12309:18:26"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"12262:37:26"},"nodeType":"YulFunctionCall","src":"12262:66:26"},"nodeType":"YulExpressionStatement","src":"12262:66:26"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"12378:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12391:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12402:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12387:3:26"},"nodeType":"YulFunctionCall","src":"12387:18:26"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"12338:39:26"},"nodeType":"YulFunctionCall","src":"12338:68:26"},"nodeType":"YulExpressionStatement","src":"12338:68:26"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_bool_t_uint8__to_t_address_t_uint256_t_bool_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12000:9:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12012:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12020:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12028:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12036:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12047:4:26","type":""}],"src":"11880:533:26"},{"body":{"nodeType":"YulBlock","src":"12508:478:26","statements":[{"body":{"nodeType":"YulBlock","src":"12557:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"12559:77:26"},"nodeType":"YulFunctionCall","src":"12559:79:26"},"nodeType":"YulExpressionStatement","src":"12559:79:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12536:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"12544:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12532:3:26"},"nodeType":"YulFunctionCall","src":"12532:17:26"},{"name":"end","nodeType":"YulIdentifier","src":"12551:3:26"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12528:3:26"},"nodeType":"YulFunctionCall","src":"12528:27:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12521:6:26"},"nodeType":"YulFunctionCall","src":"12521:35:26"},"nodeType":"YulIf","src":"12518:122:26"},{"nodeType":"YulAssignment","src":"12649:30:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12672:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12659:12:26"},"nodeType":"YulFunctionCall","src":"12659:20:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12649:6:26"}]},{"body":{"nodeType":"YulBlock","src":"12722:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"12724:77:26"},"nodeType":"YulFunctionCall","src":"12724:79:26"},"nodeType":"YulExpressionStatement","src":"12724:79:26"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12694:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"12702:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12691:2:26"},"nodeType":"YulFunctionCall","src":"12691:30:26"},"nodeType":"YulIf","src":"12688:117:26"},{"nodeType":"YulAssignment","src":"12814:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12830:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"12838:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12826:3:26"},"nodeType":"YulFunctionCall","src":"12826:17:26"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"12814:8:26"}]},{"body":{"nodeType":"YulBlock","src":"12897:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"12899:77:26"},"nodeType":"YulFunctionCall","src":"12899:79:26"},"nodeType":"YulExpressionStatement","src":"12899:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"12862:8:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12876:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"12884:4:26","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"12872:3:26"},"nodeType":"YulFunctionCall","src":"12872:17:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12858:3:26"},"nodeType":"YulFunctionCall","src":"12858:32:26"},{"name":"end","nodeType":"YulIdentifier","src":"12892:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12855:2:26"},"nodeType":"YulFunctionCall","src":"12855:41:26"},"nodeType":"YulIf","src":"12852:128:26"}]},"name":"abi_decode_t_string_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"12475:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"12483:3:26","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"12491:8:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"12501:6:26","type":""}],"src":"12433:553:26"},{"body":{"nodeType":"YulBlock","src":"13078:443:26","statements":[{"body":{"nodeType":"YulBlock","src":"13124:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"13126:77:26"},"nodeType":"YulFunctionCall","src":"13126:79:26"},"nodeType":"YulExpressionStatement","src":"13126:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13099:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"13108:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13095:3:26"},"nodeType":"YulFunctionCall","src":"13095:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"13120:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13091:3:26"},"nodeType":"YulFunctionCall","src":"13091:32:26"},"nodeType":"YulIf","src":"13088:119:26"},{"nodeType":"YulBlock","src":"13217:297:26","statements":[{"nodeType":"YulVariableDeclaration","src":"13232:45:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13263:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"13274:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13259:3:26"},"nodeType":"YulFunctionCall","src":"13259:17:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13246:12:26"},"nodeType":"YulFunctionCall","src":"13246:31:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13236:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"13324:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"13326:77:26"},"nodeType":"YulFunctionCall","src":"13326:79:26"},"nodeType":"YulExpressionStatement","src":"13326:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13296:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"13304:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13293:2:26"},"nodeType":"YulFunctionCall","src":"13293:30:26"},"nodeType":"YulIf","src":"13290:117:26"},{"nodeType":"YulAssignment","src":"13421:83:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13476:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"13487:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13472:3:26"},"nodeType":"YulFunctionCall","src":"13472:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13496:7:26"}],"functionName":{"name":"abi_decode_t_string_calldata_ptr","nodeType":"YulIdentifier","src":"13439:32:26"},"nodeType":"YulFunctionCall","src":"13439:65:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13421:6:26"},{"name":"value1","nodeType":"YulIdentifier","src":"13429:6:26"}]}]}]},"name":"abi_decode_tuple_t_string_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13040:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13051:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13063:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13071:6:26","type":""}],"src":"12992:529:26"},{"body":{"nodeType":"YulBlock","src":"13653:206:26","statements":[{"nodeType":"YulAssignment","src":"13663:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13675:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"13686:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13671:3:26"},"nodeType":"YulFunctionCall","src":"13671:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13663:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13743:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13756:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"13767:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13752:3:26"},"nodeType":"YulFunctionCall","src":"13752:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"13699:43:26"},"nodeType":"YulFunctionCall","src":"13699:71:26"},"nodeType":"YulExpressionStatement","src":"13699:71:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13824:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13837:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"13848:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13833:3:26"},"nodeType":"YulFunctionCall","src":"13833:18:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"13780:43:26"},"nodeType":"YulFunctionCall","src":"13780:72:26"},"nodeType":"YulExpressionStatement","src":"13780:72:26"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13617:9:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13629:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13637:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13648:4:26","type":""}],"src":"13527:332:26"},{"body":{"nodeType":"YulBlock","src":"13961:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13978:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"13983:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13971:6:26"},"nodeType":"YulFunctionCall","src":"13971:19:26"},"nodeType":"YulExpressionStatement","src":"13971:19:26"},{"nodeType":"YulAssignment","src":"13999:29:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14018:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"14023:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14014:3:26"},"nodeType":"YulFunctionCall","src":"14014:14:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"13999:11:26"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13933:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"13938:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"13949:11:26","type":""}],"src":"13865:169:26"},{"body":{"nodeType":"YulBlock","src":"14146:58:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14168:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"14176:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14164:3:26"},"nodeType":"YulFunctionCall","src":"14164:14:26"},{"hexValue":"4e6f206c6f616e73206578697374","kind":"string","nodeType":"YulLiteral","src":"14180:16:26","type":"","value":"No loans exist"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14157:6:26"},"nodeType":"YulFunctionCall","src":"14157:40:26"},"nodeType":"YulExpressionStatement","src":"14157:40:26"}]},"name":"store_literal_in_memory_be8e7ee5a75ce3580b3501c720c961ee27e48f0f306b9d3dc09407368147858b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14138:6:26","type":""}],"src":"14040:164:26"},{"body":{"nodeType":"YulBlock","src":"14356:220:26","statements":[{"nodeType":"YulAssignment","src":"14366:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14432:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"14437:2:26","type":"","value":"14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14373:58:26"},"nodeType":"YulFunctionCall","src":"14373:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14366:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14538:3:26"}],"functionName":{"name":"store_literal_in_memory_be8e7ee5a75ce3580b3501c720c961ee27e48f0f306b9d3dc09407368147858b","nodeType":"YulIdentifier","src":"14449:88:26"},"nodeType":"YulFunctionCall","src":"14449:93:26"},"nodeType":"YulExpressionStatement","src":"14449:93:26"},{"nodeType":"YulAssignment","src":"14551:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14562:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"14567:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14558:3:26"},"nodeType":"YulFunctionCall","src":"14558:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14551:3:26"}]}]},"name":"abi_encode_t_stringliteral_be8e7ee5a75ce3580b3501c720c961ee27e48f0f306b9d3dc09407368147858b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14344:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14352:3:26","type":""}],"src":"14210:366:26"},{"body":{"nodeType":"YulBlock","src":"14753:248:26","statements":[{"nodeType":"YulAssignment","src":"14763:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14775:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14786:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14771:3:26"},"nodeType":"YulFunctionCall","src":"14771:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14763:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14810:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14821:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14806:3:26"},"nodeType":"YulFunctionCall","src":"14806:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14829:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"14835:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14825:3:26"},"nodeType":"YulFunctionCall","src":"14825:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14799:6:26"},"nodeType":"YulFunctionCall","src":"14799:47:26"},"nodeType":"YulExpressionStatement","src":"14799:47:26"},{"nodeType":"YulAssignment","src":"14855:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14989:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_be8e7ee5a75ce3580b3501c720c961ee27e48f0f306b9d3dc09407368147858b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14863:124:26"},"nodeType":"YulFunctionCall","src":"14863:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14855:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_be8e7ee5a75ce3580b3501c720c961ee27e48f0f306b9d3dc09407368147858b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14733:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14748:4:26","type":""}],"src":"14582:419:26"},{"body":{"nodeType":"YulBlock","src":"15209:446:26","statements":[{"nodeType":"YulAssignment","src":"15219:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15231:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15242:3:26","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15227:3:26"},"nodeType":"YulFunctionCall","src":"15227:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15219:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15300:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15313:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15324:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15309:3:26"},"nodeType":"YulFunctionCall","src":"15309:17:26"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"15256:43:26"},"nodeType":"YulFunctionCall","src":"15256:71:26"},"nodeType":"YulExpressionStatement","src":"15256:71:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15379:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15392:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15403:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15388:3:26"},"nodeType":"YulFunctionCall","src":"15388:18:26"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"15337:41:26"},"nodeType":"YulFunctionCall","src":"15337:70:26"},"nodeType":"YulExpressionStatement","src":"15337:70:26"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"15459:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15472:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15483:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15468:3:26"},"nodeType":"YulFunctionCall","src":"15468:18:26"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"15417:41:26"},"nodeType":"YulFunctionCall","src":"15417:70:26"},"nodeType":"YulExpressionStatement","src":"15417:70:26"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"15539:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15552:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15563:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15548:3:26"},"nodeType":"YulFunctionCall","src":"15548:18:26"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"15497:41:26"},"nodeType":"YulFunctionCall","src":"15497:70:26"},"nodeType":"YulExpressionStatement","src":"15497:70:26"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"15619:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15632:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15643:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15628:3:26"},"nodeType":"YulFunctionCall","src":"15628:19:26"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"15577:41:26"},"nodeType":"YulFunctionCall","src":"15577:71:26"},"nodeType":"YulExpressionStatement","src":"15577:71:26"}]},"name":"abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15149:9:26","type":""},{"name":"value4","nodeType":"YulTypedName","src":"15161:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"15169:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15177:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15185:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15193:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15204:4:26","type":""}],"src":"15007:648:26"},{"body":{"nodeType":"YulBlock","src":"15724:80:26","statements":[{"nodeType":"YulAssignment","src":"15734:22:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15749:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15743:5:26"},"nodeType":"YulFunctionCall","src":"15743:13:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"15734:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15792:5:26"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"15765:26:26"},"nodeType":"YulFunctionCall","src":"15765:33:26"},"nodeType":"YulExpressionStatement","src":"15765:33:26"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"15702:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"15710:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"15718:5:26","type":""}],"src":"15661:143:26"},{"body":{"nodeType":"YulBlock","src":"15887:274:26","statements":[{"body":{"nodeType":"YulBlock","src":"15933:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15935:77:26"},"nodeType":"YulFunctionCall","src":"15935:79:26"},"nodeType":"YulExpressionStatement","src":"15935:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15908:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"15917:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15904:3:26"},"nodeType":"YulFunctionCall","src":"15904:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"15929:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15900:3:26"},"nodeType":"YulFunctionCall","src":"15900:32:26"},"nodeType":"YulIf","src":"15897:119:26"},{"nodeType":"YulBlock","src":"16026:128:26","statements":[{"nodeType":"YulVariableDeclaration","src":"16041:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"16055:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16045:6:26","type":""}]},{"nodeType":"YulAssignment","src":"16070:74:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16116:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"16127:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16112:3:26"},"nodeType":"YulFunctionCall","src":"16112:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16136:7:26"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"16080:31:26"},"nodeType":"YulFunctionCall","src":"16080:64:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"16070:6:26"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15857:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15868:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15880:6:26","type":""}],"src":"15810:351:26"},{"body":{"nodeType":"YulBlock","src":"16195:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16212:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16215:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16205:6:26"},"nodeType":"YulFunctionCall","src":"16205:88:26"},"nodeType":"YulExpressionStatement","src":"16205:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16309:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"16312:4:26","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16302:6:26"},"nodeType":"YulFunctionCall","src":"16302:15:26"},"nodeType":"YulExpressionStatement","src":"16302:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16333:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16336:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16326:6:26"},"nodeType":"YulFunctionCall","src":"16326:15:26"},"nodeType":"YulExpressionStatement","src":"16326:15:26"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"16167:180:26"},{"body":{"nodeType":"YulBlock","src":"16396:190:26","statements":[{"nodeType":"YulAssignment","src":"16406:33:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16433:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16415:17:26"},"nodeType":"YulFunctionCall","src":"16415:24:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"16406:5:26"}]},{"body":{"nodeType":"YulBlock","src":"16529:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16531:16:26"},"nodeType":"YulFunctionCall","src":"16531:18:26"},"nodeType":"YulExpressionStatement","src":"16531:18:26"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16454:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"16461:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"16451:2:26"},"nodeType":"YulFunctionCall","src":"16451:77:26"},"nodeType":"YulIf","src":"16448:103:26"},{"nodeType":"YulAssignment","src":"16560:20:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16571:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"16578:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16567:3:26"},"nodeType":"YulFunctionCall","src":"16567:13:26"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"16560:3:26"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16382:5:26","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"16392:3:26","type":""}],"src":"16353:233:26"},{"body":{"nodeType":"YulBlock","src":"16636:61:26","statements":[{"nodeType":"YulAssignment","src":"16646:45:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16661:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"16668:22:26","type":"","value":"0xffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16657:3:26"},"nodeType":"YulFunctionCall","src":"16657:34:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"16646:7:26"}]}]},"name":"cleanup_t_uint80","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16618:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"16628:7:26","type":""}],"src":"16592:105:26"},{"body":{"nodeType":"YulBlock","src":"16745:78:26","statements":[{"body":{"nodeType":"YulBlock","src":"16801:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16810:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16813:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16803:6:26"},"nodeType":"YulFunctionCall","src":"16803:12:26"},"nodeType":"YulExpressionStatement","src":"16803:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16768:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16792:5:26"}],"functionName":{"name":"cleanup_t_uint80","nodeType":"YulIdentifier","src":"16775:16:26"},"nodeType":"YulFunctionCall","src":"16775:23:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"16765:2:26"},"nodeType":"YulFunctionCall","src":"16765:34:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16758:6:26"},"nodeType":"YulFunctionCall","src":"16758:42:26"},"nodeType":"YulIf","src":"16755:62:26"}]},"name":"validator_revert_t_uint80","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16738:5:26","type":""}],"src":"16703:120:26"},{"body":{"nodeType":"YulBlock","src":"16891:79:26","statements":[{"nodeType":"YulAssignment","src":"16901:22:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"16916:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16910:5:26"},"nodeType":"YulFunctionCall","src":"16910:13:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"16901:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16958:5:26"}],"functionName":{"name":"validator_revert_t_uint80","nodeType":"YulIdentifier","src":"16932:25:26"},"nodeType":"YulFunctionCall","src":"16932:32:26"},"nodeType":"YulExpressionStatement","src":"16932:32:26"}]},"name":"abi_decode_t_uint80_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"16869:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"16877:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"16885:5:26","type":""}],"src":"16829:141:26"},{"body":{"nodeType":"YulBlock","src":"17018:78:26","statements":[{"body":{"nodeType":"YulBlock","src":"17074:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17083:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17086:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17076:6:26"},"nodeType":"YulFunctionCall","src":"17076:12:26"},"nodeType":"YulExpressionStatement","src":"17076:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17041:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17065:5:26"}],"functionName":{"name":"cleanup_t_int256","nodeType":"YulIdentifier","src":"17048:16:26"},"nodeType":"YulFunctionCall","src":"17048:23:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"17038:2:26"},"nodeType":"YulFunctionCall","src":"17038:34:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17031:6:26"},"nodeType":"YulFunctionCall","src":"17031:42:26"},"nodeType":"YulIf","src":"17028:62:26"}]},"name":"validator_revert_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17011:5:26","type":""}],"src":"16976:120:26"},{"body":{"nodeType":"YulBlock","src":"17164:79:26","statements":[{"nodeType":"YulAssignment","src":"17174:22:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"17189:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17183:5:26"},"nodeType":"YulFunctionCall","src":"17183:13:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"17174:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17231:5:26"}],"functionName":{"name":"validator_revert_t_int256","nodeType":"YulIdentifier","src":"17205:25:26"},"nodeType":"YulFunctionCall","src":"17205:32:26"},"nodeType":"YulExpressionStatement","src":"17205:32:26"}]},"name":"abi_decode_t_int256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"17142:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"17150:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"17158:5:26","type":""}],"src":"17102:141:26"},{"body":{"nodeType":"YulBlock","src":"17391:829:26","statements":[{"body":{"nodeType":"YulBlock","src":"17438:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"17440:77:26"},"nodeType":"YulFunctionCall","src":"17440:79:26"},"nodeType":"YulExpressionStatement","src":"17440:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"17412:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"17421:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17408:3:26"},"nodeType":"YulFunctionCall","src":"17408:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"17433:3:26","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"17404:3:26"},"nodeType":"YulFunctionCall","src":"17404:33:26"},"nodeType":"YulIf","src":"17401:120:26"},{"nodeType":"YulBlock","src":"17531:127:26","statements":[{"nodeType":"YulVariableDeclaration","src":"17546:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"17560:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17550:6:26","type":""}]},{"nodeType":"YulAssignment","src":"17575:73:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17620:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"17631:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17616:3:26"},"nodeType":"YulFunctionCall","src":"17616:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17640:7:26"}],"functionName":{"name":"abi_decode_t_uint80_fromMemory","nodeType":"YulIdentifier","src":"17585:30:26"},"nodeType":"YulFunctionCall","src":"17585:63:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"17575:6:26"}]}]},{"nodeType":"YulBlock","src":"17668:128:26","statements":[{"nodeType":"YulVariableDeclaration","src":"17683:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"17697:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17687:6:26","type":""}]},{"nodeType":"YulAssignment","src":"17713:73:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17758:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"17769:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17754:3:26"},"nodeType":"YulFunctionCall","src":"17754:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17778:7:26"}],"functionName":{"name":"abi_decode_t_int256_fromMemory","nodeType":"YulIdentifier","src":"17723:30:26"},"nodeType":"YulFunctionCall","src":"17723:63:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"17713:6:26"}]}]},{"nodeType":"YulBlock","src":"17806:129:26","statements":[{"nodeType":"YulVariableDeclaration","src":"17821:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"17835:2:26","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17825:6:26","type":""}]},{"nodeType":"YulAssignment","src":"17851:74:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17897:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"17908:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17893:3:26"},"nodeType":"YulFunctionCall","src":"17893:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17917:7:26"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"17861:31:26"},"nodeType":"YulFunctionCall","src":"17861:64:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"17851:6:26"}]}]},{"nodeType":"YulBlock","src":"17945:129:26","statements":[{"nodeType":"YulVariableDeclaration","src":"17960:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"17974:2:26","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17964:6:26","type":""}]},{"nodeType":"YulAssignment","src":"17990:74:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18036:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"18047:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18032:3:26"},"nodeType":"YulFunctionCall","src":"18032:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18056:7:26"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"18000:31:26"},"nodeType":"YulFunctionCall","src":"18000:64:26"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"17990:6:26"}]}]},{"nodeType":"YulBlock","src":"18084:129:26","statements":[{"nodeType":"YulVariableDeclaration","src":"18099:17:26","value":{"kind":"number","nodeType":"YulLiteral","src":"18113:3:26","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18103:6:26","type":""}]},{"nodeType":"YulAssignment","src":"18130:73:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18175:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"18186:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18171:3:26"},"nodeType":"YulFunctionCall","src":"18171:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18195:7:26"}],"functionName":{"name":"abi_decode_t_uint80_fromMemory","nodeType":"YulIdentifier","src":"18140:30:26"},"nodeType":"YulFunctionCall","src":"18140:63:26"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"18130:6:26"}]}]}]},"name":"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17329:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"17340:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"17352:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17360:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17368:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"17376:6:26","type":""},{"name":"value4","nodeType":"YulTypedName","src":"17384:6:26","type":""}],"src":"17249:971:26"},{"body":{"nodeType":"YulBlock","src":"18267:77:26","statements":[{"body":{"nodeType":"YulBlock","src":"18322:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18331:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18334:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18324:6:26"},"nodeType":"YulFunctionCall","src":"18324:12:26"},"nodeType":"YulExpressionStatement","src":"18324:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18290:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18313:5:26"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"18297:15:26"},"nodeType":"YulFunctionCall","src":"18297:22:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"18287:2:26"},"nodeType":"YulFunctionCall","src":"18287:33:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18280:6:26"},"nodeType":"YulFunctionCall","src":"18280:41:26"},"nodeType":"YulIf","src":"18277:61:26"}]},"name":"validator_revert_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18260:5:26","type":""}],"src":"18226:118:26"},{"body":{"nodeType":"YulBlock","src":"18411:78:26","statements":[{"nodeType":"YulAssignment","src":"18421:22:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18436:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18430:5:26"},"nodeType":"YulFunctionCall","src":"18430:13:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"18421:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18477:5:26"}],"functionName":{"name":"validator_revert_t_uint8","nodeType":"YulIdentifier","src":"18452:24:26"},"nodeType":"YulFunctionCall","src":"18452:31:26"},"nodeType":"YulExpressionStatement","src":"18452:31:26"}]},"name":"abi_decode_t_uint8_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"18389:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"18397:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"18405:5:26","type":""}],"src":"18350:139:26"},{"body":{"nodeType":"YulBlock","src":"18570:272:26","statements":[{"body":{"nodeType":"YulBlock","src":"18616:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"18618:77:26"},"nodeType":"YulFunctionCall","src":"18618:79:26"},"nodeType":"YulExpressionStatement","src":"18618:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"18591:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"18600:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18587:3:26"},"nodeType":"YulFunctionCall","src":"18587:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"18612:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"18583:3:26"},"nodeType":"YulFunctionCall","src":"18583:32:26"},"nodeType":"YulIf","src":"18580:119:26"},{"nodeType":"YulBlock","src":"18709:126:26","statements":[{"nodeType":"YulVariableDeclaration","src":"18724:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"18738:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18728:6:26","type":""}]},{"nodeType":"YulAssignment","src":"18753:72:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18797:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"18808:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18793:3:26"},"nodeType":"YulFunctionCall","src":"18793:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18817:7:26"}],"functionName":{"name":"abi_decode_t_uint8_fromMemory","nodeType":"YulIdentifier","src":"18763:29:26"},"nodeType":"YulFunctionCall","src":"18763:62:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"18753:6:26"}]}]}]},"name":"abi_decode_tuple_t_uint8_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18540:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"18551:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"18563:6:26","type":""}],"src":"18495:347:26"},{"body":{"nodeType":"YulBlock","src":"18954:68:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18976:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"18984:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18972:3:26"},"nodeType":"YulFunctionCall","src":"18972:14:26"},{"hexValue":"5269736b20746f6f20686967682028617070726f76616c29","kind":"string","nodeType":"YulLiteral","src":"18988:26:26","type":"","value":"Risk too high (approval)"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18965:6:26"},"nodeType":"YulFunctionCall","src":"18965:50:26"},"nodeType":"YulExpressionStatement","src":"18965:50:26"}]},"name":"store_literal_in_memory_d0d9a03f66fcd64e921be555242143db26e2859927adcfc5f843c5b20f551002","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18946:6:26","type":""}],"src":"18848:174:26"},{"body":{"nodeType":"YulBlock","src":"19174:220:26","statements":[{"nodeType":"YulAssignment","src":"19184:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19250:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"19255:2:26","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19191:58:26"},"nodeType":"YulFunctionCall","src":"19191:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19184:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19356:3:26"}],"functionName":{"name":"store_literal_in_memory_d0d9a03f66fcd64e921be555242143db26e2859927adcfc5f843c5b20f551002","nodeType":"YulIdentifier","src":"19267:88:26"},"nodeType":"YulFunctionCall","src":"19267:93:26"},"nodeType":"YulExpressionStatement","src":"19267:93:26"},{"nodeType":"YulAssignment","src":"19369:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19380:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"19385:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19376:3:26"},"nodeType":"YulFunctionCall","src":"19376:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19369:3:26"}]}]},"name":"abi_encode_t_stringliteral_d0d9a03f66fcd64e921be555242143db26e2859927adcfc5f843c5b20f551002_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19162:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19170:3:26","type":""}],"src":"19028:366:26"},{"body":{"nodeType":"YulBlock","src":"19571:248:26","statements":[{"nodeType":"YulAssignment","src":"19581:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19593:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"19604:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19589:3:26"},"nodeType":"YulFunctionCall","src":"19589:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19581:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19628:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"19639:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19624:3:26"},"nodeType":"YulFunctionCall","src":"19624:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19647:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"19653:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19643:3:26"},"nodeType":"YulFunctionCall","src":"19643:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19617:6:26"},"nodeType":"YulFunctionCall","src":"19617:47:26"},"nodeType":"YulExpressionStatement","src":"19617:47:26"},{"nodeType":"YulAssignment","src":"19673:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19807:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_d0d9a03f66fcd64e921be555242143db26e2859927adcfc5f843c5b20f551002_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19681:124:26"},"nodeType":"YulFunctionCall","src":"19681:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19673:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_d0d9a03f66fcd64e921be555242143db26e2859927adcfc5f843c5b20f551002__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19551:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19566:4:26","type":""}],"src":"19400:419:26"},{"body":{"nodeType":"YulBlock","src":"19979:288:26","statements":[{"nodeType":"YulAssignment","src":"19989:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20001:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"20012:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19997:3:26"},"nodeType":"YulFunctionCall","src":"19997:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19989:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20069:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20082:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"20093:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20078:3:26"},"nodeType":"YulFunctionCall","src":"20078:17:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"20025:43:26"},"nodeType":"YulFunctionCall","src":"20025:71:26"},"nodeType":"YulExpressionStatement","src":"20025:71:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"20150:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20163:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"20174:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20159:3:26"},"nodeType":"YulFunctionCall","src":"20159:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"20106:43:26"},"nodeType":"YulFunctionCall","src":"20106:72:26"},"nodeType":"YulExpressionStatement","src":"20106:72:26"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"20232:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20245:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"20256:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20241:3:26"},"nodeType":"YulFunctionCall","src":"20241:18:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"20188:43:26"},"nodeType":"YulFunctionCall","src":"20188:72:26"},"nodeType":"YulExpressionStatement","src":"20188:72:26"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19935:9:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"19947:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19955:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19963:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19974:4:26","type":""}],"src":"19825:442:26"},{"body":{"nodeType":"YulBlock","src":"20379:58:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20401:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"20409:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20397:3:26"},"nodeType":"YulFunctionCall","src":"20397:14:26"},{"hexValue":"416c726561647920726570616964","kind":"string","nodeType":"YulLiteral","src":"20413:16:26","type":"","value":"Already repaid"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20390:6:26"},"nodeType":"YulFunctionCall","src":"20390:40:26"},"nodeType":"YulExpressionStatement","src":"20390:40:26"}]},"name":"store_literal_in_memory_b5ece5ace778fd61eeacf62354aa9f048d40c4d9fb74a45da09354f6d9859b46","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20371:6:26","type":""}],"src":"20273:164:26"},{"body":{"nodeType":"YulBlock","src":"20589:220:26","statements":[{"nodeType":"YulAssignment","src":"20599:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20665:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"20670:2:26","type":"","value":"14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20606:58:26"},"nodeType":"YulFunctionCall","src":"20606:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20599:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20771:3:26"}],"functionName":{"name":"store_literal_in_memory_b5ece5ace778fd61eeacf62354aa9f048d40c4d9fb74a45da09354f6d9859b46","nodeType":"YulIdentifier","src":"20682:88:26"},"nodeType":"YulFunctionCall","src":"20682:93:26"},"nodeType":"YulExpressionStatement","src":"20682:93:26"},{"nodeType":"YulAssignment","src":"20784:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20795:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"20800:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20791:3:26"},"nodeType":"YulFunctionCall","src":"20791:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20784:3:26"}]}]},"name":"abi_encode_t_stringliteral_b5ece5ace778fd61eeacf62354aa9f048d40c4d9fb74a45da09354f6d9859b46_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20577:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20585:3:26","type":""}],"src":"20443:366:26"},{"body":{"nodeType":"YulBlock","src":"20986:248:26","statements":[{"nodeType":"YulAssignment","src":"20996:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21008:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"21019:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21004:3:26"},"nodeType":"YulFunctionCall","src":"21004:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20996:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21043:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"21054:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21039:3:26"},"nodeType":"YulFunctionCall","src":"21039:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21062:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"21068:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21058:3:26"},"nodeType":"YulFunctionCall","src":"21058:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21032:6:26"},"nodeType":"YulFunctionCall","src":"21032:47:26"},"nodeType":"YulExpressionStatement","src":"21032:47:26"},{"nodeType":"YulAssignment","src":"21088:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21222:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_b5ece5ace778fd61eeacf62354aa9f048d40c4d9fb74a45da09354f6d9859b46_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21096:124:26"},"nodeType":"YulFunctionCall","src":"21096:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21088:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_b5ece5ace778fd61eeacf62354aa9f048d40c4d9fb74a45da09354f6d9859b46__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20966:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20981:4:26","type":""}],"src":"20815:419:26"},{"body":{"nodeType":"YulBlock","src":"21346:59:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21368:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"21376:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21364:3:26"},"nodeType":"YulFunctionCall","src":"21364:14:26"},{"hexValue":"4f6e6c792043434950526f75746572","kind":"string","nodeType":"YulLiteral","src":"21380:17:26","type":"","value":"Only CCIPRouter"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21357:6:26"},"nodeType":"YulFunctionCall","src":"21357:41:26"},"nodeType":"YulExpressionStatement","src":"21357:41:26"}]},"name":"store_literal_in_memory_d8dc70e524995adb65000818b14e79969a346971ba3f7168cde2ef6ebc093ee6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21338:6:26","type":""}],"src":"21240:165:26"},{"body":{"nodeType":"YulBlock","src":"21557:220:26","statements":[{"nodeType":"YulAssignment","src":"21567:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21633:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"21638:2:26","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21574:58:26"},"nodeType":"YulFunctionCall","src":"21574:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21567:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21739:3:26"}],"functionName":{"name":"store_literal_in_memory_d8dc70e524995adb65000818b14e79969a346971ba3f7168cde2ef6ebc093ee6","nodeType":"YulIdentifier","src":"21650:88:26"},"nodeType":"YulFunctionCall","src":"21650:93:26"},"nodeType":"YulExpressionStatement","src":"21650:93:26"},{"nodeType":"YulAssignment","src":"21752:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21763:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"21768:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21759:3:26"},"nodeType":"YulFunctionCall","src":"21759:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21752:3:26"}]}]},"name":"abi_encode_t_stringliteral_d8dc70e524995adb65000818b14e79969a346971ba3f7168cde2ef6ebc093ee6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21545:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21553:3:26","type":""}],"src":"21411:366:26"},{"body":{"nodeType":"YulBlock","src":"21954:248:26","statements":[{"nodeType":"YulAssignment","src":"21964:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21976:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"21987:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21972:3:26"},"nodeType":"YulFunctionCall","src":"21972:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21964:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22011:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"22022:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22007:3:26"},"nodeType":"YulFunctionCall","src":"22007:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22030:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"22036:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22026:3:26"},"nodeType":"YulFunctionCall","src":"22026:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22000:6:26"},"nodeType":"YulFunctionCall","src":"22000:47:26"},"nodeType":"YulExpressionStatement","src":"22000:47:26"},{"nodeType":"YulAssignment","src":"22056:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22190:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_d8dc70e524995adb65000818b14e79969a346971ba3f7168cde2ef6ebc093ee6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22064:124:26"},"nodeType":"YulFunctionCall","src":"22064:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22056:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_d8dc70e524995adb65000818b14e79969a346971ba3f7168cde2ef6ebc093ee6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21934:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21949:4:26","type":""}],"src":"21783:419:26"},{"body":{"nodeType":"YulBlock","src":"22236:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22253:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22256:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22246:6:26"},"nodeType":"YulFunctionCall","src":"22246:88:26"},"nodeType":"YulExpressionStatement","src":"22246:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22350:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"22353:4:26","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22343:6:26"},"nodeType":"YulFunctionCall","src":"22343:15:26"},"nodeType":"YulExpressionStatement","src":"22343:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22374:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22377:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22367:6:26"},"nodeType":"YulFunctionCall","src":"22367:15:26"},"nodeType":"YulExpressionStatement","src":"22367:15:26"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"22208:180:26"},{"body":{"nodeType":"YulBlock","src":"22422:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22439:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22442:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22432:6:26"},"nodeType":"YulFunctionCall","src":"22432:88:26"},"nodeType":"YulExpressionStatement","src":"22432:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22536:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"22539:4:26","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22529:6:26"},"nodeType":"YulFunctionCall","src":"22529:15:26"},"nodeType":"YulExpressionStatement","src":"22529:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22560:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22563:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22553:6:26"},"nodeType":"YulFunctionCall","src":"22553:15:26"},"nodeType":"YulExpressionStatement","src":"22553:15:26"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"22394:180:26"},{"body":{"nodeType":"YulBlock","src":"22614:142:26","statements":[{"nodeType":"YulAssignment","src":"22624:25:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22647:1:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"22629:17:26"},"nodeType":"YulFunctionCall","src":"22629:20:26"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"22624:1:26"}]},{"nodeType":"YulAssignment","src":"22658:25:26","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"22681:1:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"22663:17:26"},"nodeType":"YulFunctionCall","src":"22663:20:26"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"22658:1:26"}]},{"body":{"nodeType":"YulBlock","src":"22705:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"22707:16:26"},"nodeType":"YulFunctionCall","src":"22707:18:26"},"nodeType":"YulExpressionStatement","src":"22707:18:26"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"22702:1:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22695:6:26"},"nodeType":"YulFunctionCall","src":"22695:9:26"},"nodeType":"YulIf","src":"22692:35:26"},{"nodeType":"YulAssignment","src":"22736:14:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22745:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"22748:1:26"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"22741:3:26"},"nodeType":"YulFunctionCall","src":"22741:9:26"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"22736:1:26"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"22603:1:26","type":""},{"name":"y","nodeType":"YulTypedName","src":"22606:1:26","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"22612:1:26","type":""}],"src":"22580:176:26"},{"body":{"nodeType":"YulBlock","src":"22868:57:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22890:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"22898:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22886:3:26"},"nodeType":"YulFunctionCall","src":"22886:14:26"},{"hexValue":"5269736b20746f6f2068696768","kind":"string","nodeType":"YulLiteral","src":"22902:15:26","type":"","value":"Risk too high"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22879:6:26"},"nodeType":"YulFunctionCall","src":"22879:39:26"},"nodeType":"YulExpressionStatement","src":"22879:39:26"}]},"name":"store_literal_in_memory_ad33effebb8ebd668b493fd4633c03f9cbc09e33c64bafab92287921327885a7","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22860:6:26","type":""}],"src":"22762:163:26"},{"body":{"nodeType":"YulBlock","src":"23077:220:26","statements":[{"nodeType":"YulAssignment","src":"23087:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23153:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"23158:2:26","type":"","value":"13"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23094:58:26"},"nodeType":"YulFunctionCall","src":"23094:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23087:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23259:3:26"}],"functionName":{"name":"store_literal_in_memory_ad33effebb8ebd668b493fd4633c03f9cbc09e33c64bafab92287921327885a7","nodeType":"YulIdentifier","src":"23170:88:26"},"nodeType":"YulFunctionCall","src":"23170:93:26"},"nodeType":"YulExpressionStatement","src":"23170:93:26"},{"nodeType":"YulAssignment","src":"23272:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23283:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"23288:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23279:3:26"},"nodeType":"YulFunctionCall","src":"23279:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23272:3:26"}]}]},"name":"abi_encode_t_stringliteral_ad33effebb8ebd668b493fd4633c03f9cbc09e33c64bafab92287921327885a7_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23065:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23073:3:26","type":""}],"src":"22931:366:26"},{"body":{"nodeType":"YulBlock","src":"23474:248:26","statements":[{"nodeType":"YulAssignment","src":"23484:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23496:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"23507:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23492:3:26"},"nodeType":"YulFunctionCall","src":"23492:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23484:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23531:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"23542:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23527:3:26"},"nodeType":"YulFunctionCall","src":"23527:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23550:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"23556:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23546:3:26"},"nodeType":"YulFunctionCall","src":"23546:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23520:6:26"},"nodeType":"YulFunctionCall","src":"23520:47:26"},"nodeType":"YulExpressionStatement","src":"23520:47:26"},{"nodeType":"YulAssignment","src":"23576:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23710:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_ad33effebb8ebd668b493fd4633c03f9cbc09e33c64bafab92287921327885a7_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23584:124:26"},"nodeType":"YulFunctionCall","src":"23584:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23576:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_ad33effebb8ebd668b493fd4633c03f9cbc09e33c64bafab92287921327885a7__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23454:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23469:4:26","type":""}],"src":"23303:419:26"},{"body":{"nodeType":"YulBlock","src":"23906:367:26","statements":[{"nodeType":"YulAssignment","src":"23916:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23928:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"23939:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23924:3:26"},"nodeType":"YulFunctionCall","src":"23924:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23916:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23997:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24010:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"24021:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24006:3:26"},"nodeType":"YulFunctionCall","src":"24006:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"23953:43:26"},"nodeType":"YulFunctionCall","src":"23953:71:26"},"nodeType":"YulExpressionStatement","src":"23953:71:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"24078:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24091:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"24102:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24087:3:26"},"nodeType":"YulFunctionCall","src":"24087:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"24034:43:26"},"nodeType":"YulFunctionCall","src":"24034:72:26"},"nodeType":"YulExpressionStatement","src":"24034:72:26"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"24160:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24173:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"24184:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24169:3:26"},"nodeType":"YulFunctionCall","src":"24169:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"24116:43:26"},"nodeType":"YulFunctionCall","src":"24116:72:26"},"nodeType":"YulExpressionStatement","src":"24116:72:26"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"24238:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24251:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"24262:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24247:3:26"},"nodeType":"YulFunctionCall","src":"24247:18:26"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"24198:39:26"},"nodeType":"YulFunctionCall","src":"24198:68:26"},"nodeType":"YulExpressionStatement","src":"24198:68:26"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint8__to_t_address_t_uint256_t_uint256_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23854:9:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"23866:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"23874:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23882:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23890:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23901:4:26","type":""}],"src":"23728:545:26"}]},"contents":"{\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IAIRiskManager_$7051_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IAIRiskManager_$7051_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IAIRiskManager_$7051_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IAIRiskManager_$7051__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IAIRiskManager_$7051_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_bool_t_uint8__to_t_address_t_uint256_t_bool_t_uint8__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    // string\n    function abi_decode_t_string_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_string_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_be8e7ee5a75ce3580b3501c720c961ee27e48f0f306b9d3dc09407368147858b(memPtr) {\n\n        mstore(add(memPtr, 0), \"No loans exist\")\n\n    }\n\n    function abi_encode_t_stringliteral_be8e7ee5a75ce3580b3501c720c961ee27e48f0f306b9d3dc09407368147858b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_be8e7ee5a75ce3580b3501c720c961ee27e48f0f306b9d3dc09407368147858b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_be8e7ee5a75ce3580b3501c720c961ee27e48f0f306b9d3dc09407368147858b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_be8e7ee5a75ce3580b3501c720c961ee27e48f0f306b9d3dc09407368147858b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_d0d9a03f66fcd64e921be555242143db26e2859927adcfc5f843c5b20f551002(memPtr) {\n\n        mstore(add(memPtr, 0), \"Risk too high (approval)\")\n\n    }\n\n    function abi_encode_t_stringliteral_d0d9a03f66fcd64e921be555242143db26e2859927adcfc5f843c5b20f551002_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_d0d9a03f66fcd64e921be555242143db26e2859927adcfc5f843c5b20f551002(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d0d9a03f66fcd64e921be555242143db26e2859927adcfc5f843c5b20f551002__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d0d9a03f66fcd64e921be555242143db26e2859927adcfc5f843c5b20f551002_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_b5ece5ace778fd61eeacf62354aa9f048d40c4d9fb74a45da09354f6d9859b46(memPtr) {\n\n        mstore(add(memPtr, 0), \"Already repaid\")\n\n    }\n\n    function abi_encode_t_stringliteral_b5ece5ace778fd61eeacf62354aa9f048d40c4d9fb74a45da09354f6d9859b46_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_b5ece5ace778fd61eeacf62354aa9f048d40c4d9fb74a45da09354f6d9859b46(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b5ece5ace778fd61eeacf62354aa9f048d40c4d9fb74a45da09354f6d9859b46__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b5ece5ace778fd61eeacf62354aa9f048d40c4d9fb74a45da09354f6d9859b46_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d8dc70e524995adb65000818b14e79969a346971ba3f7168cde2ef6ebc093ee6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only CCIPRouter\")\n\n    }\n\n    function abi_encode_t_stringliteral_d8dc70e524995adb65000818b14e79969a346971ba3f7168cde2ef6ebc093ee6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_d8dc70e524995adb65000818b14e79969a346971ba3f7168cde2ef6ebc093ee6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d8dc70e524995adb65000818b14e79969a346971ba3f7168cde2ef6ebc093ee6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d8dc70e524995adb65000818b14e79969a346971ba3f7168cde2ef6ebc093ee6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function store_literal_in_memory_ad33effebb8ebd668b493fd4633c03f9cbc09e33c64bafab92287921327885a7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Risk too high\")\n\n    }\n\n    function abi_encode_t_stringliteral_ad33effebb8ebd668b493fd4633c03f9cbc09e33c64bafab92287921327885a7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_ad33effebb8ebd668b493fd4633c03f9cbc09e33c64bafab92287921327885a7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ad33effebb8ebd668b493fd4633c03f9cbc09e33c64bafab92287921327885a7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ad33effebb8ebd668b493fd4633c03f9cbc09e33c64bafab92287921327885a7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint8__to_t_address_t_uint256_t_uint256_t_uint8__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value3,  add(headStart, 96))\n\n    }\n\n}\n","id":26,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"124":[{"length":32,"start":908},{"length":32,"start":992}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101165760003560e01c80636e04ff0d116100a2578063b0fb162f11610071578063b0fb162f1461029a578063c95669a5146102b8578063ccdd9f5d146102d6578063e1ec3c68146102f2578063e86490e21461032557610116565b80636e04ff0d14610211578063777e0d86146102425780637ccfd7fc1461026057806386fcdc191461027e57610116565b806324f74697116100e957806324f74697146101915780632bdf0038146101af5780634585e33b146101b957806347842663146101d557806361728f39146101f357610116565b806309c1ba2e1461011b5780630de22984146101395780631753bbd7146101575780631fe543e314610175575b600080fd5b610123610341565b6040516101309190610ddd565b60405180910390f35b61014161035b565b60405161014e9190610e39565b60405180910390f35b61015f610381565b60405161016c9190610e6f565b60405180910390f35b61018f600480360381019061018a919061102d565b61038a565b005b61019961044a565b6040516101a691906110a8565b60405180910390f35b6101b7610460565b005b6101d360048036038101906101ce919061111e565b61059a565b005b6101dd6105bb565b6040516101ea91906111ca565b60405180910390f35b6101fb6105e1565b60405161020891906111fe565b60405180910390f35b61022b6004803603810190610226919061111e565b6105e7565b604051610239929190611298565b60405180910390f35b61024a610746565b60405161025791906112e1565b60405180910390f35b6102686107e5565b60405161027591906110a8565b60405180910390f35b610298600480360381019061029391906112fc565b6107fb565b005b6102a261092b565b6040516102af9190611359565b60405180910390f35b6102c061093f565b6040516102cd9190611383565b60405180910390f35b6102f060048036038101906102eb919061139e565b610945565b005b61030c6004803603810190610307919061139e565b610a12565b60405161031c94939291906113e7565b60405180910390f35b61033f600480360381019061033a9190611482565b610a7c565b005b600560009054906101000a900467ffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006001905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461043c57337f00000000000000000000000000000000000000000000000000000000000000006040517f1cf993f40000000000000000000000000000000000000000000000000000000081526004016104339291906114cf565b60405180910390fd5b6104468282610b10565b5050565b600560089054906101000a900463ffffffff1681565b6000600754116104a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049c90611555565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635d3b1d30600454600560009054906101000a900467ffffffffffffffff166005600c9054906101000a900461ffff16600560089054906101000a900463ffffffff166005600e9054906101000a900463ffffffff166040518663ffffffff1660e01b8152600401610554959493929190611575565b6020604051808303816000875af1158015610573573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059791906115dd565b50565b600082828101906105ab919061139e565b90506105b681610945565b505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b6000606060005b600754811015610727576006600082815260200190815260200160002060020160009054906101000a900460ff161580156106e357506106e2600660008381526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820160009054906101000a900460ff161515151581526020016002820160019054906101000a900460ff1660ff1660ff1681525050610b79565b5b15610714576001816040516020016106fb9190611383565b604051602081830303815290604052925092505061073f565b808061071f90611639565b9150506105ee565b50600060405180602001604052806000815250915091505b9250929050565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156107b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d891906116ef565b5050509150508091505090565b6005600e9054906101000a900463ffffffff1681565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dc08706d336040518263ffffffff1660e01b81526004016108589190610e39565b602060405180830381865afa158015610875573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108999190611796565b905060028160ff1610156108e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d99061180f565b60405180910390fd5b6108eb82610b91565b7f3c227ef12195f88b4263ee086a2732948a4e23244a4277294b8c9b177d56aa5b83833360405161091e9392919061182f565b60405180910390a1505050565b6005600c9054906101000a900461ffff1681565b60075481565b6006600082815260200190815260200160002060020160009054906101000a900460ff16156109a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a0906118b2565b60405180910390fd5b60016006600083815260200190815260200160002060020160006101000a81548160ff0219169083151502179055507faf91ffe368225045d42f7c2b4b90feb438133ac1e375e73bc9066652b70a1d7781604051610a079190611383565b60405180910390a150565b60066020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020160009054906101000a900460ff16908060020160019054906101000a900460ff16905084565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b0c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b039061191e565b60405180910390fd5b5050565b600060075482600081518110610b2957610b2861193e565b5b6020026020010151610b3b919061199c565b90507fb46fced3a6df62223b1457dd73f5a2b175fcaa90e8b757f5ef3dcb74d679464581604051610b6c9190611383565b60405180910390a1505050565b6000670de0b6b3a76400008260200151119050919050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dc08706d336040518263ffffffff1660e01b8152600401610bee9190610e39565b602060405180830381865afa158015610c0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2f9190611796565b905060028160ff161015610c78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6f90611a19565b60405180910390fd5b60405180608001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018381526020016000151581526020018260ff1681525060066000600754815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020160006101000a81548160ff02191690831515021790555060608201518160020160016101000a81548160ff021916908360ff1602179055509050507f2a2a0e30be66d7708fcc027c3528f84a6e08918887209091c74bec2387cb0c2e338360075484604051610d969493929190611a39565b60405180910390a160076000815480929190610db190611639565b91905055505050565b600067ffffffffffffffff82169050919050565b610dd781610dba565b82525050565b6000602082019050610df26000830184610dce565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e2382610df8565b9050919050565b610e3381610e18565b82525050565b6000602082019050610e4e6000830184610e2a565b92915050565b60008115159050919050565b610e6981610e54565b82525050565b6000602082019050610e846000830184610e60565b92915050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610eb181610e9e565b8114610ebc57600080fd5b50565b600081359050610ece81610ea8565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610f2282610ed9565b810181811067ffffffffffffffff82111715610f4157610f40610eea565b5b80604052505050565b6000610f54610e8a565b9050610f608282610f19565b919050565b600067ffffffffffffffff821115610f8057610f7f610eea565b5b602082029050602081019050919050565b600080fd5b6000610fa9610fa484610f65565b610f4a565b90508083825260208201905060208402830185811115610fcc57610fcb610f91565b5b835b81811015610ff55780610fe18882610ebf565b845260208401935050602081019050610fce565b5050509392505050565b600082601f83011261101457611013610ed4565b5b8135611024848260208601610f96565b91505092915050565b6000806040838503121561104457611043610e94565b5b600061105285828601610ebf565b925050602083013567ffffffffffffffff81111561107357611072610e99565b5b61107f85828601610fff565b9150509250929050565b600063ffffffff82169050919050565b6110a281611089565b82525050565b60006020820190506110bd6000830184611099565b92915050565b600080fd5b60008083601f8401126110de576110dd610ed4565b5b8235905067ffffffffffffffff8111156110fb576110fa6110c3565b5b60208301915083600182028301111561111757611116610f91565b5b9250929050565b6000806020838503121561113557611134610e94565b5b600083013567ffffffffffffffff81111561115357611152610e99565b5b61115f858286016110c8565b92509250509250929050565b6000819050919050565b600061119061118b61118684610df8565b61116b565b610df8565b9050919050565b60006111a282611175565b9050919050565b60006111b482611197565b9050919050565b6111c4816111a9565b82525050565b60006020820190506111df60008301846111bb565b92915050565b6000819050919050565b6111f8816111e5565b82525050565b600060208201905061121360008301846111ef565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611253578082015181840152602081019050611238565b60008484015250505050565b600061126a82611219565b6112748185611224565b9350611284818560208601611235565b61128d81610ed9565b840191505092915050565b60006040820190506112ad6000830185610e60565b81810360208301526112bf818461125f565b90509392505050565b6000819050919050565b6112db816112c8565b82525050565b60006020820190506112f660008301846112d2565b92915050565b6000806040838503121561131357611312610e94565b5b600061132185828601610ebf565b925050602061133285828601610ebf565b9150509250929050565b600061ffff82169050919050565b6113538161133c565b82525050565b600060208201905061136e600083018461134a565b92915050565b61137d81610e9e565b82525050565b60006020820190506113986000830184611374565b92915050565b6000602082840312156113b4576113b3610e94565b5b60006113c284828501610ebf565b91505092915050565b600060ff82169050919050565b6113e1816113cb565b82525050565b60006080820190506113fc6000830187610e2a565b6114096020830186611374565b6114166040830185610e60565b61142360608301846113d8565b95945050505050565b60008083601f84011261144257611441610ed4565b5b8235905067ffffffffffffffff81111561145f5761145e6110c3565b5b60208301915083600182028301111561147b5761147a610f91565b5b9250929050565b6000806020838503121561149957611498610e94565b5b600083013567ffffffffffffffff8111156114b7576114b6610e99565b5b6114c38582860161142c565b92509250509250929050565b60006040820190506114e46000830185610e2a565b6114f16020830184610e2a565b9392505050565b600082825260208201905092915050565b7f4e6f206c6f616e73206578697374000000000000000000000000000000000000600082015250565b600061153f600e836114f8565b915061154a82611509565b602082019050919050565b6000602082019050818103600083015261156e81611532565b9050919050565b600060a08201905061158a60008301886111ef565b6115976020830187610dce565b6115a4604083018661134a565b6115b16060830185611099565b6115be6080830184611099565b9695505050505050565b6000815190506115d781610ea8565b92915050565b6000602082840312156115f3576115f2610e94565b5b6000611601848285016115c8565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061164482610e9e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036116765761167561160a565b5b600182019050919050565b600069ffffffffffffffffffff82169050919050565b6116a081611681565b81146116ab57600080fd5b50565b6000815190506116bd81611697565b92915050565b6116cc816112c8565b81146116d757600080fd5b50565b6000815190506116e9816116c3565b92915050565b600080600080600060a0868803121561170b5761170a610e94565b5b6000611719888289016116ae565b955050602061172a888289016116da565b945050604061173b888289016115c8565b935050606061174c888289016115c8565b925050608061175d888289016116ae565b9150509295509295909350565b611773816113cb565b811461177e57600080fd5b50565b6000815190506117908161176a565b92915050565b6000602082840312156117ac576117ab610e94565b5b60006117ba84828501611781565b91505092915050565b7f5269736b20746f6f20686967682028617070726f76616c290000000000000000600082015250565b60006117f96018836114f8565b9150611804826117c3565b602082019050919050565b60006020820190508181036000830152611828816117ec565b9050919050565b60006060820190506118446000830186611374565b6118516020830185611374565b61185e6040830184610e2a565b949350505050565b7f416c726561647920726570616964000000000000000000000000000000000000600082015250565b600061189c600e836114f8565b91506118a782611866565b602082019050919050565b600060208201905081810360008301526118cb8161188f565b9050919050565b7f4f6e6c792043434950526f757465720000000000000000000000000000000000600082015250565b6000611908600f836114f8565b9150611913826118d2565b602082019050919050565b60006020820190508181036000830152611937816118fb565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006119a782610e9e565b91506119b283610e9e565b9250826119c2576119c161196d565b5b828206905092915050565b7f5269736b20746f6f206869676800000000000000000000000000000000000000600082015250565b6000611a03600d836114f8565b9150611a0e826119cd565b602082019050919050565b60006020820190508181036000830152611a32816119f6565b9050919050565b6000608082019050611a4e6000830187610e2a565b611a5b6020830186611374565b611a686040830185611374565b611a7560608301846113d8565b9594505050505056fea26469706673582212208f56a2ae33e1f08bc9125984254b34f7f64e3e161c85b85b1cb7c7479418594d64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6E04FF0D GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xB0FB162F GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xB0FB162F EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0xC95669A5 EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0xCCDD9F5D EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0xE1EC3C68 EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0xE86490E2 EQ PUSH2 0x325 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x777E0D86 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x7CCFD7FC EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x86FCDC19 EQ PUSH2 0x27E JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x24F74697 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x24F74697 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x2BDF0038 EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x47842663 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x61728F39 EQ PUSH2 0x1F3 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x9C1BA2E EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0xDE22984 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x1753BBD7 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x175 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x123 PUSH2 0x341 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x130 SWAP2 SWAP1 PUSH2 0xDDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x141 PUSH2 0x35B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E SWAP2 SWAP1 PUSH2 0xE39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15F PUSH2 0x381 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0xE6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x102D JUMP JUMPDEST PUSH2 0x38A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x199 PUSH2 0x44A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x10A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B7 PUSH2 0x460 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0x111E JUMP JUMPDEST PUSH2 0x59A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DD PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x11CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FB PUSH2 0x5E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x11FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x111E JUMP JUMPDEST PUSH2 0x5E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x239 SWAP3 SWAP2 SWAP1 PUSH2 0x1298 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24A PUSH2 0x746 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x257 SWAP2 SWAP1 PUSH2 0x12E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x268 PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x275 SWAP2 SWAP1 PUSH2 0x10A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x298 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x293 SWAP2 SWAP1 PUSH2 0x12FC JUMP JUMPDEST PUSH2 0x7FB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A2 PUSH2 0x92B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x1359 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C0 PUSH2 0x93F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0x1383 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EB SWAP2 SWAP1 PUSH2 0x139E JUMP JUMPDEST PUSH2 0x945 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x307 SWAP2 SWAP1 PUSH2 0x139E JUMP JUMPDEST PUSH2 0xA12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x1482 JUMP JUMPDEST PUSH2 0xA7C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x43C JUMPI CALLER PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x1CF993F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x433 SWAP3 SWAP2 SWAP1 PUSH2 0x14CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x446 DUP3 DUP3 PUSH2 0xB10 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD GT PUSH2 0x4A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49C SWAP1 PUSH2 0x1555 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D3B1D30 PUSH1 0x4 SLOAD PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH1 0x5 PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x5 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x554 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1575 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x573 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x597 SWAP2 SWAP1 PUSH2 0x15DD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP2 ADD SWAP1 PUSH2 0x5AB SWAP2 SWAP1 PUSH2 0x139E JUMP JUMPDEST SWAP1 POP PUSH2 0x5B6 DUP2 PUSH2 0x945 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x727 JUMPI PUSH1 0x6 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x6E3 JUMPI POP PUSH2 0x6E2 PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE POP POP PUSH2 0xB79 JUMP JUMPDEST JUMPDEST ISZERO PUSH2 0x714 JUMPI PUSH1 0x1 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6FB SWAP2 SWAP1 PUSH2 0x1383 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP SWAP3 POP POP PUSH2 0x73F JUMP JUMPDEST DUP1 DUP1 PUSH2 0x71F SWAP1 PUSH2 0x1639 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5EE JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP2 POP SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7D8 SWAP2 SWAP1 PUSH2 0x16EF JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDC08706D CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x858 SWAP2 SWAP1 PUSH2 0xE39 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x875 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x899 SWAP2 SWAP1 PUSH2 0x1796 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x8E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D9 SWAP1 PUSH2 0x180F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8EB DUP3 PUSH2 0xB91 JUMP JUMPDEST PUSH32 0x3C227EF12195F88B4263EE086A2732948A4E23244A4277294B8C9B177D56AA5B DUP4 DUP4 CALLER PUSH1 0x40 MLOAD PUSH2 0x91E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x182F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x9A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A0 SWAP1 PUSH2 0x18B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xAF91FFE368225045D42F7C2B4B90FEB438133AC1E375E73BC9066652B70A1D77 DUP2 PUSH1 0x40 MLOAD PUSH2 0xA07 SWAP2 SWAP1 PUSH2 0x1383 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB0C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB03 SWAP1 PUSH2 0x191E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xB29 JUMPI PUSH2 0xB28 PUSH2 0x193E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xB3B SWAP2 SWAP1 PUSH2 0x199C JUMP JUMPDEST SWAP1 POP PUSH32 0xB46FCED3A6DF62223B1457DD73F5A2B175FCAA90E8B757F5EF3DCB74D6794645 DUP2 PUSH1 0x40 MLOAD PUSH2 0xB6C SWAP2 SWAP1 PUSH2 0x1383 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH1 0x20 ADD MLOAD GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDC08706D CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEE SWAP2 SWAP1 PUSH2 0xE39 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC0B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC2F SWAP2 SWAP1 PUSH2 0x1796 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0xC78 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC6F SWAP1 PUSH2 0x1A19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0xFF AND DUP2 MSTORE POP PUSH1 0x6 PUSH1 0x0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 0x2A2A0E30BE66D7708FCC027C3528F84A6E08918887209091C74BEC2387CB0C2E CALLER DUP4 PUSH1 0x7 SLOAD DUP5 PUSH1 0x40 MLOAD PUSH2 0xD96 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xDB1 SWAP1 PUSH2 0x1639 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDD7 DUP2 PUSH2 0xDBA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDF2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDCE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE23 DUP3 PUSH2 0xDF8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE33 DUP2 PUSH2 0xE18 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE4E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE2A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE69 DUP2 PUSH2 0xE54 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE84 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE60 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEB1 DUP2 PUSH2 0xE9E JUMP JUMPDEST DUP2 EQ PUSH2 0xEBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xECE DUP2 PUSH2 0xEA8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xF22 DUP3 PUSH2 0xED9 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xF41 JUMPI PUSH2 0xF40 PUSH2 0xEEA JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF54 PUSH2 0xE8A JUMP JUMPDEST SWAP1 POP PUSH2 0xF60 DUP3 DUP3 PUSH2 0xF19 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xF80 JUMPI PUSH2 0xF7F PUSH2 0xEEA JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xFA9 PUSH2 0xFA4 DUP5 PUSH2 0xF65 JUMP JUMPDEST PUSH2 0xF4A JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xFCC JUMPI PUSH2 0xFCB PUSH2 0xF91 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xFF5 JUMPI DUP1 PUSH2 0xFE1 DUP9 DUP3 PUSH2 0xEBF JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xFCE JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1014 JUMPI PUSH2 0x1013 PUSH2 0xED4 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1024 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xF96 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1044 JUMPI PUSH2 0x1043 PUSH2 0xE94 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1052 DUP6 DUP3 DUP7 ADD PUSH2 0xEBF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1073 JUMPI PUSH2 0x1072 PUSH2 0xE99 JUMP JUMPDEST JUMPDEST PUSH2 0x107F DUP6 DUP3 DUP7 ADD PUSH2 0xFFF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10A2 DUP2 PUSH2 0x1089 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10BD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1099 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x10DE JUMPI PUSH2 0x10DD PUSH2 0xED4 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10FB JUMPI PUSH2 0x10FA PUSH2 0x10C3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1117 JUMPI PUSH2 0x1116 PUSH2 0xF91 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1135 JUMPI PUSH2 0x1134 PUSH2 0xE94 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1153 JUMPI PUSH2 0x1152 PUSH2 0xE99 JUMP JUMPDEST JUMPDEST PUSH2 0x115F DUP6 DUP3 DUP7 ADD PUSH2 0x10C8 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1190 PUSH2 0x118B PUSH2 0x1186 DUP5 PUSH2 0xDF8 JUMP JUMPDEST PUSH2 0x116B JUMP JUMPDEST PUSH2 0xDF8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11A2 DUP3 PUSH2 0x1175 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11B4 DUP3 PUSH2 0x1197 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11C4 DUP2 PUSH2 0x11A9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11DF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x11BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11F8 DUP2 PUSH2 0x11E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1213 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x11EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1253 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1238 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x126A DUP3 PUSH2 0x1219 JUMP JUMPDEST PUSH2 0x1274 DUP2 DUP6 PUSH2 0x1224 JUMP JUMPDEST SWAP4 POP PUSH2 0x1284 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1235 JUMP JUMPDEST PUSH2 0x128D DUP2 PUSH2 0xED9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x12AD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xE60 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x12BF DUP2 DUP5 PUSH2 0x125F JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12DB DUP2 PUSH2 0x12C8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12F6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1313 JUMPI PUSH2 0x1312 PUSH2 0xE94 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1321 DUP6 DUP3 DUP7 ADD PUSH2 0xEBF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1332 DUP6 DUP3 DUP7 ADD PUSH2 0xEBF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1353 DUP2 PUSH2 0x133C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x136E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x134A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x137D DUP2 PUSH2 0xE9E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1398 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1374 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13B4 JUMPI PUSH2 0x13B3 PUSH2 0xE94 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13C2 DUP5 DUP3 DUP6 ADD PUSH2 0xEBF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13E1 DUP2 PUSH2 0x13CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x13FC PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0xE2A JUMP JUMPDEST PUSH2 0x1409 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1374 JUMP JUMPDEST PUSH2 0x1416 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xE60 JUMP JUMPDEST PUSH2 0x1423 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x13D8 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1442 JUMPI PUSH2 0x1441 PUSH2 0xED4 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x145F JUMPI PUSH2 0x145E PUSH2 0x10C3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x147B JUMPI PUSH2 0x147A PUSH2 0xF91 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1499 JUMPI PUSH2 0x1498 PUSH2 0xE94 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14B7 JUMPI PUSH2 0x14B6 PUSH2 0xE99 JUMP JUMPDEST JUMPDEST PUSH2 0x14C3 DUP6 DUP3 DUP7 ADD PUSH2 0x142C JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x14E4 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xE2A JUMP JUMPDEST PUSH2 0x14F1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE2A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F206C6F616E73206578697374000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x153F PUSH1 0xE DUP4 PUSH2 0x14F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x154A DUP3 PUSH2 0x1509 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x156E DUP2 PUSH2 0x1532 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x158A PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x11EF JUMP JUMPDEST PUSH2 0x1597 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0xDCE JUMP JUMPDEST PUSH2 0x15A4 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x134A JUMP JUMPDEST PUSH2 0x15B1 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1099 JUMP JUMPDEST PUSH2 0x15BE PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1099 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x15D7 DUP2 PUSH2 0xEA8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15F3 JUMPI PUSH2 0x15F2 PUSH2 0xE94 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1601 DUP5 DUP3 DUP6 ADD PUSH2 0x15C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1644 DUP3 PUSH2 0xE9E JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1676 JUMPI PUSH2 0x1675 PUSH2 0x160A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16A0 DUP2 PUSH2 0x1681 JUMP JUMPDEST DUP2 EQ PUSH2 0x16AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x16BD DUP2 PUSH2 0x1697 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16CC DUP2 PUSH2 0x12C8 JUMP JUMPDEST DUP2 EQ PUSH2 0x16D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x16E9 DUP2 PUSH2 0x16C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x170B JUMPI PUSH2 0x170A PUSH2 0xE94 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1719 DUP9 DUP3 DUP10 ADD PUSH2 0x16AE JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x172A DUP9 DUP3 DUP10 ADD PUSH2 0x16DA JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x173B DUP9 DUP3 DUP10 ADD PUSH2 0x15C8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x174C DUP9 DUP3 DUP10 ADD PUSH2 0x15C8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x175D DUP9 DUP3 DUP10 ADD PUSH2 0x16AE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x1773 DUP2 PUSH2 0x13CB JUMP JUMPDEST DUP2 EQ PUSH2 0x177E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1790 DUP2 PUSH2 0x176A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17AC JUMPI PUSH2 0x17AB PUSH2 0xE94 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17BA DUP5 DUP3 DUP6 ADD PUSH2 0x1781 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5269736B20746F6F20686967682028617070726F76616C290000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17F9 PUSH1 0x18 DUP4 PUSH2 0x14F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1804 DUP3 PUSH2 0x17C3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1828 DUP2 PUSH2 0x17EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1844 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1374 JUMP JUMPDEST PUSH2 0x1851 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1374 JUMP JUMPDEST PUSH2 0x185E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xE2A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x416C726561647920726570616964000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x189C PUSH1 0xE DUP4 PUSH2 0x14F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x18A7 DUP3 PUSH2 0x1866 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x18CB DUP2 PUSH2 0x188F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792043434950526F757465720000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1908 PUSH1 0xF DUP4 PUSH2 0x14F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1913 DUP3 PUSH2 0x18D2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1937 DUP2 PUSH2 0x18FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x19A7 DUP3 PUSH2 0xE9E JUMP JUMPDEST SWAP2 POP PUSH2 0x19B2 DUP4 PUSH2 0xE9E JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x19C2 JUMPI PUSH2 0x19C1 PUSH2 0x196D JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5269736B20746F6F206869676800000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A03 PUSH1 0xD DUP4 PUSH2 0x14F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A0E DUP3 PUSH2 0x19CD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A32 DUP2 PUSH2 0x19F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1A4E PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0xE2A JUMP JUMPDEST PUSH2 0x1A5B PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1374 JUMP JUMPDEST PUSH2 0x1A68 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1374 JUMP JUMPDEST PUSH2 0x1A75 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x13D8 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 JUMP LOG2 0xAE CALLER 0xE1 CREATE DUP12 0xC9 SLT MSIZE DUP5 0x25 0x4B CALLVALUE 0xF7 0xF6 0x4E RETURNDATACOPY AND SHR DUP6 0xB8 JUMPDEST SHR 0xB7 0xC7 SELFBALANCE SWAP5 XOR MSIZE 0x4D PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"574:4155:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;868:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;739:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2978:128;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6794:256:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;903:39:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4199:281;;;:::i;:::-;;3649:177;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;699:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;839:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3306:335;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;3114:143;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;994:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2455:296;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;949:38;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1223:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3958:193;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1179:37;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;2759:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;868:28;;;;;;;;;;;;;:::o;739:25::-;;;;;;;;;;;;;:::o;2978:128::-;3024:4;3048;3041:11;;2978:128;:::o;6794:256:4:-;6907:14;6893:28;;:10;:28;;;6889:109;;6964:10;6976:14;6938:53;;;;;;;;;;;;:::i;:::-;;;;;;;;6889:109;7003:42;7022:9;7033:11;7003:18;:42::i;:::-;6794:256;;:::o;903:39:25:-;;;;;;;;;;;;;:::o;4199:281::-;4260:1;4251:6;;:10;4243:37;;;;;;;;;;;;:::i;:::-;;;;;;;;;4291:11;;;;;;;;;;;:30;;;4336:7;;4358:14;;;;;;;;;;;4387:20;;;;;;;;;;;4422:16;;;;;;;;;;;4453:8;;;;;;;;;;;4291:181;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4199:281::o;3649:177::-;3729:17;3760:11;;3749:34;;;;;;;:::i;:::-;3729:54;;3794:24;3808:9;3794:13;:24::i;:::-;3718:108;3649:177;;:::o;699:33::-;;;;;;;;;;;;;:::o;839:22::-;;;;:::o;3306:335::-;3375:17;3394:24;3436:9;3431:174;3455:6;;3451:1;:10;3431:174;;;3488:5;:8;3494:1;3488:8;;;;;;;;;;;:15;;;;;;;;;;;;3487:16;:42;;;;;3507:22;3520:5;:8;3526:1;3520:8;;;;;;;;;;;3507:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:12;:22::i;:::-;3487:42;3483:111;;;3558:4;3575:1;3564:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;3550:28;;;;;;;3483:111;3463:3;;;;;:::i;:::-;;;;3431:174;;;;3623:5;3615:18;;;;;;;;;;;;;;;;3306:335;;;;;;:::o;3114:143::-;3164:3;3183:9;3199;;;;;;;;;;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3180:46;;;;;;3244:5;3237:12;;;3114:143;:::o;994:26::-;;;;;;;;;;;;;:::o;2455:296::-;2537:14;2554:11;;;;;;;;;;;:24;;;2579:10;2554:36;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2537:53;;2621:1;2609:8;:13;;;;2601:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;2662:14;2669:6;2662;:14::i;:::-;2692:51;2715:7;2724:6;2732:10;2692:51;;;;;;;;:::i;:::-;;;;;;;;2526:225;2455:296;;:::o;949:38::-;;;;;;;;;;;;;:::o;1223:21::-;;;;:::o;3958:193::-;4025:5;:14;4031:7;4025:14;;;;;;;;;;;:21;;;;;;;;;;;;4024:22;4016:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;4100:4;4076:5;:14;4082:7;4076:14;;;;;;;;;;;:21;;;:28;;;;;;;;;;;;;;;;;;4120:23;4135:7;4120:23;;;;;;:::i;:::-;;;;;;;;3958:193;:::o;1179:37::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2759:178::-;2857:10;;;;;;;;;;;2843:24;;:10;:24;;;2835:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;2759:178;;:::o;4488:238::-;4584:16;4620:6;;4603:11;4615:1;4603:14;;;;;;;;:::i;:::-;;;;;;;;:23;;;;:::i;:::-;4584:42;;4642:28;4661:8;4642:28;;;;;;:::i;:::-;;;;;;;;4573:153;4488:238;;:::o;3834:116::-;3897:4;3935:7;3921:4;:11;;;:21;3914:28;;3834:116;;;:::o;2118:329::-;2170:14;2187:11;;;;;;;;;;;:24;;;2212:10;2187:36;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2170:53;;2254:1;2242:8;:13;;;;2234:39;;;;;;;;;;;;:::i;:::-;;;;;;;;;2315:41;;;;;;;;2320:10;2315:41;;;;;;2332:6;2315:41;;;;2340:5;2315:41;;;;;;2347:8;2315:41;;;;;2299:5;:13;2305:6;;2299:13;;;;;;;;;;;:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2372:48;2383:10;2395:6;2403;;2411:8;2372:48;;;;;;;;;:::i;:::-;;;;;;;;2431:6;;:8;;;;;;;;;:::i;:::-;;;;;;2159:288;2118:329;:::o;7:101:26:-;43:7;83:18;76:5;72:30;61:41;;7:101;;;:::o;114:115::-;199:23;216:5;199:23;:::i;:::-;194:3;187:36;114:115;;:::o;235:218::-;326:4;364:2;353:9;349:18;341:26;;377:69;443:1;432:9;428:17;419:6;377:69;:::i;:::-;235:218;;;;:::o;459:126::-;496:7;536:42;529:5;525:54;514:65;;459:126;;;:::o;591:96::-;628:7;657:24;675:5;657:24;:::i;:::-;646:35;;591:96;;;:::o;693:118::-;780:24;798:5;780:24;:::i;:::-;775:3;768:37;693:118;;:::o;817:222::-;910:4;948:2;937:9;933:18;925:26;;961:71;1029:1;1018:9;1014:17;1005:6;961:71;:::i;:::-;817:222;;;;:::o;1045:90::-;1079:7;1122:5;1115:13;1108:21;1097:32;;1045:90;;;:::o;1141:109::-;1222:21;1237:5;1222:21;:::i;:::-;1217:3;1210:34;1141:109;;:::o;1256:210::-;1343:4;1381:2;1370:9;1366:18;1358:26;;1394:65;1456:1;1445:9;1441:17;1432:6;1394:65;:::i;:::-;1256:210;;;;:::o;1472:75::-;1505:6;1538:2;1532:9;1522:19;;1472:75;:::o;1553:117::-;1662:1;1659;1652:12;1676:117;1785:1;1782;1775:12;1799:77;1836:7;1865:5;1854:16;;1799:77;;;:::o;1882:122::-;1955:24;1973:5;1955:24;:::i;:::-;1948:5;1945:35;1935:63;;1994:1;1991;1984:12;1935:63;1882:122;:::o;2010:139::-;2056:5;2094:6;2081:20;2072:29;;2110:33;2137:5;2110:33;:::i;:::-;2010:139;;;;:::o;2155:117::-;2264:1;2261;2254:12;2278:102;2319:6;2370:2;2366:7;2361:2;2354:5;2350:14;2346:28;2336:38;;2278:102;;;:::o;2386:180::-;2434:77;2431:1;2424:88;2531:4;2528:1;2521:15;2555:4;2552:1;2545:15;2572:281;2655:27;2677:4;2655:27;:::i;:::-;2647:6;2643:40;2785:6;2773:10;2770:22;2749:18;2737:10;2734:34;2731:62;2728:88;;;2796:18;;:::i;:::-;2728:88;2836:10;2832:2;2825:22;2615:238;2572:281;;:::o;2859:129::-;2893:6;2920:20;;:::i;:::-;2910:30;;2949:33;2977:4;2969:6;2949:33;:::i;:::-;2859:129;;;:::o;2994:311::-;3071:4;3161:18;3153:6;3150:30;3147:56;;;3183:18;;:::i;:::-;3147:56;3233:4;3225:6;3221:17;3213:25;;3293:4;3287;3283:15;3275:23;;2994:311;;;:::o;3311:117::-;3420:1;3417;3410:12;3451:710;3547:5;3572:81;3588:64;3645:6;3588:64;:::i;:::-;3572:81;:::i;:::-;3563:90;;3673:5;3702:6;3695:5;3688:21;3736:4;3729:5;3725:16;3718:23;;3789:4;3781:6;3777:17;3769:6;3765:30;3818:3;3810:6;3807:15;3804:122;;;3837:79;;:::i;:::-;3804:122;3952:6;3935:220;3969:6;3964:3;3961:15;3935:220;;;4044:3;4073:37;4106:3;4094:10;4073:37;:::i;:::-;4068:3;4061:50;4140:4;4135:3;4131:14;4124:21;;4011:144;3995:4;3990:3;3986:14;3979:21;;3935:220;;;3939:21;3553:608;;3451:710;;;;;:::o;4184:370::-;4255:5;4304:3;4297:4;4289:6;4285:17;4281:27;4271:122;;4312:79;;:::i;:::-;4271:122;4429:6;4416:20;4454:94;4544:3;4536:6;4529:4;4521:6;4517:17;4454:94;:::i;:::-;4445:103;;4261:293;4184:370;;;;:::o;4560:684::-;4653:6;4661;4710:2;4698:9;4689:7;4685:23;4681:32;4678:119;;;4716:79;;:::i;:::-;4678:119;4836:1;4861:53;4906:7;4897:6;4886:9;4882:22;4861:53;:::i;:::-;4851:63;;4807:117;4991:2;4980:9;4976:18;4963:32;5022:18;5014:6;5011:30;5008:117;;;5044:79;;:::i;:::-;5008:117;5149:78;5219:7;5210:6;5199:9;5195:22;5149:78;:::i;:::-;5139:88;;4934:303;4560:684;;;;;:::o;5250:93::-;5286:7;5326:10;5319:5;5315:22;5304:33;;5250:93;;;:::o;5349:115::-;5434:23;5451:5;5434:23;:::i;:::-;5429:3;5422:36;5349:115;;:::o;5470:218::-;5561:4;5599:2;5588:9;5584:18;5576:26;;5612:69;5678:1;5667:9;5663:17;5654:6;5612:69;:::i;:::-;5470:218;;;;:::o;5694:117::-;5803:1;5800;5793:12;5830:552;5887:8;5897:6;5947:3;5940:4;5932:6;5928:17;5924:27;5914:122;;5955:79;;:::i;:::-;5914:122;6068:6;6055:20;6045:30;;6098:18;6090:6;6087:30;6084:117;;;6120:79;;:::i;:::-;6084:117;6234:4;6226:6;6222:17;6210:29;;6288:3;6280:4;6272:6;6268:17;6258:8;6254:32;6251:41;6248:128;;;6295:79;;:::i;:::-;6248:128;5830:552;;;;;:::o;6388:527::-;6458:6;6466;6515:2;6503:9;6494:7;6490:23;6486:32;6483:119;;;6521:79;;:::i;:::-;6483:119;6669:1;6658:9;6654:17;6641:31;6699:18;6691:6;6688:30;6685:117;;;6721:79;;:::i;:::-;6685:117;6834:64;6890:7;6881:6;6870:9;6866:22;6834:64;:::i;:::-;6816:82;;;;6612:296;6388:527;;;;;:::o;6921:60::-;6949:3;6970:5;6963:12;;6921:60;;;:::o;6987:142::-;7037:9;7070:53;7088:34;7097:24;7115:5;7097:24;:::i;:::-;7088:34;:::i;:::-;7070:53;:::i;:::-;7057:66;;6987:142;;;:::o;7135:126::-;7185:9;7218:37;7249:5;7218:37;:::i;:::-;7205:50;;7135:126;;;:::o;7267:149::-;7340:9;7373:37;7404:5;7373:37;:::i;:::-;7360:50;;7267:149;;;:::o;7422:177::-;7532:60;7586:5;7532:60;:::i;:::-;7527:3;7520:73;7422:177;;:::o;7605:268::-;7721:4;7759:2;7748:9;7744:18;7736:26;;7772:94;7863:1;7852:9;7848:17;7839:6;7772:94;:::i;:::-;7605:268;;;;:::o;7879:77::-;7916:7;7945:5;7934:16;;7879:77;;;:::o;7962:118::-;8049:24;8067:5;8049:24;:::i;:::-;8044:3;8037:37;7962:118;;:::o;8086:222::-;8179:4;8217:2;8206:9;8202:18;8194:26;;8230:71;8298:1;8287:9;8283:17;8274:6;8230:71;:::i;:::-;8086:222;;;;:::o;8314:98::-;8365:6;8399:5;8393:12;8383:22;;8314:98;;;:::o;8418:168::-;8501:11;8535:6;8530:3;8523:19;8575:4;8570:3;8566:14;8551:29;;8418:168;;;;:::o;8592:246::-;8673:1;8683:113;8697:6;8694:1;8691:13;8683:113;;;8782:1;8777:3;8773:11;8767:18;8763:1;8758:3;8754:11;8747:39;8719:2;8716:1;8712:10;8707:15;;8683:113;;;8830:1;8821:6;8816:3;8812:16;8805:27;8654:184;8592:246;;;:::o;8844:373::-;8930:3;8958:38;8990:5;8958:38;:::i;:::-;9012:70;9075:6;9070:3;9012:70;:::i;:::-;9005:77;;9091:65;9149:6;9144:3;9137:4;9130:5;9126:16;9091:65;:::i;:::-;9181:29;9203:6;9181:29;:::i;:::-;9176:3;9172:39;9165:46;;8934:283;8844:373;;;;:::o;9223:407::-;9356:4;9394:2;9383:9;9379:18;9371:26;;9407:65;9469:1;9458:9;9454:17;9445:6;9407:65;:::i;:::-;9519:9;9513:4;9509:20;9504:2;9493:9;9489:18;9482:48;9547:76;9618:4;9609:6;9547:76;:::i;:::-;9539:84;;9223:407;;;;;:::o;9636:76::-;9672:7;9701:5;9690:16;;9636:76;;;:::o;9718:115::-;9803:23;9820:5;9803:23;:::i;:::-;9798:3;9791:36;9718:115;;:::o;9839:218::-;9930:4;9968:2;9957:9;9953:18;9945:26;;9981:69;10047:1;10036:9;10032:17;10023:6;9981:69;:::i;:::-;9839:218;;;;:::o;10063:474::-;10131:6;10139;10188:2;10176:9;10167:7;10163:23;10159:32;10156:119;;;10194:79;;:::i;:::-;10156:119;10314:1;10339:53;10384:7;10375:6;10364:9;10360:22;10339:53;:::i;:::-;10329:63;;10285:117;10441:2;10467:53;10512:7;10503:6;10492:9;10488:22;10467:53;:::i;:::-;10457:63;;10412:118;10063:474;;;;;:::o;10543:89::-;10579:7;10619:6;10612:5;10608:18;10597:29;;10543:89;;;:::o;10638:115::-;10723:23;10740:5;10723:23;:::i;:::-;10718:3;10711:36;10638:115;;:::o;10759:218::-;10850:4;10888:2;10877:9;10873:18;10865:26;;10901:69;10967:1;10956:9;10952:17;10943:6;10901:69;:::i;:::-;10759:218;;;;:::o;10983:118::-;11070:24;11088:5;11070:24;:::i;:::-;11065:3;11058:37;10983:118;;:::o;11107:222::-;11200:4;11238:2;11227:9;11223:18;11215:26;;11251:71;11319:1;11308:9;11304:17;11295:6;11251:71;:::i;:::-;11107:222;;;;:::o;11335:329::-;11394:6;11443:2;11431:9;11422:7;11418:23;11414:32;11411:119;;;11449:79;;:::i;:::-;11411:119;11569:1;11594:53;11639:7;11630:6;11619:9;11615:22;11594:53;:::i;:::-;11584:63;;11540:117;11335:329;;;;:::o;11670:86::-;11705:7;11745:4;11738:5;11734:16;11723:27;;11670:86;;;:::o;11762:112::-;11845:22;11861:5;11845:22;:::i;:::-;11840:3;11833:35;11762:112;;:::o;11880:533::-;12047:4;12085:3;12074:9;12070:19;12062:27;;12099:71;12167:1;12156:9;12152:17;12143:6;12099:71;:::i;:::-;12180:72;12248:2;12237:9;12233:18;12224:6;12180:72;:::i;:::-;12262:66;12324:2;12313:9;12309:18;12300:6;12262:66;:::i;:::-;12338:68;12402:2;12391:9;12387:18;12378:6;12338:68;:::i;:::-;11880:533;;;;;;;:::o;12433:553::-;12491:8;12501:6;12551:3;12544:4;12536:6;12532:17;12528:27;12518:122;;12559:79;;:::i;:::-;12518:122;12672:6;12659:20;12649:30;;12702:18;12694:6;12691:30;12688:117;;;12724:79;;:::i;:::-;12688:117;12838:4;12830:6;12826:17;12814:29;;12892:3;12884:4;12876:6;12872:17;12862:8;12858:32;12855:41;12852:128;;;12899:79;;:::i;:::-;12852:128;12433:553;;;;;:::o;12992:529::-;13063:6;13071;13120:2;13108:9;13099:7;13095:23;13091:32;13088:119;;;13126:79;;:::i;:::-;13088:119;13274:1;13263:9;13259:17;13246:31;13304:18;13296:6;13293:30;13290:117;;;13326:79;;:::i;:::-;13290:117;13439:65;13496:7;13487:6;13476:9;13472:22;13439:65;:::i;:::-;13421:83;;;;13217:297;12992:529;;;;;:::o;13527:332::-;13648:4;13686:2;13675:9;13671:18;13663:26;;13699:71;13767:1;13756:9;13752:17;13743:6;13699:71;:::i;:::-;13780:72;13848:2;13837:9;13833:18;13824:6;13780:72;:::i;:::-;13527:332;;;;;:::o;13865:169::-;13949:11;13983:6;13978:3;13971:19;14023:4;14018:3;14014:14;13999:29;;13865:169;;;;:::o;14040:164::-;14180:16;14176:1;14168:6;14164:14;14157:40;14040:164;:::o;14210:366::-;14352:3;14373:67;14437:2;14432:3;14373:67;:::i;:::-;14366:74;;14449:93;14538:3;14449:93;:::i;:::-;14567:2;14562:3;14558:12;14551:19;;14210:366;;;:::o;14582:419::-;14748:4;14786:2;14775:9;14771:18;14763:26;;14835:9;14829:4;14825:20;14821:1;14810:9;14806:17;14799:47;14863:131;14989:4;14863:131;:::i;:::-;14855:139;;14582:419;;;:::o;15007:648::-;15204:4;15242:3;15231:9;15227:19;15219:27;;15256:71;15324:1;15313:9;15309:17;15300:6;15256:71;:::i;:::-;15337:70;15403:2;15392:9;15388:18;15379:6;15337:70;:::i;:::-;15417;15483:2;15472:9;15468:18;15459:6;15417:70;:::i;:::-;15497;15563:2;15552:9;15548:18;15539:6;15497:70;:::i;:::-;15577:71;15643:3;15632:9;15628:19;15619:6;15577:71;:::i;:::-;15007:648;;;;;;;;:::o;15661:143::-;15718:5;15749:6;15743:13;15734:22;;15765:33;15792:5;15765:33;:::i;:::-;15661:143;;;;:::o;15810:351::-;15880:6;15929:2;15917:9;15908:7;15904:23;15900:32;15897:119;;;15935:79;;:::i;:::-;15897:119;16055:1;16080:64;16136:7;16127:6;16116:9;16112:22;16080:64;:::i;:::-;16070:74;;16026:128;15810:351;;;;:::o;16167:180::-;16215:77;16212:1;16205:88;16312:4;16309:1;16302:15;16336:4;16333:1;16326:15;16353:233;16392:3;16415:24;16433:5;16415:24;:::i;:::-;16406:33;;16461:66;16454:5;16451:77;16448:103;;16531:18;;:::i;:::-;16448:103;16578:1;16571:5;16567:13;16560:20;;16353:233;;;:::o;16592:105::-;16628:7;16668:22;16661:5;16657:34;16646:45;;16592:105;;;:::o;16703:120::-;16775:23;16792:5;16775:23;:::i;:::-;16768:5;16765:34;16755:62;;16813:1;16810;16803:12;16755:62;16703:120;:::o;16829:141::-;16885:5;16916:6;16910:13;16901:22;;16932:32;16958:5;16932:32;:::i;:::-;16829:141;;;;:::o;16976:120::-;17048:23;17065:5;17048:23;:::i;:::-;17041:5;17038:34;17028:62;;17086:1;17083;17076:12;17028:62;16976:120;:::o;17102:141::-;17158:5;17189:6;17183:13;17174:22;;17205:32;17231:5;17205:32;:::i;:::-;17102:141;;;;:::o;17249:971::-;17352:6;17360;17368;17376;17384;17433:3;17421:9;17412:7;17408:23;17404:33;17401:120;;;17440:79;;:::i;:::-;17401:120;17560:1;17585:63;17640:7;17631:6;17620:9;17616:22;17585:63;:::i;:::-;17575:73;;17531:127;17697:2;17723:63;17778:7;17769:6;17758:9;17754:22;17723:63;:::i;:::-;17713:73;;17668:128;17835:2;17861:64;17917:7;17908:6;17897:9;17893:22;17861:64;:::i;:::-;17851:74;;17806:129;17974:2;18000:64;18056:7;18047:6;18036:9;18032:22;18000:64;:::i;:::-;17990:74;;17945:129;18113:3;18140:63;18195:7;18186:6;18175:9;18171:22;18140:63;:::i;:::-;18130:73;;18084:129;17249:971;;;;;;;;:::o;18226:118::-;18297:22;18313:5;18297:22;:::i;:::-;18290:5;18287:33;18277:61;;18334:1;18331;18324:12;18277:61;18226:118;:::o;18350:139::-;18405:5;18436:6;18430:13;18421:22;;18452:31;18477:5;18452:31;:::i;:::-;18350:139;;;;:::o;18495:347::-;18563:6;18612:2;18600:9;18591:7;18587:23;18583:32;18580:119;;;18618:79;;:::i;:::-;18580:119;18738:1;18763:62;18817:7;18808:6;18797:9;18793:22;18763:62;:::i;:::-;18753:72;;18709:126;18495:347;;;;:::o;18848:174::-;18988:26;18984:1;18976:6;18972:14;18965:50;18848:174;:::o;19028:366::-;19170:3;19191:67;19255:2;19250:3;19191:67;:::i;:::-;19184:74;;19267:93;19356:3;19267:93;:::i;:::-;19385:2;19380:3;19376:12;19369:19;;19028:366;;;:::o;19400:419::-;19566:4;19604:2;19593:9;19589:18;19581:26;;19653:9;19647:4;19643:20;19639:1;19628:9;19624:17;19617:47;19681:131;19807:4;19681:131;:::i;:::-;19673:139;;19400:419;;;:::o;19825:442::-;19974:4;20012:2;20001:9;19997:18;19989:26;;20025:71;20093:1;20082:9;20078:17;20069:6;20025:71;:::i;:::-;20106:72;20174:2;20163:9;20159:18;20150:6;20106:72;:::i;:::-;20188;20256:2;20245:9;20241:18;20232:6;20188:72;:::i;:::-;19825:442;;;;;;:::o;20273:164::-;20413:16;20409:1;20401:6;20397:14;20390:40;20273:164;:::o;20443:366::-;20585:3;20606:67;20670:2;20665:3;20606:67;:::i;:::-;20599:74;;20682:93;20771:3;20682:93;:::i;:::-;20800:2;20795:3;20791:12;20784:19;;20443:366;;;:::o;20815:419::-;20981:4;21019:2;21008:9;21004:18;20996:26;;21068:9;21062:4;21058:20;21054:1;21043:9;21039:17;21032:47;21096:131;21222:4;21096:131;:::i;:::-;21088:139;;20815:419;;;:::o;21240:165::-;21380:17;21376:1;21368:6;21364:14;21357:41;21240:165;:::o;21411:366::-;21553:3;21574:67;21638:2;21633:3;21574:67;:::i;:::-;21567:74;;21650:93;21739:3;21650:93;:::i;:::-;21768:2;21763:3;21759:12;21752:19;;21411:366;;;:::o;21783:419::-;21949:4;21987:2;21976:9;21972:18;21964:26;;22036:9;22030:4;22026:20;22022:1;22011:9;22007:17;22000:47;22064:131;22190:4;22064:131;:::i;:::-;22056:139;;21783:419;;;:::o;22208:180::-;22256:77;22253:1;22246:88;22353:4;22350:1;22343:15;22377:4;22374:1;22367:15;22394:180;22442:77;22439:1;22432:88;22539:4;22536:1;22529:15;22563:4;22560:1;22553:15;22580:176;22612:1;22629:20;22647:1;22629:20;:::i;:::-;22624:25;;22663:20;22681:1;22663:20;:::i;:::-;22658:25;;22702:1;22692:35;;22707:18;;:::i;:::-;22692:35;22748:1;22745;22741:9;22736:14;;22580:176;;;;:::o;22762:163::-;22902:15;22898:1;22890:6;22886:14;22879:39;22762:163;:::o;22931:366::-;23073:3;23094:67;23158:2;23153:3;23094:67;:::i;:::-;23087:74;;23170:93;23259:3;23170:93;:::i;:::-;23288:2;23283:3;23279:12;23272:19;;22931:366;;;:::o;23303:419::-;23469:4;23507:2;23496:9;23492:18;23484:26;;23556:9;23550:4;23546:20;23542:1;23531:9;23527:17;23520:47;23584:131;23710:4;23584:131;:::i;:::-;23576:139;;23303:419;;;:::o;23728:545::-;23901:4;23939:3;23928:9;23924:19;23916:27;;23953:71;24021:1;24010:9;24006:17;23997:6;23953:71;:::i;:::-;24034:72;24102:2;24091:9;24087:18;24078:6;24034:72;:::i;:::-;24116;24184:2;24173:9;24169:18;24160:6;24116:72;:::i;:::-;24198:68;24262:2;24251:9;24247:18;24238:6;24198:68;:::i;:::-;23728:545;;;;;;;:::o"},"methodIdentifiers":{"callbackGasLimit()":"24f74697","ccipRouter()":"0de22984","checkHealth()":"1753bbd7","checkUpkeep(bytes)":"6e04ff0d","getLatestETHPrice()":"777e0d86","keyHash()":"61728f39","liquidateLoan(uint256)":"ccdd9f5d","loanId()":"c95669a5","loans(uint256)":"e1ec3c68","numWords()":"7ccfd7fc","performUpkeep(bytes)":"4585e33b","rawFulfillRandomWords(uint256,uint256[])":"1fe543e3","receiveCrossChainMessage(string)":"e86490e2","receiveLoanApproval(uint256,uint256)":"86fcdc19","requestAudit()":"2bdf0038","requestConfirmations()":"b0fb162f","riskManager()":"47842663","subscriptionId()":"09c1ba2e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_riskManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_ccipRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_vrfCoordinator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"_subscriptionId\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"}],\"name\":\"CrossChainLoanApproval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"riskTier\",\"type\":\"uint8\"}],\"name\":\"LoanIssued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"LoanLiquidated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"selectedLoanId\",\"type\":\"uint256\"}],\"name\":\"RandomLoanSelected\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"callbackGasLimit\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ccipRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkHealth\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestETHPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"keyHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_loanId\",\"type\":\"uint256\"}],\"name\":\"liquidateLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"loanId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"loans\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"repaid\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"riskTier\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numWords\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"receiveCrossChainMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"receiveLoanApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestAudit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestConfirmations\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"riskManager\",\"outputs\":[{\"internalType\":\"contract IAIRiskManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"subscriptionId\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"performUpkeep(bytes)\":{\"details\":\"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.\",\"params\":{\"performData\":\"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"performUpkeep(bytes)\":{\"notice\":\"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/VaultCore.sol\":\"VaultCore\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":{\"keccak256\":\"0x8c97744adc25cf30d1a2509bff6c0ddc9b36feb75f8e38c85d5c62b8ec773159\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c53c8736dacbf8c517c63937d556c3e4873a62f509c5d84b89e32fc5c9c6c2c\",\"dweb:/ipfs/QmeR6RSce5dTDcPgbwBnG7E8U89716bqsUcv1NeWnX5RJf\"]},\"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\":{\"keccak256\":\"0xce623f3e7fa4addf240032d2817b2b489ac08e79fae14a5cc5850ed3f1acddf8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0546b2739f3989b897c5cb591d01211e2db22e1a8578f68117f1a8a692abd85c\",\"dweb:/ipfs/QmW6guw8uUk2Dq49PWdjeZeEvnDDRg3CVX2BVcVNcT6QNL\"]},\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0xf504b227c442cd4ed31b336b7bd15cfcb23220c84c26e750975c7e7d959125aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34e35eb46dfadf12396e92dd970547209dfd99f0ae5b1ec7b5a3e81617f620a1\",\"dweb:/ipfs/Qmanoi2CDi9MwkP44HosagvewfMEvCMN1YthGRmCexVjwY\"]},\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d39e11b1dc7b9b8ccdabbc9be442ab7cda4a81c748f57e316dcb1bcb4a28bf9\",\"dweb:/ipfs/QmaG6vz6W6iEUBsbHSBob5mdcitYxWjoygxREHpsJHfWrS\"]},\"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":{\"keccak256\":\"0x5a502a5ce16796565815b295bb2d18a0d26d6f23621f733918c971047c6091d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f03385e076f6c2ad534bffe7c655cf259242e0f133f0ebfd56f914c0dde4a3f4\",\"dweb:/ipfs/QmWkQVSoAoRu1LXQTfDeic9QESjQkjT4G5Kt1VptTaxQDP\"]},\"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol\":{\"keccak256\":\"0x619d9d975540d65ef8d6332a67cbd0dda5b0f95b120b8da56695ed50c2f9fc30\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d13e94e2c3a7e72241c0f10684274b9509d005bc50b247a8a2442b0c12760bc1\",\"dweb:/ipfs/QmXxTc8ngzwFX9RbSe9Fuso8sSScHDUBfgyTvBcgstJiKt\"]},\"contracts/VaultCore.sol\":{\"keccak256\":\"0x700d0ea66124777c0d45b2da573d3f7e1aabe564f120eaa4bac754a5e1ebd5bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0108466d2a69fe3d2de63fac16b085bc7cb27059ac6aa60b1c60ca01f857aeec\",\"dweb:/ipfs/QmXQdoeEKQaxS8wNMBpkTBU9JpD4SX3w4iKsdeiyxR9GZG\"]}},\"version\":1}"}}}}}